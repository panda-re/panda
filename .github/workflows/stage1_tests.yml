name: Stage 1- Tests
# Given a container with PANDA installed, run tests. Note jobs run in paralle
# TODO: cleanup after these all finish

on:
  repository_dispatch:
      types: [trigger-workflow-2]

jobs:
  taint_tests:
    if: github.repository  == 'panda-re/panda'
    runs-on: self-hosted

    strategy:
      matrix:
        target: [i386, x86_64]

    steps:
    # Given a container with PANDA installed at /panda, run the taint tests
    - name: Run taint tests inside current container
      run: >-
        docker run --name panda_test_${{ matrix.target }}_${GITHUB_RUN_ID}
        --mount type=bind,source=/home/panda/regdir/qcows/wheezy_panda2.qcow2,target=/home/panda/regdir/qcows/wheezy_panda2.qcow2
        --mount type=bind,source=/home/panda/regdir/qcows/bionic-server-cloudimg-amd64-noaslr-nokaslr.qcow2,target=/home/panda/regdir/qcows/bionic-server-cloudimg-amd64-noaslr-nokaslr.qcow2
        --user $(id -u):$(id -g)
        --rm -t "panda_local_${{ github.event.client_payload.sha }}" bash -c
        "git clone https://github.com/panda-re/panda_test;
        cd ./panda_test/tests/taint2;
        python3 taint2_multi_arch_record_or_replay.py --arch ${{ matrix.target }} --mode record;
        python3 taint2_multi_arch_record_or_replay.py --arch ${{ matrix.target }} --mode replay;
        sed -i '/^\s*$/d' taint2_log;
        if cat taint2_log; then echo 'Taint unit test log found!'; else echo 'Taint unit test log NOT found!' && exit 1; fi;
        echo -e '\nFailures:';
        if grep 'fail' taint2_log; then echo 'TEST FAILED!' && exit 1; else echo -e 'None.\nTEST PASSED!' && exit 0; fi"

  make_check:
    if: github.repository  == 'panda-re/panda'
    runs-on: self-hosted
    strategy:
      matrix:
        # See output from `make check-help`: we're just splitting `make check` into all the things it does
        # so we can run them in parallel: arch-specific qtests, plus a few others
        target: [check-qtest-x86_64, check-qtest-i386, check-qtest-arm, check-qtest-mips, check-qtest-mipsel, test-qtest-ppc,
        check-block, check-unit, check-qapi-schema]

    steps:
    - name: Run Individual QEMU tests
      run: >-
        docker run --name panda_test_${{ matrix.target }}_${GITHUB_RUN_ID}
        --user $(id -u):$(id -g)
        -e PANDA_TEST=yes --cap-add SYS_NICE
        --rm -t "panda_local_${{ github.event.client_payload.sha }}" bash -c
        "cd /panda/build && make ${{ matrix.target }}"

  Cleanup:
    # Cleanup after prior jobs finish - even if they fail
    needs: [taint_tests, make_check]
    #if: always()
    if: github.repository  == 'panda-re/panda'
    runs-on: self-hosted

    steps:
      # Note we leave the last 72hrs because caching is nice (first few panda image layers won't change often)
    - name: Cleanup images
      run: docker system prune -f --volumes --filter "until=72h"
