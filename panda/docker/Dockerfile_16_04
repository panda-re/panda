FROM ubuntu:16.04
RUN apt-get update

# Base packages required before we do anything else
RUN apt install -y lsb-core git

# Grab panda now and cache it. We'll pull later
RUN git clone https://github.com/panda-re/panda

# Figure out our release name (xenial, trusty, etc...) and set up env vars
ENV SOURCES_LIST="/etc/apt/sources.list"

# apt_enable_src: Enable src repos
RUN if grep -q "^[^#]*deb-src .* $codename .*main" "$SOURCES_LIST"; then \
       echo "deb-src already enabled in $SOURCES_LIST."; \
   else \
       echo "Enabling deb-src in $SOURCES_LIST."; \
       sed -E -i 's/^([^#]*) *# *deb-src (.*)/\1deb-src \2/' "$SOURCES_LIST"; \
   fi

RUN cat "$SOURCES_LIST"
# Installing qemu dependencies
RUN apt-get update
RUN apt-get -y build-dep qemu

# Install PANDA dependencies
RUN apt-get -y install python-pip git protobuf-compiler protobuf-c-compiler \
    libprotobuf-c0-dev libprotoc-dev python-protobuf libelf-dev libc++-dev pkg-config \
    libwiretap-dev libwireshark-dev flex bison python3-pip python3 software-properties-common \
    chrpath zip


ENV panda_ppa_file=/etc/apt/sources.list.d/phulin-ubuntu-panda-bionic.list
ENV panda_ppa_file_fallback=/etc/apt/sources.list.d/phulin-ubuntu-panda-xenial.list
ENV PANDA_PPA="ppa:phulin/panda"
ENV PANDA_GIT="https://github.com/panda-re/panda.git"
ENV PANDA_PPA="ppa:phulin/panda"
ENV LIBDWARF_GIT="git://git.code.sf.net/p/libdwarf/code"
ENV UBUNTU_FALLBACK="xenial"
ENV codename="bionic"
# Add custom PPA - Only supports trusty, xenial and yakkety 
RUN add-apt-repository -y "$PANDA_PPA"

# For other ubuntu versions, we're on bionic here
#RUN rm -f "$panda_ppa_file" "$panda_ppa_file_fallback"
#RUN add-apt-repository -y "$PANDA_PPA" || true
#RUN sed -i "s/$codename/$UBUNTU_FALLBACK/g" "$panda_ppa_file"
#RUN mv -f "$panda_ppa_file" "$panda_ppa_file_fallback"

RUN apt-get update
RUN apt-get -y install libcapstone-dev libdwarf-dev python-pycparser

# Trying to install LLVM 3.3...
RUN apt-get -y install llvm-3.3-dev clang-3.3

WORKDIR "/panda"
RUN git fetch -a
RUN git pull

# Trying to update DTC submodule (if necessary)...
RUN git submodule update --init dtc || true

RUN mkdir build

# Update repo - Run --build-arg DUMMY=`date` to force rebuild
ARG DUMMY=unknown
RUN DUMMY=${DUMMY} git pull

WORKDIR "/panda/build"
# build.sh logic, but simple because we're in a container
ENV TARGET_LIST="x86_64-softmmu,i386-softmmu,arm-softmmu,ppc-softmmu"
RUN rm -f ./qemu-options.def

# NUMA disabled in docker because I can't get it to work in the container
# If we extend this to build to produce binaries to run outside of docker, we should
# re-enable (or make another build) with numa
RUN ../configure \
    --target-list=$TARGET_LIST \
    --prefix=/ \
    --enable-llvm \
    --disable-numa \
    --with-llvm=/usr/lib/llvm-3.3 \
    --python=/usr/bin/python2 \
    --disable-vhost-net \
    --extra-cflags=-DXC_WANT_COMPAT_DEVICEMODEL_API

RUN make -j4
RUN make install
