// BEGIN_PYPANDA_NEEDS_THIS -- do not delete this comment bc pypanda
// api autogen needs it.  And don't put any compiler directives
// between this and END_PYPANDA_NEEDS_THIS except includes of other
// files in this directory that contain subsections like this one.
PPP_CB_TYPEDEF(void, on_NtAcceptConnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortContext, uint32_t ConnectionRequest, uint32_t AcceptConnection, uint32_t ServerView, uint32_t ClientView);
PPP_CB_TYPEDEF(void, on_NtAcceptConnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortContext, uint32_t ConnectionRequest, uint32_t AcceptConnection, uint32_t ServerView, uint32_t ClientView);
PPP_CB_TYPEDEF(void, on_NtAccessCheck_enter, CPUState* cpu, target_ulong pc, uint32_t SecurityDescriptor, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t GenericMapping, uint32_t PrivilegeSet, uint32_t PrivilegeSetLength, uint32_t GrantedAccess, uint32_t AccessStatus);
PPP_CB_TYPEDEF(void, on_NtAccessCheck_return, CPUState* cpu, target_ulong pc, uint32_t SecurityDescriptor, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t GenericMapping, uint32_t PrivilegeSet, uint32_t PrivilegeSetLength, uint32_t GrantedAccess, uint32_t AccessStatus);
PPP_CB_TYPEDEF(void, on_NtAccessCheckAndAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t DesiredAccess, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckAndAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t DesiredAccess, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByType_enter, CPUState* cpu, target_ulong pc, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t PrivilegeSet, uint32_t PrivilegeSetLength, uint32_t GrantedAccess, uint32_t AccessStatus);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByType_return, CPUState* cpu, target_ulong pc, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t PrivilegeSet, uint32_t PrivilegeSetLength, uint32_t GrantedAccess, uint32_t AccessStatus);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeAndAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t DesiredAccess, uint32_t AuditType, uint32_t Flags, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeAndAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t DesiredAccess, uint32_t AuditType, uint32_t Flags, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeResultList_enter, CPUState* cpu, target_ulong pc, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t PrivilegeSet, uint32_t PrivilegeSetLength, uint32_t GrantedAccess, uint32_t AccessStatus);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeResultList_return, CPUState* cpu, target_ulong pc, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t PrivilegeSet, uint32_t PrivilegeSetLength, uint32_t GrantedAccess, uint32_t AccessStatus);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeResultListAndAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t DesiredAccess, uint32_t AuditType, uint32_t Flags, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeResultListAndAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t DesiredAccess, uint32_t AuditType, uint32_t Flags, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeResultListAndAuditAlarmByHandle_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ClientToken, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t DesiredAccess, uint32_t AuditType, uint32_t Flags, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAccessCheckByTypeResultListAndAuditAlarmByHandle_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ClientToken, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t PrincipalSelfSid, uint32_t DesiredAccess, uint32_t AuditType, uint32_t Flags, uint32_t ObjectTypeList, uint32_t ObjectTypeListLength, uint32_t GenericMapping, uint32_t ObjectCreation, uint32_t GrantedAccess, uint32_t AccessStatus, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtAddAtom_enter, CPUState* cpu, target_ulong pc, uint32_t AtomName, uint32_t Length, uint32_t Atom);
PPP_CB_TYPEDEF(void, on_NtAddAtom_return, CPUState* cpu, target_ulong pc, uint32_t AtomName, uint32_t Length, uint32_t Atom);
PPP_CB_TYPEDEF(void, on_NtAddBootEntry_enter, CPUState* cpu, target_ulong pc, uint32_t BootEntry, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtAddBootEntry_return, CPUState* cpu, target_ulong pc, uint32_t BootEntry, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtAddDriverEntry_enter, CPUState* cpu, target_ulong pc, uint32_t DriverEntry, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtAddDriverEntry_return, CPUState* cpu, target_ulong pc, uint32_t DriverEntry, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtAdjustGroupsToken_enter, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t ResetToDefault, uint32_t NewState, uint32_t BufferLength, uint32_t PreviousState, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAdjustGroupsToken_return, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t ResetToDefault, uint32_t NewState, uint32_t BufferLength, uint32_t PreviousState, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAdjustPrivilegesToken_enter, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t DisableAllPrivileges, uint32_t NewState, uint32_t BufferLength, uint32_t PreviousState, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAdjustPrivilegesToken_return, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t DisableAllPrivileges, uint32_t NewState, uint32_t BufferLength, uint32_t PreviousState, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAlertResumeThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PreviousSuspendCount);
PPP_CB_TYPEDEF(void, on_NtAlertResumeThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PreviousSuspendCount);
PPP_CB_TYPEDEF(void, on_NtAlertThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle);
PPP_CB_TYPEDEF(void, on_NtAlertThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle);
PPP_CB_TYPEDEF(void, on_NtAllocateLocallyUniqueId_enter, CPUState* cpu, target_ulong pc, uint32_t Luid);
PPP_CB_TYPEDEF(void, on_NtAllocateLocallyUniqueId_return, CPUState* cpu, target_ulong pc, uint32_t Luid);
PPP_CB_TYPEDEF(void, on_NtAllocateReserveObject_enter, CPUState* cpu, target_ulong pc, uint32_t MemoryReserveHandle, uint32_t ObjectAttributes, uint32_t Type);
PPP_CB_TYPEDEF(void, on_NtAllocateReserveObject_return, CPUState* cpu, target_ulong pc, uint32_t MemoryReserveHandle, uint32_t ObjectAttributes, uint32_t Type);
PPP_CB_TYPEDEF(void, on_NtAllocateUserPhysicalPages_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtAllocateUserPhysicalPages_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtAllocateUuids_enter, CPUState* cpu, target_ulong pc, uint32_t Time, uint32_t Range, uint32_t Sequence, uint32_t Seed);
PPP_CB_TYPEDEF(void, on_NtAllocateUuids_return, CPUState* cpu, target_ulong pc, uint32_t Time, uint32_t Range, uint32_t Sequence, uint32_t Seed);
PPP_CB_TYPEDEF(void, on_NtAllocateVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t ZeroBits, uint32_t RegionSize, uint32_t AllocationType, uint32_t Protect);
PPP_CB_TYPEDEF(void, on_NtAllocateVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t ZeroBits, uint32_t RegionSize, uint32_t AllocationType, uint32_t Protect);
PPP_CB_TYPEDEF(void, on_NtAlpcAcceptConnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ConnectionPortHandle, uint32_t Flags, uint32_t ObjectAttributes, uint32_t PortAttributes, uint32_t PortContext, uint32_t ConnectionRequest, uint32_t ConnectionMessageAttributes, uint32_t AcceptConnection);
PPP_CB_TYPEDEF(void, on_NtAlpcAcceptConnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ConnectionPortHandle, uint32_t Flags, uint32_t ObjectAttributes, uint32_t PortAttributes, uint32_t PortContext, uint32_t ConnectionRequest, uint32_t ConnectionMessageAttributes, uint32_t AcceptConnection);
PPP_CB_TYPEDEF(void, on_NtAlpcCancelMessage_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t MessageContext);
PPP_CB_TYPEDEF(void, on_NtAlpcCancelMessage_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t MessageContext);
PPP_CB_TYPEDEF(void, on_NtAlpcConnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortName, uint32_t ObjectAttributes, uint32_t PortAttributes, uint32_t Flags, uint32_t RequiredServerSid, uint32_t ConnectionMessage, uint32_t BufferLength, uint32_t OutMessageAttributes, uint32_t InMessageAttributes, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtAlpcConnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortName, uint32_t ObjectAttributes, uint32_t PortAttributes, uint32_t Flags, uint32_t RequiredServerSid, uint32_t ConnectionMessage, uint32_t BufferLength, uint32_t OutMessageAttributes, uint32_t InMessageAttributes, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtAlpcCreatePort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ObjectAttributes, uint32_t PortAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcCreatePort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ObjectAttributes, uint32_t PortAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcCreatePortSection_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SectionHandle, uint32_t SectionSize, uint32_t AlpcSectionHandle, uint32_t ActualSectionSize);
PPP_CB_TYPEDEF(void, on_NtAlpcCreatePortSection_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SectionHandle, uint32_t SectionSize, uint32_t AlpcSectionHandle, uint32_t ActualSectionSize);
PPP_CB_TYPEDEF(void, on_NtAlpcCreateResourceReserve_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t MessageSize, uint32_t ResourceId);
PPP_CB_TYPEDEF(void, on_NtAlpcCreateResourceReserve_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t MessageSize, uint32_t ResourceId);
PPP_CB_TYPEDEF(void, on_NtAlpcCreateSectionView_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ViewAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcCreateSectionView_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ViewAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcCreateSecurityContext_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SecurityAttribute);
PPP_CB_TYPEDEF(void, on_NtAlpcCreateSecurityContext_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SecurityAttribute);
PPP_CB_TYPEDEF(void, on_NtAlpcDeletePortSection_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SectionHandle);
PPP_CB_TYPEDEF(void, on_NtAlpcDeletePortSection_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SectionHandle);
PPP_CB_TYPEDEF(void, on_NtAlpcDeleteResourceReserve_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ResourceId);
PPP_CB_TYPEDEF(void, on_NtAlpcDeleteResourceReserve_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ResourceId);
PPP_CB_TYPEDEF(void, on_NtAlpcDeleteSectionView_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ViewBase);
PPP_CB_TYPEDEF(void, on_NtAlpcDeleteSectionView_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ViewBase);
PPP_CB_TYPEDEF(void, on_NtAlpcDeleteSecurityContext_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ContextHandle);
PPP_CB_TYPEDEF(void, on_NtAlpcDeleteSecurityContext_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ContextHandle);
PPP_CB_TYPEDEF(void, on_NtAlpcDisconnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtAlpcDisconnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtAlpcImpersonateClientOfPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortMessage, uint32_t Reserved);
PPP_CB_TYPEDEF(void, on_NtAlpcImpersonateClientOfPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortMessage, uint32_t Reserved);
PPP_CB_TYPEDEF(void, on_NtAlpcOpenSenderProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t PortHandle, uint32_t PortMessage, uint32_t Flags, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcOpenSenderProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t PortHandle, uint32_t PortMessage, uint32_t Flags, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcOpenSenderThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PortHandle, uint32_t PortMessage, uint32_t Flags, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcOpenSenderThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PortHandle, uint32_t PortMessage, uint32_t Flags, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtAlpcQueryInformation_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortInformationClass, uint32_t PortInformation, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAlpcQueryInformation_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortInformationClass, uint32_t PortInformation, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAlpcQueryInformationMessage_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortMessage, uint32_t MessageInformationClass, uint32_t MessageInformation, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAlpcQueryInformationMessage_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortMessage, uint32_t MessageInformationClass, uint32_t MessageInformation, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtAlpcRevokeSecurityContext_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ContextHandle);
PPP_CB_TYPEDEF(void, on_NtAlpcRevokeSecurityContext_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t ContextHandle);
PPP_CB_TYPEDEF(void, on_NtAlpcSendWaitReceivePort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SendMessage, uint32_t SendMessageAttributes, uint32_t ReceiveMessage, uint32_t BufferLength, uint32_t ReceiveMessageAttributes, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtAlpcSendWaitReceivePort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Flags, uint32_t SendMessage, uint32_t SendMessageAttributes, uint32_t ReceiveMessage, uint32_t BufferLength, uint32_t ReceiveMessageAttributes, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtAlpcSetInformation_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortInformationClass, uint32_t PortInformation, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtAlpcSetInformation_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortInformationClass, uint32_t PortInformation, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtApphelpCacheControl_enter, CPUState* cpu, target_ulong pc, uint32_t type, uint32_t buf);
PPP_CB_TYPEDEF(void, on_NtApphelpCacheControl_return, CPUState* cpu, target_ulong pc, uint32_t type, uint32_t buf);
PPP_CB_TYPEDEF(void, on_NtAreMappedFilesTheSame_enter, CPUState* cpu, target_ulong pc, uint32_t File1MappedAsAnImage, uint32_t File2MappedAsFile);
PPP_CB_TYPEDEF(void, on_NtAreMappedFilesTheSame_return, CPUState* cpu, target_ulong pc, uint32_t File1MappedAsAnImage, uint32_t File2MappedAsFile);
PPP_CB_TYPEDEF(void, on_NtAssignProcessToJobObject_enter, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t ProcessHandle);
PPP_CB_TYPEDEF(void, on_NtAssignProcessToJobObject_return, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t ProcessHandle);
PPP_CB_TYPEDEF(void, on_NtCallbackReturn_enter, CPUState* cpu, target_ulong pc, uint32_t OutputBuffer, uint32_t OutputLength, uint32_t Status);
PPP_CB_TYPEDEF(void, on_NtCallbackReturn_return, CPUState* cpu, target_ulong pc, uint32_t OutputBuffer, uint32_t OutputLength, uint32_t Status);
PPP_CB_TYPEDEF(void, on_NtCancelIoFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtCancelIoFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtCancelIoFileEx_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoRequestToCancel, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtCancelIoFileEx_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoRequestToCancel, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtCancelSynchronousIoFile_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t IoRequestToCancel, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtCancelSynchronousIoFile_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t IoRequestToCancel, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtCancelTimer_enter, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t CurrentState);
PPP_CB_TYPEDEF(void, on_NtCancelTimer_return, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t CurrentState);
PPP_CB_TYPEDEF(void, on_NtClearEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle);
PPP_CB_TYPEDEF(void, on_NtClearEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle);
PPP_CB_TYPEDEF(void, on_NtClose_enter, CPUState* cpu, target_ulong pc, uint32_t Handle);
PPP_CB_TYPEDEF(void, on_NtClose_return, CPUState* cpu, target_ulong pc, uint32_t Handle);
PPP_CB_TYPEDEF(void, on_NtCloseObjectAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtCloseObjectAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtCommitComplete_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtCommitComplete_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtCommitEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtCommitEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtCommitTransaction_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t Wait);
PPP_CB_TYPEDEF(void, on_NtCommitTransaction_return, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t Wait);
PPP_CB_TYPEDEF(void, on_NtCompactKeys_enter, CPUState* cpu, target_ulong pc, uint32_t Count, uint32_t KeyArray);
PPP_CB_TYPEDEF(void, on_NtCompactKeys_return, CPUState* cpu, target_ulong pc, uint32_t Count, uint32_t KeyArray);
PPP_CB_TYPEDEF(void, on_NtCompareTokens_enter, CPUState* cpu, target_ulong pc, uint32_t FirstTokenHandle, uint32_t SecondTokenHandle, uint32_t Equal);
PPP_CB_TYPEDEF(void, on_NtCompareTokens_return, CPUState* cpu, target_ulong pc, uint32_t FirstTokenHandle, uint32_t SecondTokenHandle, uint32_t Equal);
PPP_CB_TYPEDEF(void, on_NtCompleteConnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle);
PPP_CB_TYPEDEF(void, on_NtCompleteConnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle);
PPP_CB_TYPEDEF(void, on_NtCompressKey_enter, CPUState* cpu, target_ulong pc, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtCompressKey_return, CPUState* cpu, target_ulong pc, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtConnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortName, uint32_t SecurityQos, uint32_t ClientView, uint32_t ServerView, uint32_t MaxMessageLength, uint32_t ConnectionInformation, uint32_t ConnectionInformationLength);
PPP_CB_TYPEDEF(void, on_NtConnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortName, uint32_t SecurityQos, uint32_t ClientView, uint32_t ServerView, uint32_t MaxMessageLength, uint32_t ConnectionInformation, uint32_t ConnectionInformationLength);
PPP_CB_TYPEDEF(void, on_NtContinue_enter, CPUState* cpu, target_ulong pc, uint32_t ContextRecord, uint32_t TestAlert);
PPP_CB_TYPEDEF(void, on_NtContinue_return, CPUState* cpu, target_ulong pc, uint32_t ContextRecord, uint32_t TestAlert);
PPP_CB_TYPEDEF(void, on_NtCreateDebugObject_enter, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtCreateDebugObject_return, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtCreateDirectoryObject_enter, CPUState* cpu, target_ulong pc, uint32_t DirectoryHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtCreateDirectoryObject_return, CPUState* cpu, target_ulong pc, uint32_t DirectoryHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtCreateEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t DesiredAccess, uint32_t ResourceManagerHandle, uint32_t TransactionHandle, uint32_t ObjectAttributes, uint32_t CreateOptions, uint32_t NotificationMask, uint32_t EnlistmentKey);
PPP_CB_TYPEDEF(void, on_NtCreateEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t DesiredAccess, uint32_t ResourceManagerHandle, uint32_t TransactionHandle, uint32_t ObjectAttributes, uint32_t CreateOptions, uint32_t NotificationMask, uint32_t EnlistmentKey);
PPP_CB_TYPEDEF(void, on_NtCreateEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t EventType, uint32_t InitialState);
PPP_CB_TYPEDEF(void, on_NtCreateEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t EventType, uint32_t InitialState);
PPP_CB_TYPEDEF(void, on_NtCreateEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtCreateEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtCreateFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t AllocationSize, uint32_t FileAttributes, uint32_t ShareAccess, uint32_t CreateDisposition, uint32_t CreateOptions, uint32_t EaBuffer, uint32_t EaLength);
PPP_CB_TYPEDEF(void, on_NtCreateFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t AllocationSize, uint32_t FileAttributes, uint32_t ShareAccess, uint32_t CreateDisposition, uint32_t CreateOptions, uint32_t EaBuffer, uint32_t EaLength);
PPP_CB_TYPEDEF(void, on_NtCreateIoCompletion_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtCreateIoCompletion_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtCreateJobObject_enter, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtCreateJobObject_return, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtCreateJobSet_enter, CPUState* cpu, target_ulong pc, uint32_t NumJob, uint32_t UserJobSet, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtCreateJobSet_return, CPUState* cpu, target_ulong pc, uint32_t NumJob, uint32_t UserJobSet, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtCreateKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TitleIndex, uint32_t Class, uint32_t CreateOptions, uint32_t Disposition);
PPP_CB_TYPEDEF(void, on_NtCreateKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TitleIndex, uint32_t Class, uint32_t CreateOptions, uint32_t Disposition);
PPP_CB_TYPEDEF(void, on_NtCreateKeyedEvent_enter, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtCreateKeyedEvent_return, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtCreateKeyTransacted_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TitleIndex, uint32_t Class, uint32_t CreateOptions, uint32_t TransactionHandle, uint32_t Disposition);
PPP_CB_TYPEDEF(void, on_NtCreateKeyTransacted_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TitleIndex, uint32_t Class, uint32_t CreateOptions, uint32_t TransactionHandle, uint32_t Disposition);
PPP_CB_TYPEDEF(void, on_NtCreateMailslotFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t CreateOptions, uint32_t MailslotQuota, uint32_t MaximumMessageSize, uint32_t ReadTimeout);
PPP_CB_TYPEDEF(void, on_NtCreateMailslotFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t CreateOptions, uint32_t MailslotQuota, uint32_t MaximumMessageSize, uint32_t ReadTimeout);
PPP_CB_TYPEDEF(void, on_NtCreateMutant_enter, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t InitialOwner);
PPP_CB_TYPEDEF(void, on_NtCreateMutant_return, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t InitialOwner);
PPP_CB_TYPEDEF(void, on_NtCreateNamedPipeFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t ShareAccess, uint32_t CreateDisposition, uint32_t CreateOptions, uint32_t NamedPipeType, uint32_t ReadMode, uint32_t CompletionMode, uint32_t MaximumInstances, uint32_t InboundQuota, uint32_t OutboundQuota, uint32_t DefaultTimeout);
PPP_CB_TYPEDEF(void, on_NtCreateNamedPipeFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t ShareAccess, uint32_t CreateDisposition, uint32_t CreateOptions, uint32_t NamedPipeType, uint32_t ReadMode, uint32_t CompletionMode, uint32_t MaximumInstances, uint32_t InboundQuota, uint32_t OutboundQuota, uint32_t DefaultTimeout);
PPP_CB_TYPEDEF(void, on_NtCreatePagingFile_enter, CPUState* cpu, target_ulong pc, uint32_t PageFileName, uint32_t MinimumSize, uint32_t MaximumSize, uint32_t Priority);
PPP_CB_TYPEDEF(void, on_NtCreatePagingFile_return, CPUState* cpu, target_ulong pc, uint32_t PageFileName, uint32_t MinimumSize, uint32_t MaximumSize, uint32_t Priority);
PPP_CB_TYPEDEF(void, on_NtCreatePort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ObjectAttributes, uint32_t MaxConnectionInfoLength, uint32_t MaxMessageLength, uint32_t MaxPoolUsage);
PPP_CB_TYPEDEF(void, on_NtCreatePort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ObjectAttributes, uint32_t MaxConnectionInfoLength, uint32_t MaxMessageLength, uint32_t MaxPoolUsage);
PPP_CB_TYPEDEF(void, on_NtCreatePrivateNamespace_enter, CPUState* cpu, target_ulong pc, uint32_t NamespaceHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t BoundaryDescriptor);
PPP_CB_TYPEDEF(void, on_NtCreatePrivateNamespace_return, CPUState* cpu, target_ulong pc, uint32_t NamespaceHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t BoundaryDescriptor);
PPP_CB_TYPEDEF(void, on_NtCreateProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ParentProcess, uint32_t InheritObjectTable, uint32_t SectionHandle, uint32_t DebugPort, uint32_t ExceptionPort);
PPP_CB_TYPEDEF(void, on_NtCreateProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ParentProcess, uint32_t InheritObjectTable, uint32_t SectionHandle, uint32_t DebugPort, uint32_t ExceptionPort);
PPP_CB_TYPEDEF(void, on_NtCreateProcessEx_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ParentProcess, uint32_t Flags, uint32_t SectionHandle, uint32_t DebugPort, uint32_t ExceptionPort, uint32_t JobMemberLevel);
PPP_CB_TYPEDEF(void, on_NtCreateProcessEx_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ParentProcess, uint32_t Flags, uint32_t SectionHandle, uint32_t DebugPort, uint32_t ExceptionPort, uint32_t JobMemberLevel);
PPP_CB_TYPEDEF(void, on_NtCreateProfile_enter, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle, uint32_t Process, uint32_t RangeBase, uint32_t RangeSize, uint32_t BucketSize, uint32_t Buffer, uint32_t BufferSize, uint32_t ProfileSource, uint32_t Affinity);
PPP_CB_TYPEDEF(void, on_NtCreateProfile_return, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle, uint32_t Process, uint32_t RangeBase, uint32_t RangeSize, uint32_t BucketSize, uint32_t Buffer, uint32_t BufferSize, uint32_t ProfileSource, uint32_t Affinity);
PPP_CB_TYPEDEF(void, on_NtCreateProfileEx_enter, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle, uint32_t Process, uint32_t ProfileBase, uint32_t ProfileSize, uint32_t BucketSize, uint32_t Buffer, uint32_t BufferSize, uint32_t ProfileSource, uint32_t GroupAffinityCount, uint32_t GroupAffinity);
PPP_CB_TYPEDEF(void, on_NtCreateProfileEx_return, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle, uint32_t Process, uint32_t ProfileBase, uint32_t ProfileSize, uint32_t BucketSize, uint32_t Buffer, uint32_t BufferSize, uint32_t ProfileSource, uint32_t GroupAffinityCount, uint32_t GroupAffinity);
PPP_CB_TYPEDEF(void, on_NtCreateResourceManager_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t DesiredAccess, uint32_t TmHandle, uint32_t RmGuid, uint32_t ObjectAttributes, uint32_t CreateOptions, uint32_t Description);
PPP_CB_TYPEDEF(void, on_NtCreateResourceManager_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t DesiredAccess, uint32_t TmHandle, uint32_t RmGuid, uint32_t ObjectAttributes, uint32_t CreateOptions, uint32_t Description);
PPP_CB_TYPEDEF(void, on_NtCreateSection_enter, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t MaximumSize, uint32_t SectionPageProtection, uint32_t AllocationAttributes, uint32_t FileHandle);
PPP_CB_TYPEDEF(void, on_NtCreateSection_return, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t MaximumSize, uint32_t SectionPageProtection, uint32_t AllocationAttributes, uint32_t FileHandle);
PPP_CB_TYPEDEF(void, on_NtCreateSemaphore_enter, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, int32_t InitialCount, int32_t MaximumCount);
PPP_CB_TYPEDEF(void, on_NtCreateSemaphore_return, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, int32_t InitialCount, int32_t MaximumCount);
PPP_CB_TYPEDEF(void, on_NtCreateSymbolicLinkObject_enter, CPUState* cpu, target_ulong pc, uint32_t LinkHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t LinkTarget);
PPP_CB_TYPEDEF(void, on_NtCreateSymbolicLinkObject_return, CPUState* cpu, target_ulong pc, uint32_t LinkHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t LinkTarget);
PPP_CB_TYPEDEF(void, on_NtCreateThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ProcessHandle, uint32_t ClientId, uint32_t ThreadContext, uint32_t InitialTeb, uint32_t CreateSuspended);
PPP_CB_TYPEDEF(void, on_NtCreateThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ProcessHandle, uint32_t ClientId, uint32_t ThreadContext, uint32_t InitialTeb, uint32_t CreateSuspended);
PPP_CB_TYPEDEF(void, on_NtCreateThreadEx_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ProcessHandle, uint32_t StartRoutine, uint32_t Argument, uint32_t CreateFlags, uint32_t ZeroBits, uint32_t StackSize, uint32_t MaximumStackSize, uint32_t AttributeList);
PPP_CB_TYPEDEF(void, on_NtCreateThreadEx_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ProcessHandle, uint32_t StartRoutine, uint32_t Argument, uint32_t CreateFlags, uint32_t ZeroBits, uint32_t StackSize, uint32_t MaximumStackSize, uint32_t AttributeList);
PPP_CB_TYPEDEF(void, on_NtCreateTimer_enter, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TimerType);
PPP_CB_TYPEDEF(void, on_NtCreateTimer_return, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TimerType);
PPP_CB_TYPEDEF(void, on_NtCreateToken_enter, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TokenType, uint32_t AuthenticationId, uint32_t ExpirationTime, uint32_t User, uint32_t Groups, uint32_t Privileges, uint32_t Owner, uint32_t PrimaryGroup, uint32_t DefaultDacl, uint32_t TokenSource);
PPP_CB_TYPEDEF(void, on_NtCreateToken_return, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TokenType, uint32_t AuthenticationId, uint32_t ExpirationTime, uint32_t User, uint32_t Groups, uint32_t Privileges, uint32_t Owner, uint32_t PrimaryGroup, uint32_t DefaultDacl, uint32_t TokenSource);
PPP_CB_TYPEDEF(void, on_NtCreateTransaction_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Uow, uint32_t TmHandle, uint32_t CreateOptions, uint32_t IsolationLevel, uint32_t IsolationFlags, uint32_t Timeout, uint32_t Description);
PPP_CB_TYPEDEF(void, on_NtCreateTransaction_return, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Uow, uint32_t TmHandle, uint32_t CreateOptions, uint32_t IsolationLevel, uint32_t IsolationFlags, uint32_t Timeout, uint32_t Description);
PPP_CB_TYPEDEF(void, on_NtCreateTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t TmHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t LogFileName, uint32_t CreateOptions, uint32_t CommitStrength);
PPP_CB_TYPEDEF(void, on_NtCreateTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t TmHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t LogFileName, uint32_t CreateOptions, uint32_t CommitStrength);
PPP_CB_TYPEDEF(void, on_NtCreateUserProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ThreadHandle, uint32_t ProcessDesiredAccess, uint32_t ThreadDesiredAccess, uint32_t ProcessObjectAttributes, uint32_t ThreadObjectAttributes, uint32_t ProcessFlags, uint32_t ThreadFlags, uint32_t ProcessParameters, uint32_t CreateInfo, uint32_t AttributeList);
PPP_CB_TYPEDEF(void, on_NtCreateUserProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ThreadHandle, uint32_t ProcessDesiredAccess, uint32_t ThreadDesiredAccess, uint32_t ProcessObjectAttributes, uint32_t ThreadObjectAttributes, uint32_t ProcessFlags, uint32_t ThreadFlags, uint32_t ProcessParameters, uint32_t CreateInfo, uint32_t AttributeList);
PPP_CB_TYPEDEF(void, on_NtCreateWaitablePort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ObjectAttributes, uint32_t MaxConnectionInfoLength, uint32_t MaxMessageLength, uint32_t MaxPoolUsage);
PPP_CB_TYPEDEF(void, on_NtCreateWaitablePort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ObjectAttributes, uint32_t MaxConnectionInfoLength, uint32_t MaxMessageLength, uint32_t MaxPoolUsage);
PPP_CB_TYPEDEF(void, on_NtCreateWorkerFactory_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandleReturn, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t CompletionPortHandle, uint32_t WorkerProcessHandle, uint32_t StartRoutine, uint32_t StartParameter, uint32_t MaxThreadCount, uint32_t StackReserve, uint32_t StackCommit);
PPP_CB_TYPEDEF(void, on_NtCreateWorkerFactory_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandleReturn, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t CompletionPortHandle, uint32_t WorkerProcessHandle, uint32_t StartRoutine, uint32_t StartParameter, uint32_t MaxThreadCount, uint32_t StackReserve, uint32_t StackCommit);
PPP_CB_TYPEDEF(void, on_NtDebugActiveProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DebugObjectHandle);
PPP_CB_TYPEDEF(void, on_NtDebugActiveProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DebugObjectHandle);
PPP_CB_TYPEDEF(void, on_NtDebugContinue_enter, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t ClientId, uint32_t ContinueStatus);
PPP_CB_TYPEDEF(void, on_NtDebugContinue_return, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t ClientId, uint32_t ContinueStatus);
PPP_CB_TYPEDEF(void, on_NtDelayExecution_enter, CPUState* cpu, target_ulong pc, uint32_t Alertable, uint32_t DelayInterval);
PPP_CB_TYPEDEF(void, on_NtDelayExecution_return, CPUState* cpu, target_ulong pc, uint32_t Alertable, uint32_t DelayInterval);
PPP_CB_TYPEDEF(void, on_NtDeleteAtom_enter, CPUState* cpu, target_ulong pc, uint32_t Atom);
PPP_CB_TYPEDEF(void, on_NtDeleteAtom_return, CPUState* cpu, target_ulong pc, uint32_t Atom);
PPP_CB_TYPEDEF(void, on_NtDeleteBootEntry_enter, CPUState* cpu, target_ulong pc, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtDeleteBootEntry_return, CPUState* cpu, target_ulong pc, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtDeleteDriverEntry_enter, CPUState* cpu, target_ulong pc, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtDeleteDriverEntry_return, CPUState* cpu, target_ulong pc, uint32_t Id);
PPP_CB_TYPEDEF(void, on_NtDeleteFile_enter, CPUState* cpu, target_ulong pc, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtDeleteFile_return, CPUState* cpu, target_ulong pc, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtDeleteKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle);
PPP_CB_TYPEDEF(void, on_NtDeleteKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle);
PPP_CB_TYPEDEF(void, on_NtDeleteObjectAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtDeleteObjectAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtDeletePrivateNamespace_enter, CPUState* cpu, target_ulong pc, uint32_t NamespaceHandle);
PPP_CB_TYPEDEF(void, on_NtDeletePrivateNamespace_return, CPUState* cpu, target_ulong pc, uint32_t NamespaceHandle);
PPP_CB_TYPEDEF(void, on_NtDeleteValueKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueName);
PPP_CB_TYPEDEF(void, on_NtDeleteValueKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueName);
PPP_CB_TYPEDEF(void, on_NtDeviceIoControlFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t IoControlCode, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength);
PPP_CB_TYPEDEF(void, on_NtDeviceIoControlFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t IoControlCode, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength);
PPP_CB_TYPEDEF(void, on_NtDisableLastKnownGood_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtDisableLastKnownGood_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtDisplayString_enter, CPUState* cpu, target_ulong pc, uint32_t String);
PPP_CB_TYPEDEF(void, on_NtDisplayString_return, CPUState* cpu, target_ulong pc, uint32_t String);
PPP_CB_TYPEDEF(void, on_NtDrawText_enter, CPUState* cpu, target_ulong pc, uint32_t Text);
PPP_CB_TYPEDEF(void, on_NtDrawText_return, CPUState* cpu, target_ulong pc, uint32_t Text);
PPP_CB_TYPEDEF(void, on_NtDuplicateObject_enter, CPUState* cpu, target_ulong pc, uint32_t SourceProcessHandle, uint32_t SourceHandle, uint32_t TargetProcessHandle, uint32_t TargetHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t Options);
PPP_CB_TYPEDEF(void, on_NtDuplicateObject_return, CPUState* cpu, target_ulong pc, uint32_t SourceProcessHandle, uint32_t SourceHandle, uint32_t TargetProcessHandle, uint32_t TargetHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t Options);
PPP_CB_TYPEDEF(void, on_NtDuplicateToken_enter, CPUState* cpu, target_ulong pc, uint32_t ExistingTokenHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t EffectiveOnly, uint32_t TokenType, uint32_t NewTokenHandle);
PPP_CB_TYPEDEF(void, on_NtDuplicateToken_return, CPUState* cpu, target_ulong pc, uint32_t ExistingTokenHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t EffectiveOnly, uint32_t TokenType, uint32_t NewTokenHandle);
PPP_CB_TYPEDEF(void, on_NtEnableLastKnownGood_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtEnableLastKnownGood_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtEnumerateBootEntries_enter, CPUState* cpu, target_ulong pc, uint32_t Buffer, uint32_t BufferLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateBootEntries_return, CPUState* cpu, target_ulong pc, uint32_t Buffer, uint32_t BufferLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateDriverEntries_enter, CPUState* cpu, target_ulong pc, uint32_t Buffer, uint32_t BufferLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateDriverEntries_return, CPUState* cpu, target_ulong pc, uint32_t Buffer, uint32_t BufferLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t Index, uint32_t KeyInformationClass, uint32_t KeyInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t Index, uint32_t KeyInformationClass, uint32_t KeyInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateSystemEnvironmentValuesEx_enter, CPUState* cpu, target_ulong pc, uint32_t InformationClass, uint32_t Buffer, uint32_t BufferLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateSystemEnvironmentValuesEx_return, CPUState* cpu, target_ulong pc, uint32_t InformationClass, uint32_t Buffer, uint32_t BufferLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateTransactionObject_enter, CPUState* cpu, target_ulong pc, uint32_t RootObjectHandle, uint32_t QueryType, uint32_t ObjectCursor, uint32_t ObjectCursorLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateTransactionObject_return, CPUState* cpu, target_ulong pc, uint32_t RootObjectHandle, uint32_t QueryType, uint32_t ObjectCursor, uint32_t ObjectCursorLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateValueKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t Index, uint32_t KeyValueInformationClass, uint32_t KeyValueInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtEnumerateValueKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t Index, uint32_t KeyValueInformationClass, uint32_t KeyValueInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtExtendSection_enter, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t NewSectionSize);
PPP_CB_TYPEDEF(void, on_NtExtendSection_return, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t NewSectionSize);
PPP_CB_TYPEDEF(void, on_NtFilterToken_enter, CPUState* cpu, target_ulong pc, uint32_t ExistingTokenHandle, uint32_t Flags, uint32_t SidsToDisable, uint32_t PrivilegesToDelete, uint32_t RestrictedSids, uint32_t NewTokenHandle);
PPP_CB_TYPEDEF(void, on_NtFilterToken_return, CPUState* cpu, target_ulong pc, uint32_t ExistingTokenHandle, uint32_t Flags, uint32_t SidsToDisable, uint32_t PrivilegesToDelete, uint32_t RestrictedSids, uint32_t NewTokenHandle);
PPP_CB_TYPEDEF(void, on_NtFindAtom_enter, CPUState* cpu, target_ulong pc, uint32_t AtomName, uint32_t Length, uint32_t Atom);
PPP_CB_TYPEDEF(void, on_NtFindAtom_return, CPUState* cpu, target_ulong pc, uint32_t AtomName, uint32_t Length, uint32_t Atom);
PPP_CB_TYPEDEF(void, on_NtFlushBuffersFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtFlushBuffersFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock);
PPP_CB_TYPEDEF(void, on_NtFlushInstallUILanguage_enter, CPUState* cpu, target_ulong pc, uint32_t InstallUILanguage, uint32_t SetComittedFlag);
PPP_CB_TYPEDEF(void, on_NtFlushInstallUILanguage_return, CPUState* cpu, target_ulong pc, uint32_t InstallUILanguage, uint32_t SetComittedFlag);
PPP_CB_TYPEDEF(void, on_NtFlushInstructionCache_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtFlushInstructionCache_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtFlushKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle);
PPP_CB_TYPEDEF(void, on_NtFlushKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle);
PPP_CB_TYPEDEF(void, on_NtFlushProcessWriteBuffers_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtFlushProcessWriteBuffers_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtFlushVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t IoStatus);
PPP_CB_TYPEDEF(void, on_NtFlushVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t IoStatus);
PPP_CB_TYPEDEF(void, on_NtFlushWriteBuffer_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtFlushWriteBuffer_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtFreeUserPhysicalPages_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtFreeUserPhysicalPages_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtFreeVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t FreeType);
PPP_CB_TYPEDEF(void, on_NtFreeVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t FreeType);
PPP_CB_TYPEDEF(void, on_NtFreezeRegistry_enter, CPUState* cpu, target_ulong pc, uint32_t TimeOutInSeconds);
PPP_CB_TYPEDEF(void, on_NtFreezeRegistry_return, CPUState* cpu, target_ulong pc, uint32_t TimeOutInSeconds);
PPP_CB_TYPEDEF(void, on_NtFreezeTransactions_enter, CPUState* cpu, target_ulong pc, uint32_t FreezeTimeout, uint32_t ThawTimeout);
PPP_CB_TYPEDEF(void, on_NtFreezeTransactions_return, CPUState* cpu, target_ulong pc, uint32_t FreezeTimeout, uint32_t ThawTimeout);
PPP_CB_TYPEDEF(void, on_NtFsControlFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t IoControlCode, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength);
PPP_CB_TYPEDEF(void, on_NtFsControlFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t IoControlCode, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength);
PPP_CB_TYPEDEF(void, on_NtGetContextThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadContext);
PPP_CB_TYPEDEF(void, on_NtGetContextThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadContext);
PPP_CB_TYPEDEF(void, on_NtGetCurrentProcessorNumber_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtGetCurrentProcessorNumber_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtGetDevicePowerState_enter, CPUState* cpu, target_ulong pc, uint32_t Device, uint32_t State);
PPP_CB_TYPEDEF(void, on_NtGetDevicePowerState_return, CPUState* cpu, target_ulong pc, uint32_t Device, uint32_t State);
PPP_CB_TYPEDEF(void, on_NtGetMUIRegistryInfo_enter, CPUState* cpu, target_ulong pc, uint32_t Flags, uint32_t DataSize, uint32_t Data);
PPP_CB_TYPEDEF(void, on_NtGetMUIRegistryInfo_return, CPUState* cpu, target_ulong pc, uint32_t Flags, uint32_t DataSize, uint32_t Data);
PPP_CB_TYPEDEF(void, on_NtGetNextProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t Flags, uint32_t NewProcessHandle);
PPP_CB_TYPEDEF(void, on_NtGetNextProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t Flags, uint32_t NewProcessHandle);
PPP_CB_TYPEDEF(void, on_NtGetNextThread_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t Flags, uint32_t NewThreadHandle);
PPP_CB_TYPEDEF(void, on_NtGetNextThread_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t Flags, uint32_t NewThreadHandle);
PPP_CB_TYPEDEF(void, on_NtGetNlsSectionPtr_enter, CPUState* cpu, target_ulong pc, uint32_t SectionType, uint32_t SectionData, uint32_t ContextData, uint32_t SectionPointer, uint32_t SectionSize);
PPP_CB_TYPEDEF(void, on_NtGetNlsSectionPtr_return, CPUState* cpu, target_ulong pc, uint32_t SectionType, uint32_t SectionData, uint32_t ContextData, uint32_t SectionPointer, uint32_t SectionSize);
PPP_CB_TYPEDEF(void, on_NtGetNotificationResourceManager_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t TransactionNotification, uint32_t NotificationLength, uint32_t Timeout, uint32_t ReturnLength, uint32_t Asynchronous, uint32_t AsynchronousContext);
PPP_CB_TYPEDEF(void, on_NtGetNotificationResourceManager_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t TransactionNotification, uint32_t NotificationLength, uint32_t Timeout, uint32_t ReturnLength, uint32_t Asynchronous, uint32_t AsynchronousContext);
PPP_CB_TYPEDEF(void, on_NtGetPlugPlayEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t Context, uint32_t EventBlock, uint32_t EventBufferSize);
PPP_CB_TYPEDEF(void, on_NtGetPlugPlayEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t Context, uint32_t EventBlock, uint32_t EventBufferSize);
PPP_CB_TYPEDEF(void, on_NtGetWriteWatch_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t Flags, uint32_t BaseAddress, uint32_t RegionSize, uint32_t UserAddressArray, uint32_t EntriesInUserAddressArray, uint32_t Granularity);
PPP_CB_TYPEDEF(void, on_NtGetWriteWatch_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t Flags, uint32_t BaseAddress, uint32_t RegionSize, uint32_t UserAddressArray, uint32_t EntriesInUserAddressArray, uint32_t Granularity);
PPP_CB_TYPEDEF(void, on_NtImpersonateAnonymousToken_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle);
PPP_CB_TYPEDEF(void, on_NtImpersonateAnonymousToken_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle);
PPP_CB_TYPEDEF(void, on_NtImpersonateClientOfPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Message);
PPP_CB_TYPEDEF(void, on_NtImpersonateClientOfPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Message);
PPP_CB_TYPEDEF(void, on_NtImpersonateThread_enter, CPUState* cpu, target_ulong pc, uint32_t ServerThreadHandle, uint32_t ClientThreadHandle, uint32_t SecurityQos);
PPP_CB_TYPEDEF(void, on_NtImpersonateThread_return, CPUState* cpu, target_ulong pc, uint32_t ServerThreadHandle, uint32_t ClientThreadHandle, uint32_t SecurityQos);
PPP_CB_TYPEDEF(void, on_NtInitializeNlsFiles_enter, CPUState* cpu, target_ulong pc, uint32_t BaseAddress, uint32_t DefaultLocaleId, uint32_t DefaultCasingTableSize);
PPP_CB_TYPEDEF(void, on_NtInitializeNlsFiles_return, CPUState* cpu, target_ulong pc, uint32_t BaseAddress, uint32_t DefaultLocaleId, uint32_t DefaultCasingTableSize);
PPP_CB_TYPEDEF(void, on_NtInitializeRegistry_enter, CPUState* cpu, target_ulong pc, uint32_t BootCondition);
PPP_CB_TYPEDEF(void, on_NtInitializeRegistry_return, CPUState* cpu, target_ulong pc, uint32_t BootCondition);
PPP_CB_TYPEDEF(void, on_NtInitiatePowerAction_enter, CPUState* cpu, target_ulong pc, uint32_t SystemAction, uint32_t MinSystemState, uint32_t Flags, uint32_t Asynchronous);
PPP_CB_TYPEDEF(void, on_NtInitiatePowerAction_return, CPUState* cpu, target_ulong pc, uint32_t SystemAction, uint32_t MinSystemState, uint32_t Flags, uint32_t Asynchronous);
PPP_CB_TYPEDEF(void, on_NtIsProcessInJob_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t JobHandle);
PPP_CB_TYPEDEF(void, on_NtIsProcessInJob_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t JobHandle);
PPP_CB_TYPEDEF(void, on_NtIsSystemResumeAutomatic_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtIsSystemResumeAutomatic_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtIsUILanguageComitted_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtIsUILanguageComitted_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtListenPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ConnectionRequest);
PPP_CB_TYPEDEF(void, on_NtListenPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ConnectionRequest);
PPP_CB_TYPEDEF(void, on_NtLoadDriver_enter, CPUState* cpu, target_ulong pc, uint32_t DriverServiceName);
PPP_CB_TYPEDEF(void, on_NtLoadDriver_return, CPUState* cpu, target_ulong pc, uint32_t DriverServiceName);
PPP_CB_TYPEDEF(void, on_NtLoadKey_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t SourceFile);
PPP_CB_TYPEDEF(void, on_NtLoadKey_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t SourceFile);
PPP_CB_TYPEDEF(void, on_NtLoadKey2_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t SourceFile, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtLoadKey2_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t SourceFile, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtLoadKeyEx_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t SourceFile, uint32_t Flags, uint32_t TrustClassKey);
PPP_CB_TYPEDEF(void, on_NtLoadKeyEx_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t SourceFile, uint32_t Flags, uint32_t TrustClassKey);
PPP_CB_TYPEDEF(void, on_NtLockFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t ByteOffset, uint32_t Length, uint32_t Key, uint32_t FailImmediately, uint32_t ExclusiveLock);
PPP_CB_TYPEDEF(void, on_NtLockFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t ByteOffset, uint32_t Length, uint32_t Key, uint32_t FailImmediately, uint32_t ExclusiveLock);
PPP_CB_TYPEDEF(void, on_NtLockProductActivationKeys_enter, CPUState* cpu, target_ulong pc, uint32_t pPrivateVer, uint32_t pSafeMode);
PPP_CB_TYPEDEF(void, on_NtLockProductActivationKeys_return, CPUState* cpu, target_ulong pc, uint32_t pPrivateVer, uint32_t pSafeMode);
PPP_CB_TYPEDEF(void, on_NtLockRegistryKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle);
PPP_CB_TYPEDEF(void, on_NtLockRegistryKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle);
PPP_CB_TYPEDEF(void, on_NtLockVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t MapType);
PPP_CB_TYPEDEF(void, on_NtLockVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t MapType);
PPP_CB_TYPEDEF(void, on_NtMakePermanentObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle);
PPP_CB_TYPEDEF(void, on_NtMakePermanentObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle);
PPP_CB_TYPEDEF(void, on_NtMakeTemporaryObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle);
PPP_CB_TYPEDEF(void, on_NtMakeTemporaryObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle);
PPP_CB_TYPEDEF(void, on_NtMapCMFModule_enter, CPUState* cpu, target_ulong pc, uint32_t What, uint32_t Index, uint32_t CacheIndexOut, uint32_t CacheFlagsOut, uint32_t ViewSizeOut, uint32_t BaseAddress);
PPP_CB_TYPEDEF(void, on_NtMapCMFModule_return, CPUState* cpu, target_ulong pc, uint32_t What, uint32_t Index, uint32_t CacheIndexOut, uint32_t CacheFlagsOut, uint32_t ViewSizeOut, uint32_t BaseAddress);
PPP_CB_TYPEDEF(void, on_NtMapUserPhysicalPages_enter, CPUState* cpu, target_ulong pc, uint32_t VirtualAddress, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtMapUserPhysicalPages_return, CPUState* cpu, target_ulong pc, uint32_t VirtualAddress, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtMapUserPhysicalPagesScatter_enter, CPUState* cpu, target_ulong pc, uint32_t VirtualAddresses, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtMapUserPhysicalPagesScatter_return, CPUState* cpu, target_ulong pc, uint32_t VirtualAddresses, uint32_t NumberOfPages, uint32_t UserPfnArray);
PPP_CB_TYPEDEF(void, on_NtMapViewOfSection_enter, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t ZeroBits, uint32_t CommitSize, uint32_t SectionOffset, uint32_t ViewSize, uint32_t InheritDisposition, uint32_t AllocationType, uint32_t Win32Protect);
PPP_CB_TYPEDEF(void, on_NtMapViewOfSection_return, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t ZeroBits, uint32_t CommitSize, uint32_t SectionOffset, uint32_t ViewSize, uint32_t InheritDisposition, uint32_t AllocationType, uint32_t Win32Protect);
PPP_CB_TYPEDEF(void, on_NtModifyBootEntry_enter, CPUState* cpu, target_ulong pc, uint32_t BootEntry);
PPP_CB_TYPEDEF(void, on_NtModifyBootEntry_return, CPUState* cpu, target_ulong pc, uint32_t BootEntry);
PPP_CB_TYPEDEF(void, on_NtModifyDriverEntry_enter, CPUState* cpu, target_ulong pc, uint32_t DriverEntry);
PPP_CB_TYPEDEF(void, on_NtModifyDriverEntry_return, CPUState* cpu, target_ulong pc, uint32_t DriverEntry);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeDirectoryFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t CompletionFilter, uint32_t WatchTree);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeDirectoryFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t CompletionFilter, uint32_t WatchTree);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t CompletionFilter, uint32_t WatchTree, uint32_t Buffer, uint32_t BufferSize, uint32_t Asynchronous);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t CompletionFilter, uint32_t WatchTree, uint32_t Buffer, uint32_t BufferSize, uint32_t Asynchronous);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeMultipleKeys_enter, CPUState* cpu, target_ulong pc, uint32_t MasterKeyHandle, uint32_t Count, uint32_t SlaveObjects, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t CompletionFilter, uint32_t WatchTree, uint32_t Buffer, uint32_t BufferSize, uint32_t Asynchronous);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeMultipleKeys_return, CPUState* cpu, target_ulong pc, uint32_t MasterKeyHandle, uint32_t Count, uint32_t SlaveObjects, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t CompletionFilter, uint32_t WatchTree, uint32_t Buffer, uint32_t BufferSize, uint32_t Asynchronous);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeSession_enter, CPUState* cpu, target_ulong pc, uint32_t Session, uint32_t IoStateSequence, uint32_t Reserved, uint32_t Action, uint32_t IoState, uint32_t IoState2, uint32_t Buffer, uint32_t BufferSize);
PPP_CB_TYPEDEF(void, on_NtNotifyChangeSession_return, CPUState* cpu, target_ulong pc, uint32_t Session, uint32_t IoStateSequence, uint32_t Reserved, uint32_t Action, uint32_t IoState, uint32_t IoState2, uint32_t Buffer, uint32_t BufferSize);
PPP_CB_TYPEDEF(void, on_NtOpenDirectoryObject_enter, CPUState* cpu, target_ulong pc, uint32_t DirectoryHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenDirectoryObject_return, CPUState* cpu, target_ulong pc, uint32_t DirectoryHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t DesiredAccess, uint32_t ResourceManagerHandle, uint32_t EnlistmentGuid, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t DesiredAccess, uint32_t ResourceManagerHandle, uint32_t EnlistmentGuid, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t ShareAccess, uint32_t OpenOptions);
PPP_CB_TYPEDEF(void, on_NtOpenFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t IoStatusBlock, uint32_t ShareAccess, uint32_t OpenOptions);
PPP_CB_TYPEDEF(void, on_NtOpenIoCompletion_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenIoCompletion_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenJobObject_enter, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenJobObject_return, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenKeyedEvent_enter, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenKeyedEvent_return, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenKeyEx_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t OpenOptions);
PPP_CB_TYPEDEF(void, on_NtOpenKeyEx_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t OpenOptions);
PPP_CB_TYPEDEF(void, on_NtOpenKeyTransacted_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TransactionHandle);
PPP_CB_TYPEDEF(void, on_NtOpenKeyTransacted_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t TransactionHandle);
PPP_CB_TYPEDEF(void, on_NtOpenKeyTransactedEx_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t OpenOptions, uint32_t TransactionHandle);
PPP_CB_TYPEDEF(void, on_NtOpenKeyTransactedEx_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t OpenOptions, uint32_t TransactionHandle);
PPP_CB_TYPEDEF(void, on_NtOpenMutant_enter, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenMutant_return, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenObjectAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t GrantedAccess, uint32_t Privileges, uint32_t ObjectCreation, uint32_t AccessGranted, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtOpenObjectAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ObjectTypeName, uint32_t ObjectName, uint32_t SecurityDescriptor, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t GrantedAccess, uint32_t Privileges, uint32_t ObjectCreation, uint32_t AccessGranted, uint32_t GenerateOnClose);
PPP_CB_TYPEDEF(void, on_NtOpenPrivateNamespace_enter, CPUState* cpu, target_ulong pc, uint32_t NamespaceHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t BoundaryDescriptor);
PPP_CB_TYPEDEF(void, on_NtOpenPrivateNamespace_return, CPUState* cpu, target_ulong pc, uint32_t NamespaceHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t BoundaryDescriptor);
PPP_CB_TYPEDEF(void, on_NtOpenProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ClientId);
PPP_CB_TYPEDEF(void, on_NtOpenProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ClientId);
PPP_CB_TYPEDEF(void, on_NtOpenProcessToken_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenProcessToken_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenProcessTokenEx_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenProcessTokenEx_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DesiredAccess, uint32_t HandleAttributes, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenResourceManager_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t DesiredAccess, uint32_t TmHandle, uint32_t ResourceManagerGuid, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenResourceManager_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t DesiredAccess, uint32_t TmHandle, uint32_t ResourceManagerGuid, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSection_enter, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSection_return, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSemaphore_enter, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSemaphore_return, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSession_enter, CPUState* cpu, target_ulong pc, uint32_t SessionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSession_return, CPUState* cpu, target_ulong pc, uint32_t SessionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSymbolicLinkObject_enter, CPUState* cpu, target_ulong pc, uint32_t LinkHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenSymbolicLinkObject_return, CPUState* cpu, target_ulong pc, uint32_t LinkHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ClientId);
PPP_CB_TYPEDEF(void, on_NtOpenThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t ClientId);
PPP_CB_TYPEDEF(void, on_NtOpenThreadToken_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t OpenAsSelf, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenThreadToken_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t OpenAsSelf, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenThreadTokenEx_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t OpenAsSelf, uint32_t HandleAttributes, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenThreadTokenEx_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t DesiredAccess, uint32_t OpenAsSelf, uint32_t HandleAttributes, uint32_t TokenHandle);
PPP_CB_TYPEDEF(void, on_NtOpenTimer_enter, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenTimer_return, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes);
PPP_CB_TYPEDEF(void, on_NtOpenTransaction_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Uow, uint32_t TmHandle);
PPP_CB_TYPEDEF(void, on_NtOpenTransaction_return, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t Uow, uint32_t TmHandle);
PPP_CB_TYPEDEF(void, on_NtOpenTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t TmHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t LogFileName, uint32_t TmIdentity, uint32_t OpenOptions);
PPP_CB_TYPEDEF(void, on_NtOpenTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t TmHandle, uint32_t DesiredAccess, uint32_t ObjectAttributes, uint32_t LogFileName, uint32_t TmIdentity, uint32_t OpenOptions);
PPP_CB_TYPEDEF(void, on_NtPlugPlayControl_enter, CPUState* cpu, target_ulong pc, uint32_t PnPControlClass, uint32_t PnPControlData, uint32_t PnPControlDataLength);
PPP_CB_TYPEDEF(void, on_NtPlugPlayControl_return, CPUState* cpu, target_ulong pc, uint32_t PnPControlClass, uint32_t PnPControlData, uint32_t PnPControlDataLength);
PPP_CB_TYPEDEF(void, on_NtPowerInformation_enter, CPUState* cpu, target_ulong pc, uint32_t InformationLevel, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength);
PPP_CB_TYPEDEF(void, on_NtPowerInformation_return, CPUState* cpu, target_ulong pc, uint32_t InformationLevel, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength);
PPP_CB_TYPEDEF(void, on_NtPrepareComplete_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrepareComplete_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrepareEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrepareEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrePrepareComplete_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrePrepareComplete_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrePrepareEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrePrepareEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtPrivilegeCheck_enter, CPUState* cpu, target_ulong pc, uint32_t ClientToken, uint32_t RequiredPrivileges, uint32_t Result);
PPP_CB_TYPEDEF(void, on_NtPrivilegeCheck_return, CPUState* cpu, target_ulong pc, uint32_t ClientToken, uint32_t RequiredPrivileges, uint32_t Result);
PPP_CB_TYPEDEF(void, on_NtPrivilegedServiceAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t ServiceName, uint32_t ClientToken, uint32_t Privileges, uint32_t AccessGranted);
PPP_CB_TYPEDEF(void, on_NtPrivilegedServiceAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t ServiceName, uint32_t ClientToken, uint32_t Privileges, uint32_t AccessGranted);
PPP_CB_TYPEDEF(void, on_NtPrivilegeObjectAuditAlarm_enter, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t Privileges, uint32_t AccessGranted);
PPP_CB_TYPEDEF(void, on_NtPrivilegeObjectAuditAlarm_return, CPUState* cpu, target_ulong pc, uint32_t SubsystemName, uint32_t HandleId, uint32_t ClientToken, uint32_t DesiredAccess, uint32_t Privileges, uint32_t AccessGranted);
PPP_CB_TYPEDEF(void, on_NtPropagationComplete_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t RequestCookie, uint32_t BufferLength, uint32_t Buffer);
PPP_CB_TYPEDEF(void, on_NtPropagationComplete_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t RequestCookie, uint32_t BufferLength, uint32_t Buffer);
PPP_CB_TYPEDEF(void, on_NtPropagationFailed_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t RequestCookie, uint32_t PropStatus);
PPP_CB_TYPEDEF(void, on_NtPropagationFailed_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t RequestCookie, uint32_t PropStatus);
PPP_CB_TYPEDEF(void, on_NtProtectVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t NewProtectWin32, uint32_t OldProtect);
PPP_CB_TYPEDEF(void, on_NtProtectVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t NewProtectWin32, uint32_t OldProtect);
PPP_CB_TYPEDEF(void, on_NtPulseEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtPulseEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtQueryAttributesFile_enter, CPUState* cpu, target_ulong pc, uint32_t ObjectAttributes, uint32_t FileInformation);
PPP_CB_TYPEDEF(void, on_NtQueryAttributesFile_return, CPUState* cpu, target_ulong pc, uint32_t ObjectAttributes, uint32_t FileInformation);
PPP_CB_TYPEDEF(void, on_NtQueryBootEntryOrder_enter, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtQueryBootEntryOrder_return, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtQueryBootOptions_enter, CPUState* cpu, target_ulong pc, uint32_t BootOptions, uint32_t BootOptionsLength);
PPP_CB_TYPEDEF(void, on_NtQueryBootOptions_return, CPUState* cpu, target_ulong pc, uint32_t BootOptions, uint32_t BootOptionsLength);
PPP_CB_TYPEDEF(void, on_NtQueryDebugFilterState_enter, CPUState* cpu, target_ulong pc, uint32_t ComponentId, uint32_t Level);
PPP_CB_TYPEDEF(void, on_NtQueryDebugFilterState_return, CPUState* cpu, target_ulong pc, uint32_t ComponentId, uint32_t Level);
PPP_CB_TYPEDEF(void, on_NtQueryDefaultLocale_enter, CPUState* cpu, target_ulong pc, uint32_t UserProfile, uint32_t DefaultLocaleId);
PPP_CB_TYPEDEF(void, on_NtQueryDefaultLocale_return, CPUState* cpu, target_ulong pc, uint32_t UserProfile, uint32_t DefaultLocaleId);
PPP_CB_TYPEDEF(void, on_NtQueryDefaultUILanguage_enter, CPUState* cpu, target_ulong pc, uint32_t DefaultUILanguageId);
PPP_CB_TYPEDEF(void, on_NtQueryDefaultUILanguage_return, CPUState* cpu, target_ulong pc, uint32_t DefaultUILanguageId);
PPP_CB_TYPEDEF(void, on_NtQueryDirectoryFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t FileInformation, uint32_t Length, uint32_t FileInformationClass, uint32_t ReturnSingleEntry, uint32_t FileName, uint32_t RestartScan);
PPP_CB_TYPEDEF(void, on_NtQueryDirectoryFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t FileInformation, uint32_t Length, uint32_t FileInformationClass, uint32_t ReturnSingleEntry, uint32_t FileName, uint32_t RestartScan);
PPP_CB_TYPEDEF(void, on_NtQueryDirectoryObject_enter, CPUState* cpu, target_ulong pc, uint32_t DirectoryHandle, uint32_t Buffer, uint32_t Length, uint32_t ReturnSingleEntry, uint32_t RestartScan, uint32_t Context, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryDirectoryObject_return, CPUState* cpu, target_ulong pc, uint32_t DirectoryHandle, uint32_t Buffer, uint32_t Length, uint32_t ReturnSingleEntry, uint32_t RestartScan, uint32_t Context, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryDriverEntryOrder_enter, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtQueryDriverEntryOrder_return, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtQueryEaFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ReturnSingleEntry, uint32_t EaList, uint32_t EaListLength, uint32_t EaIndex, uint32_t RestartScan);
PPP_CB_TYPEDEF(void, on_NtQueryEaFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ReturnSingleEntry, uint32_t EaList, uint32_t EaListLength, uint32_t EaIndex, uint32_t RestartScan);
PPP_CB_TYPEDEF(void, on_NtQueryEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t EventInformationClass, uint32_t EventInformation, uint32_t EventInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t EventInformationClass, uint32_t EventInformation, uint32_t EventInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryFullAttributesFile_enter, CPUState* cpu, target_ulong pc, uint32_t ObjectAttributes, uint32_t FileInformation);
PPP_CB_TYPEDEF(void, on_NtQueryFullAttributesFile_return, CPUState* cpu, target_ulong pc, uint32_t ObjectAttributes, uint32_t FileInformation);
PPP_CB_TYPEDEF(void, on_NtQueryInformationAtom_enter, CPUState* cpu, target_ulong pc, uint32_t Atom, uint32_t InformationClass, uint32_t AtomInformation, uint32_t AtomInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationAtom_return, CPUState* cpu, target_ulong pc, uint32_t Atom, uint32_t InformationClass, uint32_t AtomInformation, uint32_t AtomInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t EnlistmentInformationClass, uint32_t EnlistmentInformation, uint32_t EnlistmentInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t EnlistmentInformationClass, uint32_t EnlistmentInformation, uint32_t EnlistmentInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FileInformation, uint32_t Length, uint32_t FileInformationClass);
PPP_CB_TYPEDEF(void, on_NtQueryInformationFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FileInformation, uint32_t Length, uint32_t FileInformationClass);
PPP_CB_TYPEDEF(void, on_NtQueryInformationJobObject_enter, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t JobObjectInformationClass, uint32_t JobObjectInformation, uint32_t JobObjectInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationJobObject_return, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t JobObjectInformationClass, uint32_t JobObjectInformation, uint32_t JobObjectInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortInformationClass, uint32_t PortInformation, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortInformationClass, uint32_t PortInformation, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ProcessInformationClass, uint32_t ProcessInformation, uint32_t ProcessInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ProcessInformationClass, uint32_t ProcessInformation, uint32_t ProcessInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationResourceManager_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t ResourceManagerInformationClass, uint32_t ResourceManagerInformation, uint32_t ResourceManagerInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationResourceManager_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t ResourceManagerInformationClass, uint32_t ResourceManagerInformation, uint32_t ResourceManagerInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadInformationClass, uint32_t ThreadInformation, uint32_t ThreadInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadInformationClass, uint32_t ThreadInformation, uint32_t ThreadInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationToken_enter, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t TokenInformationClass, uint32_t TokenInformation, uint32_t TokenInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationToken_return, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t TokenInformationClass, uint32_t TokenInformation, uint32_t TokenInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationTransaction_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t TransactionInformationClass, uint32_t TransactionInformation, uint32_t TransactionInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationTransaction_return, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t TransactionInformationClass, uint32_t TransactionInformation, uint32_t TransactionInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionManagerHandle, uint32_t TransactionManagerInformationClass, uint32_t TransactionManagerInformation, uint32_t TransactionManagerInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t TransactionManagerHandle, uint32_t TransactionManagerInformationClass, uint32_t TransactionManagerInformation, uint32_t TransactionManagerInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationWorkerFactory_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t WorkerFactoryInformationClass, uint32_t WorkerFactoryInformation, uint32_t WorkerFactoryInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInformationWorkerFactory_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t WorkerFactoryInformationClass, uint32_t WorkerFactoryInformation, uint32_t WorkerFactoryInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryInstallUILanguage_enter, CPUState* cpu, target_ulong pc, uint32_t InstallUILanguageId);
PPP_CB_TYPEDEF(void, on_NtQueryInstallUILanguage_return, CPUState* cpu, target_ulong pc, uint32_t InstallUILanguageId);
PPP_CB_TYPEDEF(void, on_NtQueryIntervalProfile_enter, CPUState* cpu, target_ulong pc, uint32_t ProfileSource, uint32_t Interval);
PPP_CB_TYPEDEF(void, on_NtQueryIntervalProfile_return, CPUState* cpu, target_ulong pc, uint32_t ProfileSource, uint32_t Interval);
PPP_CB_TYPEDEF(void, on_NtQueryIoCompletion_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t IoCompletionInformationClass, uint32_t IoCompletionInformation, uint32_t IoCompletionInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryIoCompletion_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t IoCompletionInformationClass, uint32_t IoCompletionInformation, uint32_t IoCompletionInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t KeyInformationClass, uint32_t KeyInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtQueryKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t KeyInformationClass, uint32_t KeyInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtQueryLicenseValue_enter, CPUState* cpu, target_ulong pc, uint32_t Name, uint32_t Type, uint32_t Buffer, uint32_t Length, uint32_t ReturnedLength);
PPP_CB_TYPEDEF(void, on_NtQueryLicenseValue_return, CPUState* cpu, target_ulong pc, uint32_t Name, uint32_t Type, uint32_t Buffer, uint32_t Length, uint32_t ReturnedLength);
PPP_CB_TYPEDEF(void, on_NtQueryMultipleValueKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueEntries, uint32_t EntryCount, uint32_t ValueBuffer, uint32_t BufferLength, uint32_t RequiredBufferLength);
PPP_CB_TYPEDEF(void, on_NtQueryMultipleValueKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueEntries, uint32_t EntryCount, uint32_t ValueBuffer, uint32_t BufferLength, uint32_t RequiredBufferLength);
PPP_CB_TYPEDEF(void, on_NtQueryMutant_enter, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t MutantInformationClass, uint32_t MutantInformation, uint32_t MutantInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryMutant_return, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t MutantInformationClass, uint32_t MutantInformation, uint32_t MutantInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t ObjectInformationClass, uint32_t ObjectInformation, uint32_t ObjectInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t ObjectInformationClass, uint32_t ObjectInformation, uint32_t ObjectInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryOpenSubKeys_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t HandleCount);
PPP_CB_TYPEDEF(void, on_NtQueryOpenSubKeys_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t HandleCount);
PPP_CB_TYPEDEF(void, on_NtQueryOpenSubKeysEx_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t BufferLength, uint32_t Buffer, uint32_t RequiredSize);
PPP_CB_TYPEDEF(void, on_NtQueryOpenSubKeysEx_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t BufferLength, uint32_t Buffer, uint32_t RequiredSize);
PPP_CB_TYPEDEF(void, on_NtQueryPerformanceCounter_enter, CPUState* cpu, target_ulong pc, uint32_t PerformanceCounter, uint32_t PerformanceFrequency);
PPP_CB_TYPEDEF(void, on_NtQueryPerformanceCounter_return, CPUState* cpu, target_ulong pc, uint32_t PerformanceCounter, uint32_t PerformanceFrequency);
PPP_CB_TYPEDEF(void, on_NtQueryPortInformationProcess_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtQueryPortInformationProcess_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtQueryQuotaInformationFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ReturnSingleEntry, uint32_t SidList, uint32_t SidListLength, uint32_t StartSid, uint32_t RestartScan);
PPP_CB_TYPEDEF(void, on_NtQueryQuotaInformationFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ReturnSingleEntry, uint32_t SidList, uint32_t SidListLength, uint32_t StartSid, uint32_t RestartScan);
PPP_CB_TYPEDEF(void, on_NtQuerySection_enter, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t SectionInformationClass, uint32_t SectionInformation, uint32_t SectionInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySection_return, CPUState* cpu, target_ulong pc, uint32_t SectionHandle, uint32_t SectionInformationClass, uint32_t SectionInformation, uint32_t SectionInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySecurityAttributesToken_enter, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t Attributes, uint32_t NumberOfAttributes, uint32_t Buffer, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySecurityAttributesToken_return, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t Attributes, uint32_t NumberOfAttributes, uint32_t Buffer, uint32_t Length, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySecurityObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t SecurityInformation, uint32_t SecurityDescriptor, uint32_t Length, uint32_t LengthNeeded);
PPP_CB_TYPEDEF(void, on_NtQuerySecurityObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t SecurityInformation, uint32_t SecurityDescriptor, uint32_t Length, uint32_t LengthNeeded);
PPP_CB_TYPEDEF(void, on_NtQuerySemaphore_enter, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, uint32_t SemaphoreInformationClass, uint32_t SemaphoreInformation, uint32_t SemaphoreInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySemaphore_return, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, uint32_t SemaphoreInformationClass, uint32_t SemaphoreInformation, uint32_t SemaphoreInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySymbolicLinkObject_enter, CPUState* cpu, target_ulong pc, uint32_t LinkHandle, uint32_t LinkTarget, uint32_t ReturnedLength);
PPP_CB_TYPEDEF(void, on_NtQuerySymbolicLinkObject_return, CPUState* cpu, target_ulong pc, uint32_t LinkHandle, uint32_t LinkTarget, uint32_t ReturnedLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemEnvironmentValue_enter, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VariableValue, uint32_t ValueLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemEnvironmentValue_return, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VariableValue, uint32_t ValueLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemEnvironmentValueEx_enter, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VendorGuid, uint32_t Value, uint32_t ValueLength, uint32_t Attributes);
PPP_CB_TYPEDEF(void, on_NtQuerySystemEnvironmentValueEx_return, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VendorGuid, uint32_t Value, uint32_t ValueLength, uint32_t Attributes);
PPP_CB_TYPEDEF(void, on_NtQuerySystemInformation_enter, CPUState* cpu, target_ulong pc, uint32_t SystemInformationClass, uint32_t SystemInformation, uint32_t SystemInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemInformation_return, CPUState* cpu, target_ulong pc, uint32_t SystemInformationClass, uint32_t SystemInformation, uint32_t SystemInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemInformationEx_enter, CPUState* cpu, target_ulong pc, uint32_t SystemInformationClass, uint32_t QueryInformation, uint32_t QueryInformationLength, uint32_t SystemInformation, uint32_t SystemInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemInformationEx_return, CPUState* cpu, target_ulong pc, uint32_t SystemInformationClass, uint32_t QueryInformation, uint32_t QueryInformationLength, uint32_t SystemInformation, uint32_t SystemInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQuerySystemTime_enter, CPUState* cpu, target_ulong pc, uint32_t SystemTime);
PPP_CB_TYPEDEF(void, on_NtQuerySystemTime_return, CPUState* cpu, target_ulong pc, uint32_t SystemTime);
PPP_CB_TYPEDEF(void, on_NtQueryTimer_enter, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t TimerInformationClass, uint32_t TimerInformation, uint32_t TimerInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryTimer_return, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t TimerInformationClass, uint32_t TimerInformation, uint32_t TimerInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryTimerResolution_enter, CPUState* cpu, target_ulong pc, uint32_t MaximumTime, uint32_t MinimumTime, uint32_t CurrentTime);
PPP_CB_TYPEDEF(void, on_NtQueryTimerResolution_return, CPUState* cpu, target_ulong pc, uint32_t MaximumTime, uint32_t MinimumTime, uint32_t CurrentTime);
PPP_CB_TYPEDEF(void, on_NtQueryValueKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueName, uint32_t KeyValueInformationClass, uint32_t KeyValueInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtQueryValueKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueName, uint32_t KeyValueInformationClass, uint32_t KeyValueInformation, uint32_t Length, uint32_t ResultLength);
PPP_CB_TYPEDEF(void, on_NtQueryVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t MemoryInformationClass, uint32_t MemoryInformation, uint32_t MemoryInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t MemoryInformationClass, uint32_t MemoryInformation, uint32_t MemoryInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtQueryVolumeInformationFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FsInformation, uint32_t Length, uint32_t FsInformationClass);
PPP_CB_TYPEDEF(void, on_NtQueryVolumeInformationFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FsInformation, uint32_t Length, uint32_t FsInformationClass);
PPP_CB_TYPEDEF(void, on_NtQueueApcThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ApcRoutine, uint32_t ApcArgument1, uint32_t ApcArgument2, uint32_t ApcArgument3);
PPP_CB_TYPEDEF(void, on_NtQueueApcThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ApcRoutine, uint32_t ApcArgument1, uint32_t ApcArgument2, uint32_t ApcArgument3);
PPP_CB_TYPEDEF(void, on_NtQueueApcThreadEx_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t UserApcReserveHandle, uint32_t ApcRoutine, uint32_t ApcArgument1, uint32_t ApcArgument2, uint32_t ApcArgument3);
PPP_CB_TYPEDEF(void, on_NtQueueApcThreadEx_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t UserApcReserveHandle, uint32_t ApcRoutine, uint32_t ApcArgument1, uint32_t ApcArgument2, uint32_t ApcArgument3);
PPP_CB_TYPEDEF(void, on_NtRaiseException_enter, CPUState* cpu, target_ulong pc, uint32_t ExceptionRecord, uint32_t ContextRecord, uint32_t FirstChance);
PPP_CB_TYPEDEF(void, on_NtRaiseException_return, CPUState* cpu, target_ulong pc, uint32_t ExceptionRecord, uint32_t ContextRecord, uint32_t FirstChance);
PPP_CB_TYPEDEF(void, on_NtRaiseHardError_enter, CPUState* cpu, target_ulong pc, uint32_t ErrorStatus, uint32_t NumberOfParameters, uint32_t UnicodeStringParameterMask, uint32_t Parameters, uint32_t ValidResponseOptions, uint32_t Response);
PPP_CB_TYPEDEF(void, on_NtRaiseHardError_return, CPUState* cpu, target_ulong pc, uint32_t ErrorStatus, uint32_t NumberOfParameters, uint32_t UnicodeStringParameterMask, uint32_t Parameters, uint32_t ValidResponseOptions, uint32_t Response);
PPP_CB_TYPEDEF(void, on_NtReadFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtReadFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtReadFileScatter_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t SegmentArray, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtReadFileScatter_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t SegmentArray, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtReadOnlyEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtReadOnlyEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtReadRequestData_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Message, uint32_t DataEntryIndex, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesRead);
PPP_CB_TYPEDEF(void, on_NtReadRequestData_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Message, uint32_t DataEntryIndex, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesRead);
PPP_CB_TYPEDEF(void, on_NtReadVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesRead);
PPP_CB_TYPEDEF(void, on_NtReadVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesRead);
PPP_CB_TYPEDEF(void, on_NtRecoverEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t EnlistmentKey);
PPP_CB_TYPEDEF(void, on_NtRecoverEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t EnlistmentKey);
PPP_CB_TYPEDEF(void, on_NtRecoverResourceManager_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle);
PPP_CB_TYPEDEF(void, on_NtRecoverResourceManager_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle);
PPP_CB_TYPEDEF(void, on_NtRecoverTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionManagerHandle);
PPP_CB_TYPEDEF(void, on_NtRecoverTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t TransactionManagerHandle);
PPP_CB_TYPEDEF(void, on_NtRegisterProtocolAddressInformation_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManager, uint32_t ProtocolId, uint32_t ProtocolInformationSize, uint32_t ProtocolInformation, uint32_t CreateOptions);
PPP_CB_TYPEDEF(void, on_NtRegisterProtocolAddressInformation_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManager, uint32_t ProtocolId, uint32_t ProtocolInformationSize, uint32_t ProtocolInformation, uint32_t CreateOptions);
PPP_CB_TYPEDEF(void, on_NtRegisterThreadTerminatePort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle);
PPP_CB_TYPEDEF(void, on_NtRegisterThreadTerminatePort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle);
PPP_CB_TYPEDEF(void, on_NtReleaseKeyedEvent_enter, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t KeyValue, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtReleaseKeyedEvent_return, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t KeyValue, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtReleaseMutant_enter, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t PreviousCount);
PPP_CB_TYPEDEF(void, on_NtReleaseMutant_return, CPUState* cpu, target_ulong pc, uint32_t MutantHandle, uint32_t PreviousCount);
PPP_CB_TYPEDEF(void, on_NtReleaseSemaphore_enter, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, int32_t ReleaseCount, uint32_t PreviousCount);
PPP_CB_TYPEDEF(void, on_NtReleaseSemaphore_return, CPUState* cpu, target_ulong pc, uint32_t SemaphoreHandle, int32_t ReleaseCount, uint32_t PreviousCount);
PPP_CB_TYPEDEF(void, on_NtReleaseWorkerFactoryWorker_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle);
PPP_CB_TYPEDEF(void, on_NtReleaseWorkerFactoryWorker_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle);
PPP_CB_TYPEDEF(void, on_NtRemoveIoCompletion_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t KeyContext, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtRemoveIoCompletion_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t KeyContext, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtRemoveIoCompletionEx_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t IoCompletionInformation, uint32_t Count, uint32_t NumEntriesRemoved, uint32_t Timeout, uint32_t Alertable);
PPP_CB_TYPEDEF(void, on_NtRemoveIoCompletionEx_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t IoCompletionInformation, uint32_t Count, uint32_t NumEntriesRemoved, uint32_t Timeout, uint32_t Alertable);
PPP_CB_TYPEDEF(void, on_NtRemoveProcessDebug_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DebugObjectHandle);
PPP_CB_TYPEDEF(void, on_NtRemoveProcessDebug_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t DebugObjectHandle);
PPP_CB_TYPEDEF(void, on_NtRenameKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t NewName);
PPP_CB_TYPEDEF(void, on_NtRenameKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t NewName);
PPP_CB_TYPEDEF(void, on_NtRenameTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t LogFileName, uint32_t ExistingTransactionManagerGuid);
PPP_CB_TYPEDEF(void, on_NtRenameTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t LogFileName, uint32_t ExistingTransactionManagerGuid);
PPP_CB_TYPEDEF(void, on_NtReplaceKey_enter, CPUState* cpu, target_ulong pc, uint32_t NewFile, uint32_t TargetHandle, uint32_t OldFile);
PPP_CB_TYPEDEF(void, on_NtReplaceKey_return, CPUState* cpu, target_ulong pc, uint32_t NewFile, uint32_t TargetHandle, uint32_t OldFile);
PPP_CB_TYPEDEF(void, on_NtReplacePartitionUnit_enter, CPUState* cpu, target_ulong pc, uint32_t TargetInstancePath, uint32_t SpareInstancePath, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtReplacePartitionUnit_return, CPUState* cpu, target_ulong pc, uint32_t TargetInstancePath, uint32_t SpareInstancePath, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtReplyPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ReplyMessage);
PPP_CB_TYPEDEF(void, on_NtReplyPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ReplyMessage);
PPP_CB_TYPEDEF(void, on_NtReplyWaitReceivePort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortContext, uint32_t ReplyMessage, uint32_t ReceiveMessage);
PPP_CB_TYPEDEF(void, on_NtReplyWaitReceivePort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortContext, uint32_t ReplyMessage, uint32_t ReceiveMessage);
PPP_CB_TYPEDEF(void, on_NtReplyWaitReceivePortEx_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortContext, uint32_t ReplyMessage, uint32_t ReceiveMessage, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtReplyWaitReceivePortEx_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortContext, uint32_t ReplyMessage, uint32_t ReceiveMessage, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtReplyWaitReplyPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ReplyMessage);
PPP_CB_TYPEDEF(void, on_NtReplyWaitReplyPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t ReplyMessage);
PPP_CB_TYPEDEF(void, on_NtRequestPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t RequestMessage);
PPP_CB_TYPEDEF(void, on_NtRequestPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t RequestMessage);
PPP_CB_TYPEDEF(void, on_NtRequestWaitReplyPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t RequestMessage, uint32_t ReplyMessage);
PPP_CB_TYPEDEF(void, on_NtRequestWaitReplyPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t RequestMessage, uint32_t ReplyMessage);
PPP_CB_TYPEDEF(void, on_NtResetEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtResetEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtResetWriteWatch_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize);
PPP_CB_TYPEDEF(void, on_NtResetWriteWatch_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize);
PPP_CB_TYPEDEF(void, on_NtRestoreKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t FileHandle, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtRestoreKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t FileHandle, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtResumeProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle);
PPP_CB_TYPEDEF(void, on_NtResumeProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle);
PPP_CB_TYPEDEF(void, on_NtResumeThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PreviousSuspendCount);
PPP_CB_TYPEDEF(void, on_NtResumeThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PreviousSuspendCount);
PPP_CB_TYPEDEF(void, on_NtRollbackComplete_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtRollbackComplete_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtRollbackEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtRollbackEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtRollbackTransaction_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t Wait);
PPP_CB_TYPEDEF(void, on_NtRollbackTransaction_return, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t Wait);
PPP_CB_TYPEDEF(void, on_NtRollforwardTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionManagerHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtRollforwardTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t TransactionManagerHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtSaveKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t FileHandle);
PPP_CB_TYPEDEF(void, on_NtSaveKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t FileHandle);
PPP_CB_TYPEDEF(void, on_NtSaveKeyEx_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t FileHandle, uint32_t Format);
PPP_CB_TYPEDEF(void, on_NtSaveKeyEx_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t FileHandle, uint32_t Format);
PPP_CB_TYPEDEF(void, on_NtSaveMergedKeys_enter, CPUState* cpu, target_ulong pc, uint32_t HighPrecedenceKeyHandle, uint32_t LowPrecedenceKeyHandle, uint32_t FileHandle);
PPP_CB_TYPEDEF(void, on_NtSaveMergedKeys_return, CPUState* cpu, target_ulong pc, uint32_t HighPrecedenceKeyHandle, uint32_t LowPrecedenceKeyHandle, uint32_t FileHandle);
PPP_CB_TYPEDEF(void, on_NtSecureConnectPort_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortName, uint32_t SecurityQos, uint32_t ClientView, uint32_t RequiredServerSid, uint32_t ServerView, uint32_t MaxMessageLength, uint32_t ConnectionInformation, uint32_t ConnectionInformationLength);
PPP_CB_TYPEDEF(void, on_NtSecureConnectPort_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t PortName, uint32_t SecurityQos, uint32_t ClientView, uint32_t RequiredServerSid, uint32_t ServerView, uint32_t MaxMessageLength, uint32_t ConnectionInformation, uint32_t ConnectionInformationLength);
PPP_CB_TYPEDEF(void, on_NtSerializeBoot_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtSerializeBoot_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtSetBootEntryOrder_enter, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtSetBootEntryOrder_return, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtSetBootOptions_enter, CPUState* cpu, target_ulong pc, uint32_t BootOptions, uint32_t FieldsToChange);
PPP_CB_TYPEDEF(void, on_NtSetBootOptions_return, CPUState* cpu, target_ulong pc, uint32_t BootOptions, uint32_t FieldsToChange);
PPP_CB_TYPEDEF(void, on_NtSetContextThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadContext);
PPP_CB_TYPEDEF(void, on_NtSetContextThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadContext);
PPP_CB_TYPEDEF(void, on_NtSetDebugFilterState_enter, CPUState* cpu, target_ulong pc, uint32_t ComponentId, uint32_t Level, uint32_t State);
PPP_CB_TYPEDEF(void, on_NtSetDebugFilterState_return, CPUState* cpu, target_ulong pc, uint32_t ComponentId, uint32_t Level, uint32_t State);
PPP_CB_TYPEDEF(void, on_NtSetDefaultHardErrorPort_enter, CPUState* cpu, target_ulong pc, uint32_t DefaultHardErrorPort);
PPP_CB_TYPEDEF(void, on_NtSetDefaultHardErrorPort_return, CPUState* cpu, target_ulong pc, uint32_t DefaultHardErrorPort);
PPP_CB_TYPEDEF(void, on_NtSetDefaultLocale_enter, CPUState* cpu, target_ulong pc, uint32_t UserProfile, uint32_t DefaultLocaleId);
PPP_CB_TYPEDEF(void, on_NtSetDefaultLocale_return, CPUState* cpu, target_ulong pc, uint32_t UserProfile, uint32_t DefaultLocaleId);
PPP_CB_TYPEDEF(void, on_NtSetDefaultUILanguage_enter, CPUState* cpu, target_ulong pc, uint32_t DefaultUILanguageId);
PPP_CB_TYPEDEF(void, on_NtSetDefaultUILanguage_return, CPUState* cpu, target_ulong pc, uint32_t DefaultUILanguageId);
PPP_CB_TYPEDEF(void, on_NtSetDriverEntryOrder_enter, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtSetDriverEntryOrder_return, CPUState* cpu, target_ulong pc, uint32_t Ids, uint32_t Count);
PPP_CB_TYPEDEF(void, on_NtSetEaFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtSetEaFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtSetEvent_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtSetEvent_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtSetEventBoostPriority_enter, CPUState* cpu, target_ulong pc, uint32_t EventHandle);
PPP_CB_TYPEDEF(void, on_NtSetEventBoostPriority_return, CPUState* cpu, target_ulong pc, uint32_t EventHandle);
PPP_CB_TYPEDEF(void, on_NtSetHighEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetHighEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetHighWaitLowEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetHighWaitLowEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetInformationDebugObject_enter, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t DebugObjectInformationClass, uint32_t DebugInformation, uint32_t DebugInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationDebugObject_return, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t DebugObjectInformationClass, uint32_t DebugInformation, uint32_t DebugInformationLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationEnlistment_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t EnlistmentInformationClass, uint32_t EnlistmentInformation, uint32_t EnlistmentInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationEnlistment_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t EnlistmentInformationClass, uint32_t EnlistmentInformation, uint32_t EnlistmentInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FileInformation, uint32_t Length, uint32_t FileInformationClass);
PPP_CB_TYPEDEF(void, on_NtSetInformationFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FileInformation, uint32_t Length, uint32_t FileInformationClass);
PPP_CB_TYPEDEF(void, on_NtSetInformationJobObject_enter, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t JobObjectInformationClass, uint32_t JobObjectInformation, uint32_t JobObjectInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationJobObject_return, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t JobObjectInformationClass, uint32_t JobObjectInformation, uint32_t JobObjectInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t KeySetInformationClass, uint32_t KeySetInformation, uint32_t KeySetInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t KeySetInformationClass, uint32_t KeySetInformation, uint32_t KeySetInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t ObjectInformationClass, uint32_t ObjectInformation, uint32_t ObjectInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t ObjectInformationClass, uint32_t ObjectInformation, uint32_t ObjectInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ProcessInformationClass, uint32_t ProcessInformation, uint32_t ProcessInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ProcessInformationClass, uint32_t ProcessInformation, uint32_t ProcessInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationResourceManager_enter, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t ResourceManagerInformationClass, uint32_t ResourceManagerInformation, uint32_t ResourceManagerInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationResourceManager_return, CPUState* cpu, target_ulong pc, uint32_t ResourceManagerHandle, uint32_t ResourceManagerInformationClass, uint32_t ResourceManagerInformation, uint32_t ResourceManagerInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadInformationClass, uint32_t ThreadInformation, uint32_t ThreadInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ThreadInformationClass, uint32_t ThreadInformation, uint32_t ThreadInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationToken_enter, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t TokenInformationClass, uint32_t TokenInformation, uint32_t TokenInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationToken_return, CPUState* cpu, target_ulong pc, uint32_t TokenHandle, uint32_t TokenInformationClass, uint32_t TokenInformation, uint32_t TokenInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationTransaction_enter, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t TransactionInformationClass, uint32_t TransactionInformation, uint32_t TransactionInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationTransaction_return, CPUState* cpu, target_ulong pc, uint32_t TransactionHandle, uint32_t TransactionInformationClass, uint32_t TransactionInformation, uint32_t TransactionInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationTransactionManager_enter, CPUState* cpu, target_ulong pc, uint32_t TmHandle, uint32_t TransactionManagerInformationClass, uint32_t TransactionManagerInformation, uint32_t TransactionManagerInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationTransactionManager_return, CPUState* cpu, target_ulong pc, uint32_t TmHandle, uint32_t TransactionManagerInformationClass, uint32_t TransactionManagerInformation, uint32_t TransactionManagerInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationWorkerFactory_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t WorkerFactoryInformationClass, uint32_t WorkerFactoryInformation, uint32_t WorkerFactoryInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetInformationWorkerFactory_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t WorkerFactoryInformationClass, uint32_t WorkerFactoryInformation, uint32_t WorkerFactoryInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetIntervalProfile_enter, CPUState* cpu, target_ulong pc, uint32_t Interval, uint32_t Source);
PPP_CB_TYPEDEF(void, on_NtSetIntervalProfile_return, CPUState* cpu, target_ulong pc, uint32_t Interval, uint32_t Source);
PPP_CB_TYPEDEF(void, on_NtSetIoCompletion_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t KeyContext, uint32_t ApcContext, uint32_t IoStatus, uint32_t IoStatusInformation);
PPP_CB_TYPEDEF(void, on_NtSetIoCompletion_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t KeyContext, uint32_t ApcContext, uint32_t IoStatus, uint32_t IoStatusInformation);
PPP_CB_TYPEDEF(void, on_NtSetIoCompletionEx_enter, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t IoCompletionReserveHandle, uint32_t KeyContext, uint32_t ApcContext, uint32_t IoStatus, uint32_t IoStatusInformation);
PPP_CB_TYPEDEF(void, on_NtSetIoCompletionEx_return, CPUState* cpu, target_ulong pc, uint32_t IoCompletionHandle, uint32_t IoCompletionReserveHandle, uint32_t KeyContext, uint32_t ApcContext, uint32_t IoStatus, uint32_t IoStatusInformation);
PPP_CB_TYPEDEF(void, on_NtSetLdtEntries_enter, CPUState* cpu, target_ulong pc, uint32_t Selector0, uint32_t Entry0Low, uint32_t Entry0Hi, uint32_t Selector1, uint32_t Entry1Low, uint32_t Entry1Hi);
PPP_CB_TYPEDEF(void, on_NtSetLdtEntries_return, CPUState* cpu, target_ulong pc, uint32_t Selector0, uint32_t Entry0Low, uint32_t Entry0Hi, uint32_t Selector1, uint32_t Entry1Low, uint32_t Entry1Hi);
PPP_CB_TYPEDEF(void, on_NtSetLowEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetLowEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetLowWaitHighEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetLowWaitHighEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtSetQuotaInformationFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtSetQuotaInformationFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length);
PPP_CB_TYPEDEF(void, on_NtSetSecurityObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t SecurityInformation, uint32_t SecurityDescriptor);
PPP_CB_TYPEDEF(void, on_NtSetSecurityObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t SecurityInformation, uint32_t SecurityDescriptor);
PPP_CB_TYPEDEF(void, on_NtSetSystemEnvironmentValue_enter, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VariableValue);
PPP_CB_TYPEDEF(void, on_NtSetSystemEnvironmentValue_return, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VariableValue);
PPP_CB_TYPEDEF(void, on_NtSetSystemEnvironmentValueEx_enter, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VendorGuid, uint32_t Value, uint32_t ValueLength, uint32_t Attributes);
PPP_CB_TYPEDEF(void, on_NtSetSystemEnvironmentValueEx_return, CPUState* cpu, target_ulong pc, uint32_t VariableName, uint32_t VendorGuid, uint32_t Value, uint32_t ValueLength, uint32_t Attributes);
PPP_CB_TYPEDEF(void, on_NtSetSystemInformation_enter, CPUState* cpu, target_ulong pc, uint32_t SystemInformationClass, uint32_t SystemInformation, uint32_t SystemInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetSystemInformation_return, CPUState* cpu, target_ulong pc, uint32_t SystemInformationClass, uint32_t SystemInformation, uint32_t SystemInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetSystemPowerState_enter, CPUState* cpu, target_ulong pc, uint32_t SystemAction, uint32_t MinSystemState, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtSetSystemPowerState_return, CPUState* cpu, target_ulong pc, uint32_t SystemAction, uint32_t MinSystemState, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtSetSystemTime_enter, CPUState* cpu, target_ulong pc, uint32_t SystemTime, uint32_t PreviousTime);
PPP_CB_TYPEDEF(void, on_NtSetSystemTime_return, CPUState* cpu, target_ulong pc, uint32_t SystemTime, uint32_t PreviousTime);
PPP_CB_TYPEDEF(void, on_NtSetThreadExecutionState_enter, CPUState* cpu, target_ulong pc, uint32_t esFlags, uint32_t PreviousFlags);
PPP_CB_TYPEDEF(void, on_NtSetThreadExecutionState_return, CPUState* cpu, target_ulong pc, uint32_t esFlags, uint32_t PreviousFlags);
PPP_CB_TYPEDEF(void, on_NtSetTimer_enter, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t DueTime, uint32_t TimerApcRoutine, uint32_t TimerContext, uint32_t WakeTimer, int32_t Period, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtSetTimer_return, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t DueTime, uint32_t TimerApcRoutine, uint32_t TimerContext, uint32_t WakeTimer, int32_t Period, uint32_t PreviousState);
PPP_CB_TYPEDEF(void, on_NtSetTimerEx_enter, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t TimerSetInformationClass, uint32_t TimerSetInformation, uint32_t TimerSetInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetTimerEx_return, CPUState* cpu, target_ulong pc, uint32_t TimerHandle, uint32_t TimerSetInformationClass, uint32_t TimerSetInformation, uint32_t TimerSetInformationLength);
PPP_CB_TYPEDEF(void, on_NtSetTimerResolution_enter, CPUState* cpu, target_ulong pc, uint32_t DesiredTime, uint32_t SetResolution, uint32_t ActualTime);
PPP_CB_TYPEDEF(void, on_NtSetTimerResolution_return, CPUState* cpu, target_ulong pc, uint32_t DesiredTime, uint32_t SetResolution, uint32_t ActualTime);
PPP_CB_TYPEDEF(void, on_NtSetUuidSeed_enter, CPUState* cpu, target_ulong pc, uint32_t Seed);
PPP_CB_TYPEDEF(void, on_NtSetUuidSeed_return, CPUState* cpu, target_ulong pc, uint32_t Seed);
PPP_CB_TYPEDEF(void, on_NtSetValueKey_enter, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueName, uint32_t TitleIndex, uint32_t Type, uint32_t Data, uint32_t DataSize);
PPP_CB_TYPEDEF(void, on_NtSetValueKey_return, CPUState* cpu, target_ulong pc, uint32_t KeyHandle, uint32_t ValueName, uint32_t TitleIndex, uint32_t Type, uint32_t Data, uint32_t DataSize);
PPP_CB_TYPEDEF(void, on_NtSetVolumeInformationFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FsInformation, uint32_t Length, uint32_t FsInformationClass);
PPP_CB_TYPEDEF(void, on_NtSetVolumeInformationFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t FsInformation, uint32_t Length, uint32_t FsInformationClass);
PPP_CB_TYPEDEF(void, on_NtShutdownSystem_enter, CPUState* cpu, target_ulong pc, uint32_t Action);
PPP_CB_TYPEDEF(void, on_NtShutdownSystem_return, CPUState* cpu, target_ulong pc, uint32_t Action);
PPP_CB_TYPEDEF(void, on_NtShutdownWorkerFactory_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t PendingWorkerCount);
PPP_CB_TYPEDEF(void, on_NtShutdownWorkerFactory_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t PendingWorkerCount);
PPP_CB_TYPEDEF(void, on_NtSignalAndWaitForSingleObject_enter, CPUState* cpu, target_ulong pc, uint32_t SignalHandle, uint32_t WaitHandle, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtSignalAndWaitForSingleObject_return, CPUState* cpu, target_ulong pc, uint32_t SignalHandle, uint32_t WaitHandle, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtSinglePhaseReject_enter, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtSinglePhaseReject_return, CPUState* cpu, target_ulong pc, uint32_t EnlistmentHandle, uint32_t TmVirtualClock);
PPP_CB_TYPEDEF(void, on_NtStartProfile_enter, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle);
PPP_CB_TYPEDEF(void, on_NtStartProfile_return, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle);
PPP_CB_TYPEDEF(void, on_NtStopProfile_enter, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle);
PPP_CB_TYPEDEF(void, on_NtStopProfile_return, CPUState* cpu, target_ulong pc, uint32_t ProfileHandle);
PPP_CB_TYPEDEF(void, on_NtSuspendProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle);
PPP_CB_TYPEDEF(void, on_NtSuspendProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle);
PPP_CB_TYPEDEF(void, on_NtSuspendThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PreviousSuspendCount);
PPP_CB_TYPEDEF(void, on_NtSuspendThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t PreviousSuspendCount);
PPP_CB_TYPEDEF(void, on_NtSystemDebugControl_enter, CPUState* cpu, target_ulong pc, uint32_t Command, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtSystemDebugControl_return, CPUState* cpu, target_ulong pc, uint32_t Command, uint32_t InputBuffer, uint32_t InputBufferLength, uint32_t OutputBuffer, uint32_t OutputBufferLength, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtTerminateJobObject_enter, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t ExitStatus);
PPP_CB_TYPEDEF(void, on_NtTerminateJobObject_return, CPUState* cpu, target_ulong pc, uint32_t JobHandle, uint32_t ExitStatus);
PPP_CB_TYPEDEF(void, on_NtTerminateProcess_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ExitStatus);
PPP_CB_TYPEDEF(void, on_NtTerminateProcess_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t ExitStatus);
PPP_CB_TYPEDEF(void, on_NtTerminateThread_enter, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ExitStatus);
PPP_CB_TYPEDEF(void, on_NtTerminateThread_return, CPUState* cpu, target_ulong pc, uint32_t ThreadHandle, uint32_t ExitStatus);
PPP_CB_TYPEDEF(void, on_NtTestAlert_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtTestAlert_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtThawRegistry_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtThawRegistry_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtThawTransactions_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtThawTransactions_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtTraceControl_enter, CPUState* cpu, target_ulong pc, uint32_t FunctionCode, uint32_t InBuffer, uint32_t InBufferLen, uint32_t OutBuffer, uint32_t OutBufferLen, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtTraceControl_return, CPUState* cpu, target_ulong pc, uint32_t FunctionCode, uint32_t InBuffer, uint32_t InBufferLen, uint32_t OutBuffer, uint32_t OutBufferLen, uint32_t ReturnLength);
PPP_CB_TYPEDEF(void, on_NtTraceEvent_enter, CPUState* cpu, target_ulong pc, uint32_t TraceHandle, uint32_t Flags, uint32_t FieldSize, uint32_t Fields);
PPP_CB_TYPEDEF(void, on_NtTraceEvent_return, CPUState* cpu, target_ulong pc, uint32_t TraceHandle, uint32_t Flags, uint32_t FieldSize, uint32_t Fields);
PPP_CB_TYPEDEF(void, on_NtTranslateFilePath_enter, CPUState* cpu, target_ulong pc, uint32_t InputFilePath, uint32_t OutputType, uint32_t OutputFilePath, uint32_t OutputFilePathLength);
PPP_CB_TYPEDEF(void, on_NtTranslateFilePath_return, CPUState* cpu, target_ulong pc, uint32_t InputFilePath, uint32_t OutputType, uint32_t OutputFilePath, uint32_t OutputFilePathLength);
PPP_CB_TYPEDEF(void, on_NtUmsThreadYield_enter, CPUState* cpu, target_ulong pc, uint32_t SchedulerParam);
PPP_CB_TYPEDEF(void, on_NtUmsThreadYield_return, CPUState* cpu, target_ulong pc, uint32_t SchedulerParam);
PPP_CB_TYPEDEF(void, on_NtUnloadDriver_enter, CPUState* cpu, target_ulong pc, uint32_t DriverServiceName);
PPP_CB_TYPEDEF(void, on_NtUnloadDriver_return, CPUState* cpu, target_ulong pc, uint32_t DriverServiceName);
PPP_CB_TYPEDEF(void, on_NtUnloadKey_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey);
PPP_CB_TYPEDEF(void, on_NtUnloadKey_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey);
PPP_CB_TYPEDEF(void, on_NtUnloadKey2_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtUnloadKey2_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t Flags);
PPP_CB_TYPEDEF(void, on_NtUnloadKeyEx_enter, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t Event);
PPP_CB_TYPEDEF(void, on_NtUnloadKeyEx_return, CPUState* cpu, target_ulong pc, uint32_t TargetKey, uint32_t Event);
PPP_CB_TYPEDEF(void, on_NtUnlockFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t ByteOffset, uint32_t Length, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtUnlockFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t IoStatusBlock, uint32_t ByteOffset, uint32_t Length, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtUnlockVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t MapType);
PPP_CB_TYPEDEF(void, on_NtUnlockVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t RegionSize, uint32_t MapType);
PPP_CB_TYPEDEF(void, on_NtUnmapViewOfSection_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress);
PPP_CB_TYPEDEF(void, on_NtUnmapViewOfSection_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress);
PPP_CB_TYPEDEF(void, on_NtVdmControl_enter, CPUState* cpu, target_ulong pc, uint32_t Service, uint32_t ServiceData);
PPP_CB_TYPEDEF(void, on_NtVdmControl_return, CPUState* cpu, target_ulong pc, uint32_t Service, uint32_t ServiceData);
PPP_CB_TYPEDEF(void, on_NtWaitForDebugEvent_enter, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t Alertable, uint32_t Timeout, uint32_t WaitStateChange);
PPP_CB_TYPEDEF(void, on_NtWaitForDebugEvent_return, CPUState* cpu, target_ulong pc, uint32_t DebugObjectHandle, uint32_t Alertable, uint32_t Timeout, uint32_t WaitStateChange);
PPP_CB_TYPEDEF(void, on_NtWaitForKeyedEvent_enter, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t KeyValue, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForKeyedEvent_return, CPUState* cpu, target_ulong pc, uint32_t KeyedEventHandle, uint32_t KeyValue, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForMultipleObjects_enter, CPUState* cpu, target_ulong pc, uint32_t Count, uint32_t Handles, uint32_t WaitType, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForMultipleObjects_return, CPUState* cpu, target_ulong pc, uint32_t Count, uint32_t Handles, uint32_t WaitType, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForMultipleObjects32_enter, CPUState* cpu, target_ulong pc, uint32_t Count, uint32_t Handles, uint32_t WaitType, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForMultipleObjects32_return, CPUState* cpu, target_ulong pc, uint32_t Count, uint32_t Handles, uint32_t WaitType, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForSingleObject_enter, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForSingleObject_return, CPUState* cpu, target_ulong pc, uint32_t Handle, uint32_t Alertable, uint32_t Timeout);
PPP_CB_TYPEDEF(void, on_NtWaitForWorkViaWorkerFactory_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t MiniPacket);
PPP_CB_TYPEDEF(void, on_NtWaitForWorkViaWorkerFactory_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle, uint32_t MiniPacket);
PPP_CB_TYPEDEF(void, on_NtWaitHighEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtWaitHighEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtWaitLowEventPair_enter, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtWaitLowEventPair_return, CPUState* cpu, target_ulong pc, uint32_t EventPairHandle);
PPP_CB_TYPEDEF(void, on_NtWorkerFactoryWorkerReady_enter, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle);
PPP_CB_TYPEDEF(void, on_NtWorkerFactoryWorkerReady_return, CPUState* cpu, target_ulong pc, uint32_t WorkerFactoryHandle);
PPP_CB_TYPEDEF(void, on_NtWriteFile_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtWriteFile_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t Buffer, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtWriteFileGather_enter, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t SegmentArray, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtWriteFileGather_return, CPUState* cpu, target_ulong pc, uint32_t FileHandle, uint32_t Event, uint32_t ApcRoutine, uint32_t ApcContext, uint32_t IoStatusBlock, uint32_t SegmentArray, uint32_t Length, uint32_t ByteOffset, uint32_t Key);
PPP_CB_TYPEDEF(void, on_NtWriteRequestData_enter, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Message, uint32_t DataEntryIndex, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesWritten);
PPP_CB_TYPEDEF(void, on_NtWriteRequestData_return, CPUState* cpu, target_ulong pc, uint32_t PortHandle, uint32_t Message, uint32_t DataEntryIndex, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesWritten);
PPP_CB_TYPEDEF(void, on_NtWriteVirtualMemory_enter, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesWritten);
PPP_CB_TYPEDEF(void, on_NtWriteVirtualMemory_return, CPUState* cpu, target_ulong pc, uint32_t ProcessHandle, uint32_t BaseAddress, uint32_t Buffer, uint32_t BufferSize, uint32_t NumberOfBytesWritten);
PPP_CB_TYPEDEF(void, on_NtYieldExecution_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_NtYieldExecution_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_accept4_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, int32_t arg3);
PPP_CB_TYPEDEF(void, on_sys_accept4_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, int32_t arg3);
PPP_CB_TYPEDEF(void, on_sys_access_enter, CPUState* cpu, target_ulong pc, uint32_t filename, int32_t mode);
PPP_CB_TYPEDEF(void, on_sys_access_return, CPUState* cpu, target_ulong pc, uint32_t filename, int32_t mode);
PPP_CB_TYPEDEF(void, on_sys_acct_enter, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_acct_return, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_add_key_enter, CPUState* cpu, target_ulong pc, uint32_t _type, uint32_t _description, uint32_t _payload, uint32_t plen, uint32_t destringid);
PPP_CB_TYPEDEF(void, on_sys_add_key_return, CPUState* cpu, target_ulong pc, uint32_t _type, uint32_t _description, uint32_t _payload, uint32_t plen, uint32_t destringid);
PPP_CB_TYPEDEF(void, on_sys_adjtimex_enter, CPUState* cpu, target_ulong pc, uint32_t txc_p);
PPP_CB_TYPEDEF(void, on_sys_adjtimex_return, CPUState* cpu, target_ulong pc, uint32_t txc_p);
PPP_CB_TYPEDEF(void, on_sys_alarm_enter, CPUState* cpu, target_ulong pc, uint32_t seconds);
PPP_CB_TYPEDEF(void, on_sys_alarm_return, CPUState* cpu, target_ulong pc, uint32_t seconds);
PPP_CB_TYPEDEF(void, on_sys_arch_prctl_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_arch_prctl_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_bdflush_enter, CPUState* cpu, target_ulong pc, int32_t func, int32_t _data);
PPP_CB_TYPEDEF(void, on_sys_bdflush_return, CPUState* cpu, target_ulong pc, int32_t func, int32_t _data);
PPP_CB_TYPEDEF(void, on_sys_bind_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_bind_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_bpf_enter, CPUState* cpu, target_ulong pc, int32_t cmd, uint32_t attr, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_bpf_return, CPUState* cpu, target_ulong pc, int32_t cmd, uint32_t attr, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_brk_enter, CPUState* cpu, target_ulong pc, uint32_t brk);
PPP_CB_TYPEDEF(void, on_sys_brk_return, CPUState* cpu, target_ulong pc, uint32_t brk);
PPP_CB_TYPEDEF(void, on_sys_capget_enter, CPUState* cpu, target_ulong pc, uint32_t header, uint32_t dataptr);
PPP_CB_TYPEDEF(void, on_sys_capget_return, CPUState* cpu, target_ulong pc, uint32_t header, uint32_t dataptr);
PPP_CB_TYPEDEF(void, on_sys_capset_enter, CPUState* cpu, target_ulong pc, uint32_t header, uint32_t _data);
PPP_CB_TYPEDEF(void, on_sys_capset_return, CPUState* cpu, target_ulong pc, uint32_t header, uint32_t _data);
PPP_CB_TYPEDEF(void, on_sys_chdir_enter, CPUState* cpu, target_ulong pc, uint32_t filename);
PPP_CB_TYPEDEF(void, on_sys_chdir_return, CPUState* cpu, target_ulong pc, uint32_t filename);
PPP_CB_TYPEDEF(void, on_sys_chmod_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_chmod_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_chown_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_chown_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_chown16_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_chown16_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_chroot_enter, CPUState* cpu, target_ulong pc, uint32_t filename);
PPP_CB_TYPEDEF(void, on_sys_chroot_return, CPUState* cpu, target_ulong pc, uint32_t filename);
PPP_CB_TYPEDEF(void, on_sys_clock_adjtime_enter, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tx);
PPP_CB_TYPEDEF(void, on_sys_clock_adjtime_return, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tx);
PPP_CB_TYPEDEF(void, on_sys_clock_getres_enter, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tp);
PPP_CB_TYPEDEF(void, on_sys_clock_getres_return, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tp);
PPP_CB_TYPEDEF(void, on_sys_clock_gettime_enter, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tp);
PPP_CB_TYPEDEF(void, on_sys_clock_gettime_return, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tp);
PPP_CB_TYPEDEF(void, on_sys_clock_nanosleep_enter, CPUState* cpu, target_ulong pc, uint32_t which_clock, int32_t flags, uint32_t rqtp, uint32_t rmtp);
PPP_CB_TYPEDEF(void, on_sys_clock_nanosleep_return, CPUState* cpu, target_ulong pc, uint32_t which_clock, int32_t flags, uint32_t rqtp, uint32_t rmtp);
PPP_CB_TYPEDEF(void, on_sys_clock_settime_enter, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tp);
PPP_CB_TYPEDEF(void, on_sys_clock_settime_return, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t tp);
PPP_CB_TYPEDEF(void, on_sys_clone_enter, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4);
PPP_CB_TYPEDEF(void, on_sys_clone_return, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4);
PPP_CB_TYPEDEF(void, on_sys_close_enter, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_close_return, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_connect_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_connect_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_copy_file_range_enter, CPUState* cpu, target_ulong pc, int32_t fd_in, uint32_t off_in, int32_t fd_out, uint32_t off_out, uint32_t len, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_copy_file_range_return, CPUState* cpu, target_ulong pc, int32_t fd_in, uint32_t off_in, int32_t fd_out, uint32_t off_out, uint32_t len, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_creat_enter, CPUState* cpu, target_ulong pc, uint32_t pathname, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_creat_return, CPUState* cpu, target_ulong pc, uint32_t pathname, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_delete_module_enter, CPUState* cpu, target_ulong pc, uint32_t name_user, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_delete_module_return, CPUState* cpu, target_ulong pc, uint32_t name_user, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_dup_enter, CPUState* cpu, target_ulong pc, uint32_t fildes);
PPP_CB_TYPEDEF(void, on_sys_dup_return, CPUState* cpu, target_ulong pc, uint32_t fildes);
PPP_CB_TYPEDEF(void, on_sys_dup2_enter, CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd);
PPP_CB_TYPEDEF(void, on_sys_dup2_return, CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd);
PPP_CB_TYPEDEF(void, on_sys_dup3_enter, CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_dup3_return, CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_epoll_create_enter, CPUState* cpu, target_ulong pc, int32_t size);
PPP_CB_TYPEDEF(void, on_sys_epoll_create_return, CPUState* cpu, target_ulong pc, int32_t size);
PPP_CB_TYPEDEF(void, on_sys_epoll_create1_enter, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_epoll_create1_return, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_epoll_ctl_enter, CPUState* cpu, target_ulong pc, int32_t epfd, int32_t op, int32_t fd, uint32_t event);
PPP_CB_TYPEDEF(void, on_sys_epoll_ctl_return, CPUState* cpu, target_ulong pc, int32_t epfd, int32_t op, int32_t fd, uint32_t event);
PPP_CB_TYPEDEF(void, on_sys_epoll_pwait_enter, CPUState* cpu, target_ulong pc, int32_t epfd, uint32_t events, int32_t maxevents, int32_t timeout, uint32_t sigmask, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_epoll_pwait_return, CPUState* cpu, target_ulong pc, int32_t epfd, uint32_t events, int32_t maxevents, int32_t timeout, uint32_t sigmask, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_epoll_wait_enter, CPUState* cpu, target_ulong pc, int32_t epfd, uint32_t events, int32_t maxevents, int32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_epoll_wait_return, CPUState* cpu, target_ulong pc, int32_t epfd, uint32_t events, int32_t maxevents, int32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_eventfd_enter, CPUState* cpu, target_ulong pc, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_eventfd_return, CPUState* cpu, target_ulong pc, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_eventfd2_enter, CPUState* cpu, target_ulong pc, uint32_t count, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_eventfd2_return, CPUState* cpu, target_ulong pc, uint32_t count, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_execve_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t argv, uint32_t envp);
PPP_CB_TYPEDEF(void, on_sys_execve_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t argv, uint32_t envp);
PPP_CB_TYPEDEF(void, on_sys_execveat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t argv, uint32_t envp, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_execveat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t argv, uint32_t envp, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_exit_enter, CPUState* cpu, target_ulong pc, int32_t error_code);
PPP_CB_TYPEDEF(void, on_sys_exit_return, CPUState* cpu, target_ulong pc, int32_t error_code);
PPP_CB_TYPEDEF(void, on_sys_exit_group_enter, CPUState* cpu, target_ulong pc, int32_t error_code);
PPP_CB_TYPEDEF(void, on_sys_exit_group_return, CPUState* cpu, target_ulong pc, int32_t error_code);
PPP_CB_TYPEDEF(void, on_sys_faccessat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, int32_t mode);
PPP_CB_TYPEDEF(void, on_sys_faccessat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, int32_t mode);
PPP_CB_TYPEDEF(void, on_sys_fadvise64_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t len, int32_t advice);
PPP_CB_TYPEDEF(void, on_sys_fadvise64_return, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t len, int32_t advice);
PPP_CB_TYPEDEF(void, on_sys_fadvise64_64_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t len, int32_t advice);
PPP_CB_TYPEDEF(void, on_sys_fadvise64_64_return, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t len, int32_t advice);
PPP_CB_TYPEDEF(void, on_sys_fallocate_enter, CPUState* cpu, target_ulong pc, int32_t fd, int32_t mode, uint64_t offset, uint64_t len);
PPP_CB_TYPEDEF(void, on_sys_fallocate_return, CPUState* cpu, target_ulong pc, int32_t fd, int32_t mode, uint64_t offset, uint64_t len);
PPP_CB_TYPEDEF(void, on_sys_fanotify_init_enter, CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t event_f_flags);
PPP_CB_TYPEDEF(void, on_sys_fanotify_init_return, CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t event_f_flags);
PPP_CB_TYPEDEF(void, on_sys_fanotify_mark_enter, CPUState* cpu, target_ulong pc, int32_t fanotify_fd, uint32_t flags, uint64_t mask, int32_t fd, uint32_t pathname);
PPP_CB_TYPEDEF(void, on_sys_fanotify_mark_return, CPUState* cpu, target_ulong pc, int32_t fanotify_fd, uint32_t flags, uint64_t mask, int32_t fd, uint32_t pathname);
PPP_CB_TYPEDEF(void, on_sys_fchdir_enter, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_fchdir_return, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_fchmod_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_fchmod_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_fchmodat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_fchmodat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_fchown_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_fchown_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_fchown16_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_fchown16_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_fchownat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t user, uint32_t group, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_fchownat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t user, uint32_t group, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_fcntl_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_fcntl_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_fcntl64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_fcntl64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_fdatasync_enter, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_fdatasync_return, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_fgetxattr_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t name, uint32_t value, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_fgetxattr_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t name, uint32_t value, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_finit_module_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t uargs, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_finit_module_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t uargs, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_flistxattr_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t list, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_flistxattr_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t list, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_flock_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd);
PPP_CB_TYPEDEF(void, on_sys_flock_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd);
PPP_CB_TYPEDEF(void, on_sys_fork_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_fork_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_fremovexattr_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_fremovexattr_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_fsetxattr_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t name, uint32_t value, uint32_t size, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_fsetxattr_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t name, uint32_t value, uint32_t size, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_fstat_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_fstat_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_fstat64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_fstat64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_fstatat64_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t statbuf, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_fstatat64_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t statbuf, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_fstatfs_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_fstatfs_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_fstatfs64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t sz, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_fstatfs64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t sz, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_fsync_enter, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_fsync_return, CPUState* cpu, target_ulong pc, uint32_t fd);
PPP_CB_TYPEDEF(void, on_sys_ftruncate_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t length);
PPP_CB_TYPEDEF(void, on_sys_ftruncate_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t length);
PPP_CB_TYPEDEF(void, on_sys_ftruncate64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t length);
PPP_CB_TYPEDEF(void, on_sys_ftruncate64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t length);
PPP_CB_TYPEDEF(void, on_sys_futex_enter, CPUState* cpu, target_ulong pc, uint32_t uaddr, int32_t op, uint32_t val, uint32_t utime, uint32_t uaddr2, uint32_t val3);
PPP_CB_TYPEDEF(void, on_sys_futex_return, CPUState* cpu, target_ulong pc, uint32_t uaddr, int32_t op, uint32_t val, uint32_t utime, uint32_t uaddr2, uint32_t val3);
PPP_CB_TYPEDEF(void, on_sys_futimesat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t utimes);
PPP_CB_TYPEDEF(void, on_sys_futimesat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t utimes);
PPP_CB_TYPEDEF(void, on_sys_get_mempolicy_enter, CPUState* cpu, target_ulong pc, uint32_t policy, uint32_t nmask, uint32_t maxnode, uint32_t addr, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_get_mempolicy_return, CPUState* cpu, target_ulong pc, uint32_t policy, uint32_t nmask, uint32_t maxnode, uint32_t addr, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_get_robust_list_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t head_ptr, uint32_t len_ptr);
PPP_CB_TYPEDEF(void, on_sys_get_robust_list_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t head_ptr, uint32_t len_ptr);
PPP_CB_TYPEDEF(void, on_sys_get_thread_area_enter, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_get_thread_area_return, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_getcpu_enter, CPUState* cpu, target_ulong pc, uint32_t _cpu, uint32_t node, uint32_t cache);
PPP_CB_TYPEDEF(void, on_sys_getcpu_return, CPUState* cpu, target_ulong pc, uint32_t _cpu, uint32_t node, uint32_t cache);
PPP_CB_TYPEDEF(void, on_sys_getcwd_enter, CPUState* cpu, target_ulong pc, uint32_t buf, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_getcwd_return, CPUState* cpu, target_ulong pc, uint32_t buf, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_getdents_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t dirent, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_getdents_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t dirent, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_getdents64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t dirent, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_getdents64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t dirent, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_getegid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getegid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getegid16_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getegid16_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_geteuid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_geteuid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_geteuid16_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_geteuid16_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getgid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getgid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getgid16_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getgid16_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getgroups_enter, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_getgroups_return, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_getgroups16_enter, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_getgroups16_return, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_getitimer_enter, CPUState* cpu, target_ulong pc, int32_t which, uint32_t value);
PPP_CB_TYPEDEF(void, on_sys_getitimer_return, CPUState* cpu, target_ulong pc, int32_t which, uint32_t value);
PPP_CB_TYPEDEF(void, on_sys_getpeername_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_getpeername_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_getpgid_enter, CPUState* cpu, target_ulong pc, int32_t pid);
PPP_CB_TYPEDEF(void, on_sys_getpgid_return, CPUState* cpu, target_ulong pc, int32_t pid);
PPP_CB_TYPEDEF(void, on_sys_getpgrp_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getpgrp_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getpid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getpid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getppid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getppid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getpriority_enter, CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
PPP_CB_TYPEDEF(void, on_sys_getpriority_return, CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
PPP_CB_TYPEDEF(void, on_sys_getrandom_enter, CPUState* cpu, target_ulong pc, uint32_t buf, uint32_t count, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_getrandom_return, CPUState* cpu, target_ulong pc, uint32_t buf, uint32_t count, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_getresgid_enter, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_getresgid_return, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_getresgid16_enter, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_getresgid16_return, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_getresuid_enter, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_getresuid_return, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_getresuid16_enter, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_getresuid16_return, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_getrlimit_enter, CPUState* cpu, target_ulong pc, uint32_t resource, uint32_t rlim);
PPP_CB_TYPEDEF(void, on_sys_getrlimit_return, CPUState* cpu, target_ulong pc, uint32_t resource, uint32_t rlim);
PPP_CB_TYPEDEF(void, on_sys_getrusage_enter, CPUState* cpu, target_ulong pc, int32_t who, uint32_t ru);
PPP_CB_TYPEDEF(void, on_sys_getrusage_return, CPUState* cpu, target_ulong pc, int32_t who, uint32_t ru);
PPP_CB_TYPEDEF(void, on_sys_getsid_enter, CPUState* cpu, target_ulong pc, int32_t pid);
PPP_CB_TYPEDEF(void, on_sys_getsid_return, CPUState* cpu, target_ulong pc, int32_t pid);
PPP_CB_TYPEDEF(void, on_sys_getsockname_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_getsockname_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_getsockopt_enter, CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint32_t optval, uint32_t optlen);
PPP_CB_TYPEDEF(void, on_sys_getsockopt_return, CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint32_t optval, uint32_t optlen);
PPP_CB_TYPEDEF(void, on_sys_gettid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_gettid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_gettimeofday_enter, CPUState* cpu, target_ulong pc, uint32_t tv, uint32_t tz);
PPP_CB_TYPEDEF(void, on_sys_gettimeofday_return, CPUState* cpu, target_ulong pc, uint32_t tv, uint32_t tz);
PPP_CB_TYPEDEF(void, on_sys_getuid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getuid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getuid16_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getuid16_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_getxattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_getxattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_init_module_enter, CPUState* cpu, target_ulong pc, uint32_t umod, uint32_t len, uint32_t uargs);
PPP_CB_TYPEDEF(void, on_sys_init_module_return, CPUState* cpu, target_ulong pc, uint32_t umod, uint32_t len, uint32_t uargs);
PPP_CB_TYPEDEF(void, on_sys_inotify_add_watch_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t path, uint32_t mask);
PPP_CB_TYPEDEF(void, on_sys_inotify_add_watch_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t path, uint32_t mask);
PPP_CB_TYPEDEF(void, on_sys_inotify_init_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_inotify_init_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_inotify_init1_enter, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_inotify_init1_return, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_inotify_rm_watch_enter, CPUState* cpu, target_ulong pc, int32_t fd, int32_t wd);
PPP_CB_TYPEDEF(void, on_sys_inotify_rm_watch_return, CPUState* cpu, target_ulong pc, int32_t fd, int32_t wd);
PPP_CB_TYPEDEF(void, on_sys_io_cancel_enter, CPUState* cpu, target_ulong pc, uint32_t ctx_id, uint32_t iocb, uint32_t result);
PPP_CB_TYPEDEF(void, on_sys_io_cancel_return, CPUState* cpu, target_ulong pc, uint32_t ctx_id, uint32_t iocb, uint32_t result);
PPP_CB_TYPEDEF(void, on_sys_io_destroy_enter, CPUState* cpu, target_ulong pc, uint32_t ctx);
PPP_CB_TYPEDEF(void, on_sys_io_destroy_return, CPUState* cpu, target_ulong pc, uint32_t ctx);
PPP_CB_TYPEDEF(void, on_sys_io_getevents_enter, CPUState* cpu, target_ulong pc, uint32_t ctx_id, int32_t min_nr, int32_t nr, uint32_t events, uint32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_io_getevents_return, CPUState* cpu, target_ulong pc, uint32_t ctx_id, int32_t min_nr, int32_t nr, uint32_t events, uint32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_io_setup_enter, CPUState* cpu, target_ulong pc, uint32_t nr_reqs, uint32_t ctx);
PPP_CB_TYPEDEF(void, on_sys_io_setup_return, CPUState* cpu, target_ulong pc, uint32_t nr_reqs, uint32_t ctx);
PPP_CB_TYPEDEF(void, on_sys_io_submit_enter, CPUState* cpu, target_ulong pc, uint32_t arg0, int32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_io_submit_return, CPUState* cpu, target_ulong pc, uint32_t arg0, int32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_ioctl_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_ioctl_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_ioperm_enter, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_ioperm_return, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_iopl_enter, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_iopl_return, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_ioprio_get_enter, CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
PPP_CB_TYPEDEF(void, on_sys_ioprio_get_return, CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
PPP_CB_TYPEDEF(void, on_sys_ioprio_set_enter, CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t ioprio);
PPP_CB_TYPEDEF(void, on_sys_ioprio_set_return, CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t ioprio);
PPP_CB_TYPEDEF(void, on_sys_ipc_enter, CPUState* cpu, target_ulong pc, uint32_t call, int32_t first, uint32_t second, uint32_t third, uint32_t ptr, int32_t fifth);
PPP_CB_TYPEDEF(void, on_sys_ipc_return, CPUState* cpu, target_ulong pc, uint32_t call, int32_t first, uint32_t second, uint32_t third, uint32_t ptr, int32_t fifth);
PPP_CB_TYPEDEF(void, on_sys_kcmp_enter, CPUState* cpu, target_ulong pc, int32_t pid1, int32_t pid2, int32_t type, uint32_t idx1, uint32_t idx2);
PPP_CB_TYPEDEF(void, on_sys_kcmp_return, CPUState* cpu, target_ulong pc, int32_t pid1, int32_t pid2, int32_t type, uint32_t idx1, uint32_t idx2);
PPP_CB_TYPEDEF(void, on_sys_kexec_load_enter, CPUState* cpu, target_ulong pc, uint32_t entry, uint32_t nr_segments, uint32_t segments, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_kexec_load_return, CPUState* cpu, target_ulong pc, uint32_t entry, uint32_t nr_segments, uint32_t segments, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_keyctl_enter, CPUState* cpu, target_ulong pc, int32_t cmd, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_keyctl_return, CPUState* cpu, target_ulong pc, int32_t cmd, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_kill_enter, CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
PPP_CB_TYPEDEF(void, on_sys_kill_return, CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
PPP_CB_TYPEDEF(void, on_sys_lchown_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_lchown_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_lchown16_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_lchown16_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t user, uint32_t group);
PPP_CB_TYPEDEF(void, on_sys_lgetxattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_lgetxattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_link_enter, CPUState* cpu, target_ulong pc, uint32_t oldname, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_link_return, CPUState* cpu, target_ulong pc, uint32_t oldname, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_linkat_enter, CPUState* cpu, target_ulong pc, int32_t olddfd, uint32_t oldname, int32_t newdfd, uint32_t newname, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_linkat_return, CPUState* cpu, target_ulong pc, int32_t olddfd, uint32_t oldname, int32_t newdfd, uint32_t newname, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_listen_enter, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_listen_return, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_listxattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t list, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_listxattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t list, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_llistxattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t list, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_llistxattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t list, uint32_t size);
PPP_CB_TYPEDEF(void, on_sys_llseek_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t offset_high, uint32_t offset_low, uint32_t result, uint32_t whence);
PPP_CB_TYPEDEF(void, on_sys_llseek_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t offset_high, uint32_t offset_low, uint32_t result, uint32_t whence);
PPP_CB_TYPEDEF(void, on_sys_lookup_dcookie_enter, CPUState* cpu, target_ulong pc, uint64_t cookie64, uint32_t buf, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_lookup_dcookie_return, CPUState* cpu, target_ulong pc, uint64_t cookie64, uint32_t buf, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_lremovexattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_lremovexattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_lseek_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t offset, uint32_t whence);
PPP_CB_TYPEDEF(void, on_sys_lseek_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t offset, uint32_t whence);
PPP_CB_TYPEDEF(void, on_sys_lsetxattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_lsetxattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_lstat_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_lstat_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_lstat64_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_lstat64_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_madvise_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, int32_t behavior);
PPP_CB_TYPEDEF(void, on_sys_madvise_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, int32_t behavior);
PPP_CB_TYPEDEF(void, on_sys_mbind_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t mode, uint32_t nmask, uint32_t maxnode, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_mbind_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t mode, uint32_t nmask, uint32_t maxnode, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_membarrier_enter, CPUState* cpu, target_ulong pc, int32_t cmd, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_membarrier_return, CPUState* cpu, target_ulong pc, int32_t cmd, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_memfd_create_enter, CPUState* cpu, target_ulong pc, uint32_t uname_ptr, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_memfd_create_return, CPUState* cpu, target_ulong pc, uint32_t uname_ptr, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_migrate_pages_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t maxnode, uint32_t from, uint32_t to);
PPP_CB_TYPEDEF(void, on_sys_migrate_pages_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t maxnode, uint32_t from, uint32_t to);
PPP_CB_TYPEDEF(void, on_sys_mincore_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t vec);
PPP_CB_TYPEDEF(void, on_sys_mincore_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t vec);
PPP_CB_TYPEDEF(void, on_sys_mkdir_enter, CPUState* cpu, target_ulong pc, uint32_t pathname, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_mkdir_return, CPUState* cpu, target_ulong pc, uint32_t pathname, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_mkdirat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t pathname, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_mkdirat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t pathname, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_mknod_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t mode, uint32_t dev);
PPP_CB_TYPEDEF(void, on_sys_mknod_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t mode, uint32_t dev);
PPP_CB_TYPEDEF(void, on_sys_mknodat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t mode, uint32_t dev);
PPP_CB_TYPEDEF(void, on_sys_mknodat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t mode, uint32_t dev);
PPP_CB_TYPEDEF(void, on_sys_mlock_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_mlock_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_mlock2_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_mlock2_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_mlockall_enter, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_mlockall_return, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_mmap_pgoff_enter, CPUState* cpu, target_ulong pc, uint32_t addr, uint32_t len, uint32_t prot, uint32_t flags, uint32_t fd, uint32_t pgoff);
PPP_CB_TYPEDEF(void, on_sys_mmap_pgoff_return, CPUState* cpu, target_ulong pc, uint32_t addr, uint32_t len, uint32_t prot, uint32_t flags, uint32_t fd, uint32_t pgoff);
PPP_CB_TYPEDEF(void, on_sys_modify_ldt_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_modify_ldt_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_mount_enter, CPUState* cpu, target_ulong pc, uint32_t dev_name, uint32_t dir_name, uint32_t type, uint32_t flags, uint32_t _data);
PPP_CB_TYPEDEF(void, on_sys_mount_return, CPUState* cpu, target_ulong pc, uint32_t dev_name, uint32_t dir_name, uint32_t type, uint32_t flags, uint32_t _data);
PPP_CB_TYPEDEF(void, on_sys_move_pages_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t nr_pages, uint32_t pages, uint32_t nodes, uint32_t status, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_move_pages_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t nr_pages, uint32_t pages, uint32_t nodes, uint32_t status, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_mprotect_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t prot);
PPP_CB_TYPEDEF(void, on_sys_mprotect_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t prot);
PPP_CB_TYPEDEF(void, on_sys_mq_getsetattr_enter, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t mqstat, uint32_t omqstat);
PPP_CB_TYPEDEF(void, on_sys_mq_getsetattr_return, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t mqstat, uint32_t omqstat);
PPP_CB_TYPEDEF(void, on_sys_mq_notify_enter, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t notification);
PPP_CB_TYPEDEF(void, on_sys_mq_notify_return, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t notification);
PPP_CB_TYPEDEF(void, on_sys_mq_open_enter, CPUState* cpu, target_ulong pc, uint32_t name, int32_t oflag, uint32_t mode, uint32_t attr);
PPP_CB_TYPEDEF(void, on_sys_mq_open_return, CPUState* cpu, target_ulong pc, uint32_t name, int32_t oflag, uint32_t mode, uint32_t attr);
PPP_CB_TYPEDEF(void, on_sys_mq_timedreceive_enter, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint32_t abs_timeout);
PPP_CB_TYPEDEF(void, on_sys_mq_timedreceive_return, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint32_t abs_timeout);
PPP_CB_TYPEDEF(void, on_sys_mq_timedsend_enter, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint32_t abs_timeout);
PPP_CB_TYPEDEF(void, on_sys_mq_timedsend_return, CPUState* cpu, target_ulong pc, uint32_t mqdes, uint32_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint32_t abs_timeout);
PPP_CB_TYPEDEF(void, on_sys_mq_unlink_enter, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_mq_unlink_return, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_mremap_enter, CPUState* cpu, target_ulong pc, uint32_t addr, uint32_t old_len, uint32_t new_len, uint32_t flags, uint32_t new_addr);
PPP_CB_TYPEDEF(void, on_sys_mremap_return, CPUState* cpu, target_ulong pc, uint32_t addr, uint32_t old_len, uint32_t new_len, uint32_t flags, uint32_t new_addr);
PPP_CB_TYPEDEF(void, on_sys_msync_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_msync_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_munlock_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_munlock_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_munlockall_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_munlockall_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_munmap_enter, CPUState* cpu, target_ulong pc, uint32_t addr, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_munmap_return, CPUState* cpu, target_ulong pc, uint32_t addr, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_name_to_handle_at_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t name, uint32_t handle, uint32_t mnt_id, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_name_to_handle_at_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t name, uint32_t handle, uint32_t mnt_id, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_nanosleep_enter, CPUState* cpu, target_ulong pc, uint32_t rqtp, uint32_t rmtp);
PPP_CB_TYPEDEF(void, on_sys_nanosleep_return, CPUState* cpu, target_ulong pc, uint32_t rqtp, uint32_t rmtp);
PPP_CB_TYPEDEF(void, on_sys_newfstat_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_newfstat_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_newlstat_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_newlstat_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_newstat_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_newstat_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_newuname_enter, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_newuname_return, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_nice_enter, CPUState* cpu, target_ulong pc, int32_t increment);
PPP_CB_TYPEDEF(void, on_sys_nice_return, CPUState* cpu, target_ulong pc, int32_t increment);
PPP_CB_TYPEDEF(void, on_sys_old_getrlimit_enter, CPUState* cpu, target_ulong pc, uint32_t resource, uint32_t rlim);
PPP_CB_TYPEDEF(void, on_sys_old_getrlimit_return, CPUState* cpu, target_ulong pc, uint32_t resource, uint32_t rlim);
PPP_CB_TYPEDEF(void, on_sys_old_mmap_enter, CPUState* cpu, target_ulong pc, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_old_mmap_return, CPUState* cpu, target_ulong pc, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_old_readdir_enter, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_old_readdir_return, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_old_select_enter, CPUState* cpu, target_ulong pc, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_old_select_return, CPUState* cpu, target_ulong pc, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_oldumount_enter, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_oldumount_return, CPUState* cpu, target_ulong pc, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_olduname_enter, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_olduname_return, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_open_enter, CPUState* cpu, target_ulong pc, uint32_t filename, int32_t flags, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_open_return, CPUState* cpu, target_ulong pc, uint32_t filename, int32_t flags, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_open_by_handle_at_enter, CPUState* cpu, target_ulong pc, int32_t mountdirfd, uint32_t handle, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_open_by_handle_at_return, CPUState* cpu, target_ulong pc, int32_t mountdirfd, uint32_t handle, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_openat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, int32_t flags, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_openat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, int32_t flags, uint32_t mode);
PPP_CB_TYPEDEF(void, on_sys_pause_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_pause_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_perf_event_open_enter, CPUState* cpu, target_ulong pc, uint32_t attr_uptr, int32_t pid, int32_t _cpu, int32_t group_fd, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_perf_event_open_return, CPUState* cpu, target_ulong pc, uint32_t attr_uptr, int32_t pid, int32_t _cpu, int32_t group_fd, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_personality_enter, CPUState* cpu, target_ulong pc, uint32_t personality);
PPP_CB_TYPEDEF(void, on_sys_personality_return, CPUState* cpu, target_ulong pc, uint32_t personality);
PPP_CB_TYPEDEF(void, on_sys_pipe_enter, CPUState* cpu, target_ulong pc, uint32_t fildes);
PPP_CB_TYPEDEF(void, on_sys_pipe_return, CPUState* cpu, target_ulong pc, uint32_t fildes);
PPP_CB_TYPEDEF(void, on_sys_pipe2_enter, CPUState* cpu, target_ulong pc, uint32_t fildes, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_pipe2_return, CPUState* cpu, target_ulong pc, uint32_t fildes, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_pivot_root_enter, CPUState* cpu, target_ulong pc, uint32_t new_root, uint32_t put_old);
PPP_CB_TYPEDEF(void, on_sys_pivot_root_return, CPUState* cpu, target_ulong pc, uint32_t new_root, uint32_t put_old);
PPP_CB_TYPEDEF(void, on_sys_pkey_alloc_enter, CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t init_val);
PPP_CB_TYPEDEF(void, on_sys_pkey_alloc_return, CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t init_val);
PPP_CB_TYPEDEF(void, on_sys_pkey_free_enter, CPUState* cpu, target_ulong pc, int32_t pkey);
PPP_CB_TYPEDEF(void, on_sys_pkey_free_return, CPUState* cpu, target_ulong pc, int32_t pkey);
PPP_CB_TYPEDEF(void, on_sys_pkey_mprotect_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t prot, int32_t pkey);
PPP_CB_TYPEDEF(void, on_sys_pkey_mprotect_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t len, uint32_t prot, int32_t pkey);
PPP_CB_TYPEDEF(void, on_sys_poll_enter, CPUState* cpu, target_ulong pc, uint32_t ufds, uint32_t nfds, int32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_poll_return, CPUState* cpu, target_ulong pc, uint32_t ufds, uint32_t nfds, int32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_ppoll_enter, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4);
PPP_CB_TYPEDEF(void, on_sys_ppoll_return, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4);
PPP_CB_TYPEDEF(void, on_sys_prctl_enter, CPUState* cpu, target_ulong pc, int32_t option, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_prctl_return, CPUState* cpu, target_ulong pc, int32_t option, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_pread64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count, uint64_t pos);
PPP_CB_TYPEDEF(void, on_sys_pread64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count, uint64_t pos);
PPP_CB_TYPEDEF(void, on_sys_preadv_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h);
PPP_CB_TYPEDEF(void, on_sys_preadv_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h);
PPP_CB_TYPEDEF(void, on_sys_preadv2_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_preadv2_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_prlimit64_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t resource, uint32_t new_rlim, uint32_t old_rlim);
PPP_CB_TYPEDEF(void, on_sys_prlimit64_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t resource, uint32_t new_rlim, uint32_t old_rlim);
PPP_CB_TYPEDEF(void, on_sys_process_vm_readv_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t lvec, uint32_t liovcnt, uint32_t rvec, uint32_t riovcnt, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_process_vm_readv_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t lvec, uint32_t liovcnt, uint32_t rvec, uint32_t riovcnt, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_process_vm_writev_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t lvec, uint32_t liovcnt, uint32_t rvec, uint32_t riovcnt, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_process_vm_writev_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t lvec, uint32_t liovcnt, uint32_t rvec, uint32_t riovcnt, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_pselect6_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_pselect6_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_ptrace_enter, CPUState* cpu, target_ulong pc, int32_t request, int32_t pid, uint32_t addr, uint32_t _data);
PPP_CB_TYPEDEF(void, on_sys_ptrace_return, CPUState* cpu, target_ulong pc, int32_t request, int32_t pid, uint32_t addr, uint32_t _data);
PPP_CB_TYPEDEF(void, on_sys_pwrite64_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count, uint64_t pos);
PPP_CB_TYPEDEF(void, on_sys_pwrite64_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count, uint64_t pos);
PPP_CB_TYPEDEF(void, on_sys_pwritev_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h);
PPP_CB_TYPEDEF(void, on_sys_pwritev_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h);
PPP_CB_TYPEDEF(void, on_sys_pwritev2_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_pwritev2_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen, uint32_t pos_l, uint32_t pos_h, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_quotactl_enter, CPUState* cpu, target_ulong pc, uint32_t cmd, uint32_t special, uint32_t id, uint32_t addr);
PPP_CB_TYPEDEF(void, on_sys_quotactl_return, CPUState* cpu, target_ulong pc, uint32_t cmd, uint32_t special, uint32_t id, uint32_t addr);
PPP_CB_TYPEDEF(void, on_sys_read_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_read_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_readahead_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_readahead_return, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_readlink_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t buf, int32_t bufsiz);
PPP_CB_TYPEDEF(void, on_sys_readlink_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t buf, int32_t bufsiz);
PPP_CB_TYPEDEF(void, on_sys_readlinkat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t path, uint32_t buf, int32_t bufsiz);
PPP_CB_TYPEDEF(void, on_sys_readlinkat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t path, uint32_t buf, int32_t bufsiz);
PPP_CB_TYPEDEF(void, on_sys_readv_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen);
PPP_CB_TYPEDEF(void, on_sys_readv_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen);
PPP_CB_TYPEDEF(void, on_sys_reboot_enter, CPUState* cpu, target_ulong pc, int32_t magic1, int32_t magic2, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_reboot_return, CPUState* cpu, target_ulong pc, int32_t magic1, int32_t magic2, uint32_t cmd, uint32_t arg);
PPP_CB_TYPEDEF(void, on_sys_recvfrom_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_recvfrom_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, uint32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_recvmmsg_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t vlen, uint32_t flags, uint32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_recvmmsg_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t vlen, uint32_t flags, uint32_t timeout);
PPP_CB_TYPEDEF(void, on_sys_recvmsg_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_recvmsg_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_remap_file_pages_enter, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t size, uint32_t prot, uint32_t pgoff, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_remap_file_pages_return, CPUState* cpu, target_ulong pc, uint32_t start, uint32_t size, uint32_t prot, uint32_t pgoff, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_removexattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_removexattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name);
PPP_CB_TYPEDEF(void, on_sys_rename_enter, CPUState* cpu, target_ulong pc, uint32_t oldname, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_rename_return, CPUState* cpu, target_ulong pc, uint32_t oldname, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_renameat_enter, CPUState* cpu, target_ulong pc, int32_t olddfd, uint32_t oldname, int32_t newdfd, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_renameat_return, CPUState* cpu, target_ulong pc, int32_t olddfd, uint32_t oldname, int32_t newdfd, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_renameat2_enter, CPUState* cpu, target_ulong pc, int32_t olddfd, uint32_t oldname, int32_t newdfd, uint32_t newname, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_renameat2_return, CPUState* cpu, target_ulong pc, int32_t olddfd, uint32_t oldname, int32_t newdfd, uint32_t newname, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_request_key_enter, CPUState* cpu, target_ulong pc, uint32_t _type, uint32_t _description, uint32_t _callout_info, uint32_t destringid);
PPP_CB_TYPEDEF(void, on_sys_request_key_return, CPUState* cpu, target_ulong pc, uint32_t _type, uint32_t _description, uint32_t _callout_info, uint32_t destringid);
PPP_CB_TYPEDEF(void, on_sys_restart_syscall_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_restart_syscall_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_rmdir_enter, CPUState* cpu, target_ulong pc, uint32_t pathname);
PPP_CB_TYPEDEF(void, on_sys_rmdir_return, CPUState* cpu, target_ulong pc, uint32_t pathname);
PPP_CB_TYPEDEF(void, on_sys_rt_sigaction_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3);
PPP_CB_TYPEDEF(void, on_sys_rt_sigaction_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3);
PPP_CB_TYPEDEF(void, on_sys_rt_sigpending_enter, CPUState* cpu, target_ulong pc, uint32_t set, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigpending_return, CPUState* cpu, target_ulong pc, uint32_t set, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigprocmask_enter, CPUState* cpu, target_ulong pc, int32_t how, uint32_t set, uint32_t oset, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigprocmask_return, CPUState* cpu, target_ulong pc, int32_t how, uint32_t set, uint32_t oset, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigqueueinfo_enter, CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig, uint32_t uinfo);
PPP_CB_TYPEDEF(void, on_sys_rt_sigqueueinfo_return, CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig, uint32_t uinfo);
PPP_CB_TYPEDEF(void, on_sys_rt_sigreturn_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_rt_sigreturn_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_rt_sigsuspend_enter, CPUState* cpu, target_ulong pc, uint32_t unewset, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigsuspend_return, CPUState* cpu, target_ulong pc, uint32_t unewset, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigtimedwait_enter, CPUState* cpu, target_ulong pc, uint32_t uthese, uint32_t uinfo, uint32_t uts, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_sigtimedwait_return, CPUState* cpu, target_ulong pc, uint32_t uthese, uint32_t uinfo, uint32_t uts, uint32_t sigsetsize);
PPP_CB_TYPEDEF(void, on_sys_rt_tgsigqueueinfo_enter, CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig, uint32_t uinfo);
PPP_CB_TYPEDEF(void, on_sys_rt_tgsigqueueinfo_return, CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig, uint32_t uinfo);
PPP_CB_TYPEDEF(void, on_sys_sched_get_priority_max_enter, CPUState* cpu, target_ulong pc, int32_t policy);
PPP_CB_TYPEDEF(void, on_sys_sched_get_priority_max_return, CPUState* cpu, target_ulong pc, int32_t policy);
PPP_CB_TYPEDEF(void, on_sys_sched_get_priority_min_enter, CPUState* cpu, target_ulong pc, int32_t policy);
PPP_CB_TYPEDEF(void, on_sys_sched_get_priority_min_return, CPUState* cpu, target_ulong pc, int32_t policy);
PPP_CB_TYPEDEF(void, on_sys_sched_getaffinity_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint32_t user_mask_ptr);
PPP_CB_TYPEDEF(void, on_sys_sched_getaffinity_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint32_t user_mask_ptr);
PPP_CB_TYPEDEF(void, on_sys_sched_getattr_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t attr, uint32_t size, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sched_getattr_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t attr, uint32_t size, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sched_getparam_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t param);
PPP_CB_TYPEDEF(void, on_sys_sched_getparam_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t param);
PPP_CB_TYPEDEF(void, on_sys_sched_getscheduler_enter, CPUState* cpu, target_ulong pc, int32_t pid);
PPP_CB_TYPEDEF(void, on_sys_sched_getscheduler_return, CPUState* cpu, target_ulong pc, int32_t pid);
PPP_CB_TYPEDEF(void, on_sys_sched_rr_get_interval_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t interval);
PPP_CB_TYPEDEF(void, on_sys_sched_rr_get_interval_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t interval);
PPP_CB_TYPEDEF(void, on_sys_sched_setaffinity_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint32_t user_mask_ptr);
PPP_CB_TYPEDEF(void, on_sys_sched_setaffinity_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint32_t user_mask_ptr);
PPP_CB_TYPEDEF(void, on_sys_sched_setattr_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t attr, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sched_setattr_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t attr, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sched_setparam_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t param);
PPP_CB_TYPEDEF(void, on_sys_sched_setparam_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t param);
PPP_CB_TYPEDEF(void, on_sys_sched_setscheduler_enter, CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint32_t param);
PPP_CB_TYPEDEF(void, on_sys_sched_setscheduler_return, CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint32_t param);
PPP_CB_TYPEDEF(void, on_sys_sched_yield_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_sched_yield_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_seccomp_enter, CPUState* cpu, target_ulong pc, uint32_t op, uint32_t flags, uint32_t uargs);
PPP_CB_TYPEDEF(void, on_sys_seccomp_return, CPUState* cpu, target_ulong pc, uint32_t op, uint32_t flags, uint32_t uargs);
PPP_CB_TYPEDEF(void, on_sys_select_enter, CPUState* cpu, target_ulong pc, int32_t n, uint32_t inp, uint32_t outp, uint32_t exp, uint32_t tvp);
PPP_CB_TYPEDEF(void, on_sys_select_return, CPUState* cpu, target_ulong pc, int32_t n, uint32_t inp, uint32_t outp, uint32_t exp, uint32_t tvp);
PPP_CB_TYPEDEF(void, on_sys_sendfile_enter, CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint32_t offset, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_sendfile_return, CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint32_t offset, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_sendfile64_enter, CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint32_t offset, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_sendfile64_return, CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint32_t offset, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_sendmmsg_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t vlen, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sendmmsg_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t vlen, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sendmsg_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sendmsg_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t msg, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sendto_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, int32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_sendto_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint32_t arg4, int32_t arg5);
PPP_CB_TYPEDEF(void, on_sys_set_mempolicy_enter, CPUState* cpu, target_ulong pc, int32_t mode, uint32_t nmask, uint32_t maxnode);
PPP_CB_TYPEDEF(void, on_sys_set_mempolicy_return, CPUState* cpu, target_ulong pc, int32_t mode, uint32_t nmask, uint32_t maxnode);
PPP_CB_TYPEDEF(void, on_sys_set_robust_list_enter, CPUState* cpu, target_ulong pc, uint32_t head, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_set_robust_list_return, CPUState* cpu, target_ulong pc, uint32_t head, uint32_t len);
PPP_CB_TYPEDEF(void, on_sys_set_thread_area_enter, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_set_thread_area_return, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_set_tid_address_enter, CPUState* cpu, target_ulong pc, uint32_t tidptr);
PPP_CB_TYPEDEF(void, on_sys_set_tid_address_return, CPUState* cpu, target_ulong pc, uint32_t tidptr);
PPP_CB_TYPEDEF(void, on_sys_setdomainname_enter, CPUState* cpu, target_ulong pc, uint32_t name, int32_t len);
PPP_CB_TYPEDEF(void, on_sys_setdomainname_return, CPUState* cpu, target_ulong pc, uint32_t name, int32_t len);
PPP_CB_TYPEDEF(void, on_sys_setfsgid_enter, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setfsgid_return, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setfsgid16_enter, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setfsgid16_return, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setfsuid_enter, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setfsuid_return, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setfsuid16_enter, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setfsuid16_return, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setgid_enter, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setgid_return, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setgid16_enter, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setgid16_return, CPUState* cpu, target_ulong pc, uint32_t gid);
PPP_CB_TYPEDEF(void, on_sys_setgroups_enter, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_setgroups_return, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_setgroups16_enter, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_setgroups16_return, CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint32_t grouplist);
PPP_CB_TYPEDEF(void, on_sys_sethostname_enter, CPUState* cpu, target_ulong pc, uint32_t name, int32_t len);
PPP_CB_TYPEDEF(void, on_sys_sethostname_return, CPUState* cpu, target_ulong pc, uint32_t name, int32_t len);
PPP_CB_TYPEDEF(void, on_sys_setitimer_enter, CPUState* cpu, target_ulong pc, int32_t which, uint32_t value, uint32_t ovalue);
PPP_CB_TYPEDEF(void, on_sys_setitimer_return, CPUState* cpu, target_ulong pc, int32_t which, uint32_t value, uint32_t ovalue);
PPP_CB_TYPEDEF(void, on_sys_setns_enter, CPUState* cpu, target_ulong pc, int32_t fd, int32_t nstype);
PPP_CB_TYPEDEF(void, on_sys_setns_return, CPUState* cpu, target_ulong pc, int32_t fd, int32_t nstype);
PPP_CB_TYPEDEF(void, on_sys_setpgid_enter, CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
PPP_CB_TYPEDEF(void, on_sys_setpgid_return, CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
PPP_CB_TYPEDEF(void, on_sys_setpriority_enter, CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t niceval);
PPP_CB_TYPEDEF(void, on_sys_setpriority_return, CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t niceval);
PPP_CB_TYPEDEF(void, on_sys_setregid_enter, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
PPP_CB_TYPEDEF(void, on_sys_setregid_return, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
PPP_CB_TYPEDEF(void, on_sys_setregid16_enter, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
PPP_CB_TYPEDEF(void, on_sys_setregid16_return, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
PPP_CB_TYPEDEF(void, on_sys_setresgid_enter, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_setresgid_return, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_setresgid16_enter, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_setresgid16_return, CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
PPP_CB_TYPEDEF(void, on_sys_setresuid_enter, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_setresuid_return, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_setresuid16_enter, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_setresuid16_return, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
PPP_CB_TYPEDEF(void, on_sys_setreuid_enter, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
PPP_CB_TYPEDEF(void, on_sys_setreuid_return, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
PPP_CB_TYPEDEF(void, on_sys_setreuid16_enter, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
PPP_CB_TYPEDEF(void, on_sys_setreuid16_return, CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
PPP_CB_TYPEDEF(void, on_sys_setrlimit_enter, CPUState* cpu, target_ulong pc, uint32_t resource, uint32_t rlim);
PPP_CB_TYPEDEF(void, on_sys_setrlimit_return, CPUState* cpu, target_ulong pc, uint32_t resource, uint32_t rlim);
PPP_CB_TYPEDEF(void, on_sys_setsid_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_setsid_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_setsockopt_enter, CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint32_t optval, int32_t optlen);
PPP_CB_TYPEDEF(void, on_sys_setsockopt_return, CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint32_t optval, int32_t optlen);
PPP_CB_TYPEDEF(void, on_sys_settimeofday_enter, CPUState* cpu, target_ulong pc, uint32_t tv, uint32_t tz);
PPP_CB_TYPEDEF(void, on_sys_settimeofday_return, CPUState* cpu, target_ulong pc, uint32_t tv, uint32_t tz);
PPP_CB_TYPEDEF(void, on_sys_setuid_enter, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setuid_return, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setuid16_enter, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setuid16_return, CPUState* cpu, target_ulong pc, uint32_t uid);
PPP_CB_TYPEDEF(void, on_sys_setxattr_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_setxattr_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t name, uint32_t value, uint32_t size, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sgetmask_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_sgetmask_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_shutdown_enter, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_shutdown_return, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_sigaction_enter, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_sigaction_return, CPUState* cpu, target_ulong pc, int32_t arg0, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_sigaltstack_enter, CPUState* cpu, target_ulong pc, uint32_t uss, uint32_t uoss);
PPP_CB_TYPEDEF(void, on_sys_sigaltstack_return, CPUState* cpu, target_ulong pc, uint32_t uss, uint32_t uoss);
PPP_CB_TYPEDEF(void, on_sys_signal_enter, CPUState* cpu, target_ulong pc, int32_t sig, uint32_t handler);
PPP_CB_TYPEDEF(void, on_sys_signal_return, CPUState* cpu, target_ulong pc, int32_t sig, uint32_t handler);
PPP_CB_TYPEDEF(void, on_sys_signalfd_enter, CPUState* cpu, target_ulong pc, int32_t ufd, uint32_t user_mask, uint32_t sizemask);
PPP_CB_TYPEDEF(void, on_sys_signalfd_return, CPUState* cpu, target_ulong pc, int32_t ufd, uint32_t user_mask, uint32_t sizemask);
PPP_CB_TYPEDEF(void, on_sys_signalfd4_enter, CPUState* cpu, target_ulong pc, int32_t ufd, uint32_t user_mask, uint32_t sizemask, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_signalfd4_return, CPUState* cpu, target_ulong pc, int32_t ufd, uint32_t user_mask, uint32_t sizemask, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sigpending_enter, CPUState* cpu, target_ulong pc, uint32_t set);
PPP_CB_TYPEDEF(void, on_sys_sigpending_return, CPUState* cpu, target_ulong pc, uint32_t set);
PPP_CB_TYPEDEF(void, on_sys_sigprocmask_enter, CPUState* cpu, target_ulong pc, int32_t how, uint32_t set, uint32_t oset);
PPP_CB_TYPEDEF(void, on_sys_sigprocmask_return, CPUState* cpu, target_ulong pc, int32_t how, uint32_t set, uint32_t oset);
PPP_CB_TYPEDEF(void, on_sys_sigreturn_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_sigreturn_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_sigsuspend_enter, CPUState* cpu, target_ulong pc, int32_t unused1, int32_t unused2, uint32_t mask);
PPP_CB_TYPEDEF(void, on_sys_sigsuspend_return, CPUState* cpu, target_ulong pc, int32_t unused1, int32_t unused2, uint32_t mask);
PPP_CB_TYPEDEF(void, on_sys_socket_enter, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_socket_return, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_socketcall_enter, CPUState* cpu, target_ulong pc, int32_t call, uint32_t args);
PPP_CB_TYPEDEF(void, on_sys_socketcall_return, CPUState* cpu, target_ulong pc, int32_t call, uint32_t args);
PPP_CB_TYPEDEF(void, on_sys_socketpair_enter, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2, uint32_t arg3);
PPP_CB_TYPEDEF(void, on_sys_socketpair_return, CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2, uint32_t arg3);
PPP_CB_TYPEDEF(void, on_sys_splice_enter, CPUState* cpu, target_ulong pc, int32_t fd_in, uint32_t off_in, int32_t fd_out, uint32_t off_out, uint32_t len, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_splice_return, CPUState* cpu, target_ulong pc, int32_t fd_in, uint32_t off_in, int32_t fd_out, uint32_t off_out, uint32_t len, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_ssetmask_enter, CPUState* cpu, target_ulong pc, int32_t newmask);
PPP_CB_TYPEDEF(void, on_sys_ssetmask_return, CPUState* cpu, target_ulong pc, int32_t newmask);
PPP_CB_TYPEDEF(void, on_sys_stat_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_stat_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_stat64_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_stat64_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t statbuf);
PPP_CB_TYPEDEF(void, on_sys_statfs_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_statfs_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_statfs64_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t sz, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_statfs64_return, CPUState* cpu, target_ulong pc, uint32_t path, uint32_t sz, uint32_t buf);
PPP_CB_TYPEDEF(void, on_sys_statx_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t path, uint32_t flags, uint32_t mask, uint32_t buffer);
PPP_CB_TYPEDEF(void, on_sys_statx_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t path, uint32_t flags, uint32_t mask, uint32_t buffer);
PPP_CB_TYPEDEF(void, on_sys_stime_enter, CPUState* cpu, target_ulong pc, uint32_t tptr);
PPP_CB_TYPEDEF(void, on_sys_stime_return, CPUState* cpu, target_ulong pc, uint32_t tptr);
PPP_CB_TYPEDEF(void, on_sys_swapoff_enter, CPUState* cpu, target_ulong pc, uint32_t specialfile);
PPP_CB_TYPEDEF(void, on_sys_swapoff_return, CPUState* cpu, target_ulong pc, uint32_t specialfile);
PPP_CB_TYPEDEF(void, on_sys_swapon_enter, CPUState* cpu, target_ulong pc, uint32_t specialfile, int32_t swap_flags);
PPP_CB_TYPEDEF(void, on_sys_swapon_return, CPUState* cpu, target_ulong pc, uint32_t specialfile, int32_t swap_flags);
PPP_CB_TYPEDEF(void, on_sys_symlink_enter, CPUState* cpu, target_ulong pc, uint32_t old, uint32_t _new);
PPP_CB_TYPEDEF(void, on_sys_symlink_return, CPUState* cpu, target_ulong pc, uint32_t old, uint32_t _new);
PPP_CB_TYPEDEF(void, on_sys_symlinkat_enter, CPUState* cpu, target_ulong pc, uint32_t oldname, int32_t newdfd, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_symlinkat_return, CPUState* cpu, target_ulong pc, uint32_t oldname, int32_t newdfd, uint32_t newname);
PPP_CB_TYPEDEF(void, on_sys_sync_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_sync_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_sync_file_range_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t nbytes, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_sync_file_range_return, CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t nbytes, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_syncfs_enter, CPUState* cpu, target_ulong pc, int32_t fd);
PPP_CB_TYPEDEF(void, on_sys_syncfs_return, CPUState* cpu, target_ulong pc, int32_t fd);
PPP_CB_TYPEDEF(void, on_sys_sysctl_enter, CPUState* cpu, target_ulong pc, uint32_t args);
PPP_CB_TYPEDEF(void, on_sys_sysctl_return, CPUState* cpu, target_ulong pc, uint32_t args);
PPP_CB_TYPEDEF(void, on_sys_sysfs_enter, CPUState* cpu, target_ulong pc, int32_t option, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_sysfs_return, CPUState* cpu, target_ulong pc, int32_t option, uint32_t arg1, uint32_t arg2);
PPP_CB_TYPEDEF(void, on_sys_sysinfo_enter, CPUState* cpu, target_ulong pc, uint32_t info);
PPP_CB_TYPEDEF(void, on_sys_sysinfo_return, CPUState* cpu, target_ulong pc, uint32_t info);
PPP_CB_TYPEDEF(void, on_sys_syslog_enter, CPUState* cpu, target_ulong pc, int32_t type, uint32_t buf, int32_t len);
PPP_CB_TYPEDEF(void, on_sys_syslog_return, CPUState* cpu, target_ulong pc, int32_t type, uint32_t buf, int32_t len);
PPP_CB_TYPEDEF(void, on_sys_tee_enter, CPUState* cpu, target_ulong pc, int32_t fdin, int32_t fdout, uint32_t len, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_tee_return, CPUState* cpu, target_ulong pc, int32_t fdin, int32_t fdout, uint32_t len, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_tgkill_enter, CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig);
PPP_CB_TYPEDEF(void, on_sys_tgkill_return, CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig);
PPP_CB_TYPEDEF(void, on_sys_time_enter, CPUState* cpu, target_ulong pc, uint32_t tloc);
PPP_CB_TYPEDEF(void, on_sys_time_return, CPUState* cpu, target_ulong pc, uint32_t tloc);
PPP_CB_TYPEDEF(void, on_sys_timer_create_enter, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t timer_event_spec, uint32_t created_timer_id);
PPP_CB_TYPEDEF(void, on_sys_timer_create_return, CPUState* cpu, target_ulong pc, uint32_t which_clock, uint32_t timer_event_spec, uint32_t created_timer_id);
PPP_CB_TYPEDEF(void, on_sys_timer_delete_enter, CPUState* cpu, target_ulong pc, uint32_t timer_id);
PPP_CB_TYPEDEF(void, on_sys_timer_delete_return, CPUState* cpu, target_ulong pc, uint32_t timer_id);
PPP_CB_TYPEDEF(void, on_sys_timer_getoverrun_enter, CPUState* cpu, target_ulong pc, uint32_t timer_id);
PPP_CB_TYPEDEF(void, on_sys_timer_getoverrun_return, CPUState* cpu, target_ulong pc, uint32_t timer_id);
PPP_CB_TYPEDEF(void, on_sys_timer_gettime_enter, CPUState* cpu, target_ulong pc, uint32_t timer_id, uint32_t setting);
PPP_CB_TYPEDEF(void, on_sys_timer_gettime_return, CPUState* cpu, target_ulong pc, uint32_t timer_id, uint32_t setting);
PPP_CB_TYPEDEF(void, on_sys_timer_settime_enter, CPUState* cpu, target_ulong pc, uint32_t timer_id, int32_t flags, uint32_t new_setting, uint32_t old_setting);
PPP_CB_TYPEDEF(void, on_sys_timer_settime_return, CPUState* cpu, target_ulong pc, uint32_t timer_id, int32_t flags, uint32_t new_setting, uint32_t old_setting);
PPP_CB_TYPEDEF(void, on_sys_timerfd_create_enter, CPUState* cpu, target_ulong pc, int32_t clockid, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_timerfd_create_return, CPUState* cpu, target_ulong pc, int32_t clockid, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_timerfd_gettime_enter, CPUState* cpu, target_ulong pc, int32_t ufd, uint32_t otmr);
PPP_CB_TYPEDEF(void, on_sys_timerfd_gettime_return, CPUState* cpu, target_ulong pc, int32_t ufd, uint32_t otmr);
PPP_CB_TYPEDEF(void, on_sys_timerfd_settime_enter, CPUState* cpu, target_ulong pc, int32_t ufd, int32_t flags, uint32_t utmr, uint32_t otmr);
PPP_CB_TYPEDEF(void, on_sys_timerfd_settime_return, CPUState* cpu, target_ulong pc, int32_t ufd, int32_t flags, uint32_t utmr, uint32_t otmr);
PPP_CB_TYPEDEF(void, on_sys_times_enter, CPUState* cpu, target_ulong pc, uint32_t tbuf);
PPP_CB_TYPEDEF(void, on_sys_times_return, CPUState* cpu, target_ulong pc, uint32_t tbuf);
PPP_CB_TYPEDEF(void, on_sys_tkill_enter, CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
PPP_CB_TYPEDEF(void, on_sys_tkill_return, CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
PPP_CB_TYPEDEF(void, on_sys_truncate_enter, CPUState* cpu, target_ulong pc, uint32_t path, int32_t length);
PPP_CB_TYPEDEF(void, on_sys_truncate_return, CPUState* cpu, target_ulong pc, uint32_t path, int32_t length);
PPP_CB_TYPEDEF(void, on_sys_truncate64_enter, CPUState* cpu, target_ulong pc, uint32_t path, uint64_t length);
PPP_CB_TYPEDEF(void, on_sys_truncate64_return, CPUState* cpu, target_ulong pc, uint32_t path, uint64_t length);
PPP_CB_TYPEDEF(void, on_sys_umask_enter, CPUState* cpu, target_ulong pc, int32_t mask);
PPP_CB_TYPEDEF(void, on_sys_umask_return, CPUState* cpu, target_ulong pc, int32_t mask);
PPP_CB_TYPEDEF(void, on_sys_umount_enter, CPUState* cpu, target_ulong pc, uint32_t name, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_umount_return, CPUState* cpu, target_ulong pc, uint32_t name, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_uname_enter, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_uname_return, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_unlink_enter, CPUState* cpu, target_ulong pc, uint32_t pathname);
PPP_CB_TYPEDEF(void, on_sys_unlink_return, CPUState* cpu, target_ulong pc, uint32_t pathname);
PPP_CB_TYPEDEF(void, on_sys_unlinkat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t pathname, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_unlinkat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t pathname, int32_t flag);
PPP_CB_TYPEDEF(void, on_sys_unshare_enter, CPUState* cpu, target_ulong pc, uint32_t unshare_flags);
PPP_CB_TYPEDEF(void, on_sys_unshare_return, CPUState* cpu, target_ulong pc, uint32_t unshare_flags);
PPP_CB_TYPEDEF(void, on_sys_uselib_enter, CPUState* cpu, target_ulong pc, uint32_t library);
PPP_CB_TYPEDEF(void, on_sys_uselib_return, CPUState* cpu, target_ulong pc, uint32_t library);
PPP_CB_TYPEDEF(void, on_sys_userfaultfd_enter, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_userfaultfd_return, CPUState* cpu, target_ulong pc, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_ustat_enter, CPUState* cpu, target_ulong pc, uint32_t dev, uint32_t ubuf);
PPP_CB_TYPEDEF(void, on_sys_ustat_return, CPUState* cpu, target_ulong pc, uint32_t dev, uint32_t ubuf);
PPP_CB_TYPEDEF(void, on_sys_utime_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t times);
PPP_CB_TYPEDEF(void, on_sys_utime_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t times);
PPP_CB_TYPEDEF(void, on_sys_utimensat_enter, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t utimes, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_utimensat_return, CPUState* cpu, target_ulong pc, int32_t dfd, uint32_t filename, uint32_t utimes, int32_t flags);
PPP_CB_TYPEDEF(void, on_sys_utimes_enter, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t utimes);
PPP_CB_TYPEDEF(void, on_sys_utimes_return, CPUState* cpu, target_ulong pc, uint32_t filename, uint32_t utimes);
PPP_CB_TYPEDEF(void, on_sys_vfork_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_vfork_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_vhangup_enter, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_vhangup_return, CPUState* cpu, target_ulong pc);
PPP_CB_TYPEDEF(void, on_sys_vm86_enter, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_vm86_return, CPUState* cpu, target_ulong pc, uint32_t arg0, uint32_t arg1);
PPP_CB_TYPEDEF(void, on_sys_vm86old_enter, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_vm86old_return, CPUState* cpu, target_ulong pc, uint32_t arg0);
PPP_CB_TYPEDEF(void, on_sys_vmsplice_enter, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t iov, uint32_t nr_segs, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_vmsplice_return, CPUState* cpu, target_ulong pc, int32_t fd, uint32_t iov, uint32_t nr_segs, uint32_t flags);
PPP_CB_TYPEDEF(void, on_sys_wait4_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t stat_addr, int32_t options, uint32_t ru);
PPP_CB_TYPEDEF(void, on_sys_wait4_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t stat_addr, int32_t options, uint32_t ru);
PPP_CB_TYPEDEF(void, on_sys_waitid_enter, CPUState* cpu, target_ulong pc, int32_t which, int32_t pid, uint32_t infop, int32_t options, uint32_t ru);
PPP_CB_TYPEDEF(void, on_sys_waitid_return, CPUState* cpu, target_ulong pc, int32_t which, int32_t pid, uint32_t infop, int32_t options, uint32_t ru);
PPP_CB_TYPEDEF(void, on_sys_waitpid_enter, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t stat_addr, int32_t options);
PPP_CB_TYPEDEF(void, on_sys_waitpid_return, CPUState* cpu, target_ulong pc, int32_t pid, uint32_t stat_addr, int32_t options);
PPP_CB_TYPEDEF(void, on_sys_write_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_write_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t buf, uint32_t count);
PPP_CB_TYPEDEF(void, on_sys_writev_enter, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen);
PPP_CB_TYPEDEF(void, on_sys_writev_return, CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t vec, uint32_t vlen);

// END_PYPANDA_NEEDS_THIS -- do not delete this comment!
