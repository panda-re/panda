// BEGIN_PYPANDA_NEEDS_THIS -- do not delete this comment bc pypanda
// api autogen needs it.  And don't put any compiler directives
// between this and END_PYPANDA_NEEDS_THIS except includes of other
// files in this directory that contain subsections like this one.
typedef void (*on_sys_accept_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_accept_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_accept4_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, int32_t arg3);
typedef void (*on_sys_accept4_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, int32_t arg3);
typedef void (*on_sys_acct_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_acct_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_add_key_enter_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _payload, uint32_t plen, uint32_t destringid);
typedef void (*on_sys_add_key_return_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _payload, uint32_t plen, uint32_t destringid);
typedef void (*on_sys_adjtimex_enter_t)(CPUState* cpu, target_ulong pc, uint64_t txc_p);
typedef void (*on_sys_adjtimex_return_t)(CPUState* cpu, target_ulong pc, uint64_t txc_p);
typedef void (*on_sys_bind_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_bind_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_bpf_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t attr, uint32_t size);
typedef void (*on_sys_bpf_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t attr, uint32_t size);
typedef void (*on_sys_brk_enter_t)(CPUState* cpu, target_ulong pc, uint64_t brk);
typedef void (*on_sys_brk_return_t)(CPUState* cpu, target_ulong pc, uint64_t brk);
typedef void (*on_sys_capget_enter_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t dataptr);
typedef void (*on_sys_capget_return_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t dataptr);
typedef void (*on_sys_capset_enter_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t _data);
typedef void (*on_sys_capset_return_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t _data);
typedef void (*on_sys_chdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_chdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_chroot_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_chroot_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_clock_adjtime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tx);
typedef void (*on_sys_clock_adjtime_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tx);
typedef void (*on_sys_clock_getres_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_getres_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_gettime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_gettime_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_nanosleep_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, int32_t flags, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_clock_nanosleep_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, int32_t flags, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_clock_settime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_settime_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clone_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4);
typedef void (*on_sys_clone_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4);
typedef void (*on_sys_clone3_enter_t)(CPUState* cpu, target_ulong pc, uint64_t cl_args, uint32_t size);
typedef void (*on_sys_clone3_return_t)(CPUState* cpu, target_ulong pc, uint64_t cl_args, uint32_t size);
typedef void (*on_sys_close_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_close_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_connect_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_connect_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_copy_file_range_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_copy_file_range_return_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_delete_module_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name_user, uint32_t flags);
typedef void (*on_sys_delete_module_return_t)(CPUState* cpu, target_ulong pc, uint64_t name_user, uint32_t flags);
typedef void (*on_sys_dup_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fildes);
typedef void (*on_sys_dup_return_t)(CPUState* cpu, target_ulong pc, uint32_t fildes);
typedef void (*on_sys_dup3_enter_t)(CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd, int32_t flags);
typedef void (*on_sys_dup3_return_t)(CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd, int32_t flags);
typedef void (*on_sys_epoll_create1_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_epoll_create1_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_epoll_ctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t epfd, int32_t op, int32_t fd, uint64_t event);
typedef void (*on_sys_epoll_ctl_return_t)(CPUState* cpu, target_ulong pc, int32_t epfd, int32_t op, int32_t fd, uint64_t event);
typedef void (*on_sys_epoll_pwait_enter_t)(CPUState* cpu, target_ulong pc, int32_t epfd, uint64_t events, int32_t maxevents, int32_t timeout, uint64_t sigmask, uint32_t sigsetsize);
typedef void (*on_sys_epoll_pwait_return_t)(CPUState* cpu, target_ulong pc, int32_t epfd, uint64_t events, int32_t maxevents, int32_t timeout, uint64_t sigmask, uint32_t sigsetsize);
typedef void (*on_sys_eventfd2_enter_t)(CPUState* cpu, target_ulong pc, uint32_t count, int32_t flags);
typedef void (*on_sys_eventfd2_return_t)(CPUState* cpu, target_ulong pc, uint32_t count, int32_t flags);
typedef void (*on_sys_execve_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t argv, uint64_t envp);
typedef void (*on_sys_execve_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t argv, uint64_t envp);
typedef void (*on_sys_execveat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t argv, uint64_t envp, int32_t flags);
typedef void (*on_sys_execveat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t argv, uint64_t envp, int32_t flags);
typedef void (*on_sys_exit_enter_t)(CPUState* cpu, target_ulong pc, int32_t error_code);
typedef void (*on_sys_exit_return_t)(CPUState* cpu, target_ulong pc, int32_t error_code);
typedef void (*on_sys_exit_group_enter_t)(CPUState* cpu, target_ulong pc, int32_t error_code);
typedef void (*on_sys_exit_group_return_t)(CPUState* cpu, target_ulong pc, int32_t error_code);
typedef void (*on_sys_faccessat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t mode);
typedef void (*on_sys_faccessat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t mode);
typedef void (*on_sys_faccessat2_enter_t)(CPUState* cpu, target_ulong pc, int32_t dirfd, uint64_t pathname, int32_t mode, int32_t flags);
typedef void (*on_sys_faccessat2_return_t)(CPUState* cpu, target_ulong pc, int32_t dirfd, uint64_t pathname, int32_t mode, int32_t flags);
typedef void (*on_sys_fadvise64_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t len, int32_t advice);
typedef void (*on_sys_fadvise64_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t len, int32_t advice);
typedef void (*on_sys_fallocate_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t mode, uint64_t offset, uint64_t len);
typedef void (*on_sys_fallocate_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t mode, uint64_t offset, uint64_t len);
typedef void (*on_sys_fanotify_init_enter_t)(CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t event_f_flags);
typedef void (*on_sys_fanotify_init_return_t)(CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t event_f_flags);
typedef void (*on_sys_fanotify_mark_enter_t)(CPUState* cpu, target_ulong pc, int32_t fanotify_fd, uint32_t flags, uint64_t mask, int32_t fd, uint64_t pathname);
typedef void (*on_sys_fanotify_mark_return_t)(CPUState* cpu, target_ulong pc, int32_t fanotify_fd, uint32_t flags, uint64_t mask, int32_t fd, uint64_t pathname);
typedef void (*on_sys_fchdir_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fchdir_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fchmod_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t mode);
typedef void (*on_sys_fchmod_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t mode);
typedef void (*on_sys_fchmodat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode);
typedef void (*on_sys_fchmodat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode);
typedef void (*on_sys_fchown_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
typedef void (*on_sys_fchown_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
typedef void (*on_sys_fchownat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t user, uint32_t group, int32_t flag);
typedef void (*on_sys_fchownat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t user, uint32_t group, int32_t flag);
typedef void (*on_sys_fcntl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_fcntl_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_fdatasync_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fdatasync_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fgetxattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_fgetxattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_finit_module_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t uargs, int32_t flags);
typedef void (*on_sys_finit_module_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t uargs, int32_t flags);
typedef void (*on_sys_flistxattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t list, uint32_t size);
typedef void (*on_sys_flistxattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t list, uint32_t size);
typedef void (*on_sys_flock_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd);
typedef void (*on_sys_flock_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd);
typedef void (*on_sys_fremovexattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name);
typedef void (*on_sys_fremovexattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name);
typedef void (*on_sys_fsetxattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_fsetxattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_fstat_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t statbuf);
typedef void (*on_sys_fstat_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t statbuf);
typedef void (*on_sys_fstatfs_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf);
typedef void (*on_sys_fstatfs_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf);
typedef void (*on_sys_fsync_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fsync_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_ftruncate_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t length);
typedef void (*on_sys_ftruncate_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t length);
typedef void (*on_sys_futex_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uaddr, int32_t op, uint32_t val, uint64_t utime, uint64_t uaddr2, uint32_t val3);
typedef void (*on_sys_futex_return_t)(CPUState* cpu, target_ulong pc, uint64_t uaddr, int32_t op, uint32_t val, uint64_t utime, uint64_t uaddr2, uint32_t val3);
typedef void (*on_sys_get_mempolicy_enter_t)(CPUState* cpu, target_ulong pc, uint64_t policy, uint64_t nmask, uint64_t maxnode, uint64_t addr, uint64_t flags);
typedef void (*on_sys_get_mempolicy_return_t)(CPUState* cpu, target_ulong pc, uint64_t policy, uint64_t nmask, uint64_t maxnode, uint64_t addr, uint64_t flags);
typedef void (*on_sys_get_robust_list_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t head_ptr, uint64_t len_ptr);
typedef void (*on_sys_get_robust_list_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t head_ptr, uint64_t len_ptr);
typedef void (*on_sys_getcpu_enter_t)(CPUState* cpu, target_ulong pc, uint64_t _cpu, uint64_t node, uint64_t cache);
typedef void (*on_sys_getcpu_return_t)(CPUState* cpu, target_ulong pc, uint64_t _cpu, uint64_t node, uint64_t cache);
typedef void (*on_sys_getcwd_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint64_t size);
typedef void (*on_sys_getcwd_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint64_t size);
typedef void (*on_sys_getdents64_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t dirent, uint32_t count);
typedef void (*on_sys_getdents64_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t dirent, uint32_t count);
typedef void (*on_sys_getegid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getegid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_geteuid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_geteuid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getgid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getgid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getgroups_enter_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_getgroups_return_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_getitimer_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value);
typedef void (*on_sys_getitimer_return_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value);
typedef void (*on_sys_getpeername_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getpeername_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getpgid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getpgid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getpid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getpid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getppid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getppid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getpriority_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_getpriority_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_getrandom_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t count, uint32_t flags);
typedef void (*on_sys_getrandom_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t count, uint32_t flags);
typedef void (*on_sys_getresgid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t rgid, uint64_t egid, uint64_t sgid);
typedef void (*on_sys_getresgid_return_t)(CPUState* cpu, target_ulong pc, uint64_t rgid, uint64_t egid, uint64_t sgid);
typedef void (*on_sys_getresuid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ruid, uint64_t euid, uint64_t suid);
typedef void (*on_sys_getresuid_return_t)(CPUState* cpu, target_ulong pc, uint64_t ruid, uint64_t euid, uint64_t suid);
typedef void (*on_sys_getrlimit_enter_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_getrlimit_return_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_getrusage_enter_t)(CPUState* cpu, target_ulong pc, int32_t who, uint64_t ru);
typedef void (*on_sys_getrusage_return_t)(CPUState* cpu, target_ulong pc, int32_t who, uint64_t ru);
typedef void (*on_sys_getsid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getsid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getsockname_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getsockname_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getsockopt_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, uint64_t optlen);
typedef void (*on_sys_getsockopt_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, uint64_t optlen);
typedef void (*on_sys_gettid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_gettid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_gettimeofday_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_gettimeofday_return_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_getuid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getuid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_getxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_init_module_enter_t)(CPUState* cpu, target_ulong pc, uint64_t umod, uint64_t len, uint64_t uargs);
typedef void (*on_sys_init_module_return_t)(CPUState* cpu, target_ulong pc, uint64_t umod, uint64_t len, uint64_t uargs);
typedef void (*on_sys_inotify_add_watch_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mask);
typedef void (*on_sys_inotify_add_watch_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mask);
typedef void (*on_sys_inotify_init1_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_inotify_init1_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_inotify_rm_watch_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t wd);
typedef void (*on_sys_inotify_rm_watch_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t wd);
typedef void (*on_sys_io_cancel_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, uint64_t iocb, uint64_t result);
typedef void (*on_sys_io_cancel_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, uint64_t iocb, uint64_t result);
typedef void (*on_sys_io_destroy_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx);
typedef void (*on_sys_io_destroy_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx);
typedef void (*on_sys_io_getevents_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, int64_t min_nr, int64_t nr, uint64_t events, uint64_t timeout);
typedef void (*on_sys_io_getevents_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, int64_t min_nr, int64_t nr, uint64_t events, uint64_t timeout);
typedef void (*on_sys_io_setup_enter_t)(CPUState* cpu, target_ulong pc, uint32_t nr_reqs, uint64_t ctx);
typedef void (*on_sys_io_setup_return_t)(CPUState* cpu, target_ulong pc, uint32_t nr_reqs, uint64_t ctx);
typedef void (*on_sys_io_submit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, int64_t arg1, uint64_t arg2);
typedef void (*on_sys_io_submit_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, int64_t arg1, uint64_t arg2);
typedef void (*on_sys_ioctl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_ioctl_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_ioprio_get_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_ioprio_get_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_ioprio_set_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t ioprio);
typedef void (*on_sys_ioprio_set_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t ioprio);
typedef void (*on_sys_kcmp_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid1, int32_t pid2, int32_t type, uint64_t idx1, uint64_t idx2);
typedef void (*on_sys_kcmp_return_t)(CPUState* cpu, target_ulong pc, int32_t pid1, int32_t pid2, int32_t type, uint64_t idx1, uint64_t idx2);
typedef void (*on_sys_kexec_file_load_enter_t)(CPUState* cpu, target_ulong pc, int32_t kernel_fd, int32_t initrd_fd, uint64_t cmdline_len, uint64_t cmdline, uint64_t flags);
typedef void (*on_sys_kexec_file_load_return_t)(CPUState* cpu, target_ulong pc, int32_t kernel_fd, int32_t initrd_fd, uint64_t cmdline_len, uint64_t cmdline, uint64_t flags);
typedef void (*on_sys_kexec_load_enter_t)(CPUState* cpu, target_ulong pc, uint64_t entry, uint64_t nr_segments, uint64_t segments, uint64_t flags);
typedef void (*on_sys_kexec_load_return_t)(CPUState* cpu, target_ulong pc, uint64_t entry, uint64_t nr_segments, uint64_t segments, uint64_t flags);
typedef void (*on_sys_keyctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_keyctl_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_kill_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_kill_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_lgetxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_lgetxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_linkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, int32_t flags);
typedef void (*on_sys_linkat_return_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, int32_t flags);
typedef void (*on_sys_listen_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_listen_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_listxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_listxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_llistxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_llistxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_lookup_dcookie_enter_t)(CPUState* cpu, target_ulong pc, uint64_t cookie64, uint64_t buf, uint32_t len);
typedef void (*on_sys_lookup_dcookie_return_t)(CPUState* cpu, target_ulong pc, uint64_t cookie64, uint64_t buf, uint32_t len);
typedef void (*on_sys_lremovexattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_lremovexattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_lseek_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t offset, uint32_t whence);
typedef void (*on_sys_lseek_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t offset, uint32_t whence);
typedef void (*on_sys_lsetxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_lsetxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_madvise_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t behavior);
typedef void (*on_sys_madvise_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t behavior);
typedef void (*on_sys_mbind_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t len, uint64_t mode, uint64_t nmask, uint64_t maxnode, uint32_t flags);
typedef void (*on_sys_mbind_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t len, uint64_t mode, uint64_t nmask, uint64_t maxnode, uint32_t flags);
typedef void (*on_sys_membarrier_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, int32_t flags);
typedef void (*on_sys_membarrier_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, int32_t flags);
typedef void (*on_sys_memfd_create_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uname_ptr, uint32_t flags);
typedef void (*on_sys_memfd_create_return_t)(CPUState* cpu, target_ulong pc, uint64_t uname_ptr, uint32_t flags);
typedef void (*on_sys_migrate_pages_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t maxnode, uint64_t from, uint64_t to);
typedef void (*on_sys_migrate_pages_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t maxnode, uint64_t from, uint64_t to);
typedef void (*on_sys_mincore_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t vec);
typedef void (*on_sys_mincore_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t vec);
typedef void (*on_sys_mkdirat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_mkdirat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_mknodat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode, uint32_t dev);
typedef void (*on_sys_mknodat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode, uint32_t dev);
typedef void (*on_sys_mlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_mlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_mlock2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_mlock2_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_mlockall_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_mlockall_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_mmap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t length, int32_t prot, int32_t flags, int32_t fd, uint64_t offset);
typedef void (*on_sys_mmap_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t length, int32_t prot, int32_t flags, int32_t fd, uint64_t offset);
typedef void (*on_sys_mount_enter_t)(CPUState* cpu, target_ulong pc, uint64_t dev_name, uint64_t dir_name, uint64_t type, uint64_t flags, uint64_t _data);
typedef void (*on_sys_mount_return_t)(CPUState* cpu, target_ulong pc, uint64_t dev_name, uint64_t dir_name, uint64_t type, uint64_t flags, uint64_t _data);
typedef void (*on_sys_move_pages_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t nr_pages, uint64_t pages, uint64_t nodes, uint64_t status, int32_t flags);
typedef void (*on_sys_move_pages_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t nr_pages, uint64_t pages, uint64_t nodes, uint64_t status, int32_t flags);
typedef void (*on_sys_mprotect_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot);
typedef void (*on_sys_mprotect_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot);
typedef void (*on_sys_mq_getsetattr_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t mqstat, uint64_t omqstat);
typedef void (*on_sys_mq_getsetattr_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t mqstat, uint64_t omqstat);
typedef void (*on_sys_mq_notify_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t notification);
typedef void (*on_sys_mq_notify_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t notification);
typedef void (*on_sys_mq_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t oflag, uint32_t mode, uint64_t attr);
typedef void (*on_sys_mq_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t oflag, uint32_t mode, uint64_t attr);
typedef void (*on_sys_mq_timedreceive_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint64_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_timedreceive_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint64_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_timedsend_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_timedsend_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_mq_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_mremap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint64_t old_len, uint64_t new_len, uint64_t flags, uint64_t new_addr);
typedef void (*on_sys_mremap_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint64_t old_len, uint64_t new_len, uint64_t flags, uint64_t new_addr);
typedef void (*on_sys_msgctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_msgctl_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_msgget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t msgflg);
typedef void (*on_sys_msgget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t msgflg);
typedef void (*on_sys_msgrcv_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int64_t msgtyp, int32_t msgflg);
typedef void (*on_sys_msgrcv_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int64_t msgtyp, int32_t msgflg);
typedef void (*on_sys_msgsnd_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int32_t msgflg);
typedef void (*on_sys_msgsnd_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int32_t msgflg);
typedef void (*on_sys_msync_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_msync_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_munlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_munlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_munlockall_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_munlockall_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_munmap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_sys_munmap_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_sys_name_to_handle_at_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t name, uint64_t handle, uint64_t mnt_id, int32_t flag);
typedef void (*on_sys_name_to_handle_at_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t name, uint64_t handle, uint64_t mnt_id, int32_t flag);
typedef void (*on_sys_nanosleep_enter_t)(CPUState* cpu, target_ulong pc, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_nanosleep_return_t)(CPUState* cpu, target_ulong pc, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_newfstatat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t statbuf, int32_t flag);
typedef void (*on_sys_newfstatat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t statbuf, int32_t flag);
typedef void (*on_sys_nfsservctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t argp, uint64_t resp);
typedef void (*on_sys_nfsservctl_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t argp, uint64_t resp);
typedef void (*on_sys_open_by_handle_at_enter_t)(CPUState* cpu, target_ulong pc, int32_t mountdirfd, uint64_t handle, int32_t flags);
typedef void (*on_sys_open_by_handle_at_return_t)(CPUState* cpu, target_ulong pc, int32_t mountdirfd, uint64_t handle, int32_t flags);
typedef void (*on_sys_openat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t flags, uint32_t mode);
typedef void (*on_sys_openat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t flags, uint32_t mode);
typedef void (*on_sys_openat2_enter_t)(CPUState* cpu, target_ulong pc, int32_t dirfd, uint64_t pathname, uint64_t how, uint32_t size);
typedef void (*on_sys_openat2_return_t)(CPUState* cpu, target_ulong pc, int32_t dirfd, uint64_t pathname, uint64_t how, uint32_t size);
typedef void (*on_sys_perf_event_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t attr_uptr, int32_t pid, int32_t _cpu, int32_t group_fd, uint64_t flags);
typedef void (*on_sys_perf_event_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t attr_uptr, int32_t pid, int32_t _cpu, int32_t group_fd, uint64_t flags);
typedef void (*on_sys_personality_enter_t)(CPUState* cpu, target_ulong pc, uint32_t personality);
typedef void (*on_sys_personality_return_t)(CPUState* cpu, target_ulong pc, uint32_t personality);
typedef void (*on_sys_pidfd_getfd_enter_t)(CPUState* cpu, target_ulong pc, int32_t pidfd, int32_t targetfd, uint32_t flags);
typedef void (*on_sys_pidfd_getfd_return_t)(CPUState* cpu, target_ulong pc, int32_t pidfd, int32_t targetfd, uint32_t flags);
typedef void (*on_sys_pidfd_open_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t flags);
typedef void (*on_sys_pidfd_open_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t flags);
typedef void (*on_sys_pidfd_send_signal_enter_t)(CPUState* cpu, target_ulong pc, int32_t pidfd, int32_t sig, uint64_t info, uint32_t flags);
typedef void (*on_sys_pidfd_send_signal_return_t)(CPUState* cpu, target_ulong pc, int32_t pidfd, int32_t sig, uint64_t info, uint32_t flags);
typedef void (*on_sys_pipe2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fildes, int32_t flags);
typedef void (*on_sys_pipe2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fildes, int32_t flags);
typedef void (*on_sys_pivot_root_enter_t)(CPUState* cpu, target_ulong pc, uint64_t new_root, uint64_t put_old);
typedef void (*on_sys_pivot_root_return_t)(CPUState* cpu, target_ulong pc, uint64_t new_root, uint64_t put_old);
typedef void (*on_sys_pkey_alloc_enter_t)(CPUState* cpu, target_ulong pc, uint64_t flags, uint64_t init_val);
typedef void (*on_sys_pkey_alloc_return_t)(CPUState* cpu, target_ulong pc, uint64_t flags, uint64_t init_val);
typedef void (*on_sys_pkey_free_enter_t)(CPUState* cpu, target_ulong pc, int32_t pkey);
typedef void (*on_sys_pkey_free_return_t)(CPUState* cpu, target_ulong pc, int32_t pkey);
typedef void (*on_sys_pkey_mprotect_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot, int32_t pkey);
typedef void (*on_sys_pkey_mprotect_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot, int32_t pkey);
typedef void (*on_sys_ppoll_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint32_t arg1, uint64_t arg2, uint64_t arg3, uint32_t arg4);
typedef void (*on_sys_ppoll_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint32_t arg1, uint64_t arg2, uint64_t arg3, uint32_t arg4);
typedef void (*on_sys_prctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t option, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_prctl_return_t)(CPUState* cpu, target_ulong pc, int32_t option, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_pread64_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_pread64_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_preadv_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_preadv_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_preadv2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_preadv2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_prlimit64_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t resource, uint64_t new_rlim, uint64_t old_rlim);
typedef void (*on_sys_prlimit64_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t resource, uint64_t new_rlim, uint64_t old_rlim);
typedef void (*on_sys_process_vm_readv_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_process_vm_readv_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_process_vm_writev_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_process_vm_writev_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_pselect6_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_pselect6_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_ptrace_enter_t)(CPUState* cpu, target_ulong pc, int64_t request, int64_t pid, uint64_t addr, uint64_t _data);
typedef void (*on_sys_ptrace_return_t)(CPUState* cpu, target_ulong pc, int64_t request, int64_t pid, uint64_t addr, uint64_t _data);
typedef void (*on_sys_pwrite64_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_pwrite64_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_pwritev_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_pwritev_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_pwritev2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_pwritev2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_quotactl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t cmd, uint64_t special, uint32_t id, uint64_t addr);
typedef void (*on_sys_quotactl_return_t)(CPUState* cpu, target_ulong pc, uint32_t cmd, uint64_t special, uint32_t id, uint64_t addr);
typedef void (*on_sys_read_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_read_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_readahead_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_readahead_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_readlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint64_t buf, int32_t bufsiz);
typedef void (*on_sys_readlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint64_t buf, int32_t bufsiz);
typedef void (*on_sys_readv_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sys_readv_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sys_reboot_enter_t)(CPUState* cpu, target_ulong pc, int32_t magic1, int32_t magic2, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_reboot_return_t)(CPUState* cpu, target_ulong pc, int32_t magic1, int32_t magic2, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_recvfrom_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_recvfrom_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_recvmmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags, uint64_t timeout);
typedef void (*on_sys_recvmmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags, uint64_t timeout);
typedef void (*on_sys_recvmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_recvmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_remap_file_pages_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t size, uint64_t prot, uint64_t pgoff, uint64_t flags);
typedef void (*on_sys_remap_file_pages_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t size, uint64_t prot, uint64_t pgoff, uint64_t flags);
typedef void (*on_sys_removexattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_removexattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_renameat_enter_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_renameat_return_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_renameat2_enter_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, uint32_t flags);
typedef void (*on_sys_renameat2_return_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, uint32_t flags);
typedef void (*on_sys_request_key_enter_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _callout_info, uint32_t destringid);
typedef void (*on_sys_request_key_return_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _callout_info, uint32_t destringid);
typedef void (*on_sys_restart_syscall_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_restart_syscall_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_rt_sigaction_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint32_t arg3);
typedef void (*on_sys_rt_sigaction_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint32_t arg3);
typedef void (*on_sys_rt_sigpending_enter_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigpending_return_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigprocmask_enter_t)(CPUState* cpu, target_ulong pc, int32_t how, uint64_t set, uint64_t oset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigprocmask_return_t)(CPUState* cpu, target_ulong pc, int32_t how, uint64_t set, uint64_t oset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigqueueinfo_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_rt_sigqueueinfo_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_rt_sigreturn_enter_t)(CPUState* cpu, target_ulong pc, uint64_t regs);
typedef void (*on_sys_rt_sigreturn_return_t)(CPUState* cpu, target_ulong pc, uint64_t regs);
typedef void (*on_sys_rt_sigsuspend_enter_t)(CPUState* cpu, target_ulong pc, uint64_t unewset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigsuspend_return_t)(CPUState* cpu, target_ulong pc, uint64_t unewset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigtimedwait_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uthese, uint64_t uinfo, uint64_t uts, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigtimedwait_return_t)(CPUState* cpu, target_ulong pc, uint64_t uthese, uint64_t uinfo, uint64_t uts, uint32_t sigsetsize);
typedef void (*on_sys_rt_tgsigqueueinfo_enter_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_rt_tgsigqueueinfo_return_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_sched_get_priority_max_enter_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_get_priority_max_return_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_get_priority_min_enter_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_get_priority_min_return_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_getaffinity_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_getaffinity_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_getattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t size, uint32_t flags);
typedef void (*on_sys_sched_getattr_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t size, uint32_t flags);
typedef void (*on_sys_sched_getparam_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_getparam_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_getscheduler_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_sched_getscheduler_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_sched_rr_get_interval_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t interval);
typedef void (*on_sys_sched_rr_get_interval_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t interval);
typedef void (*on_sys_sched_setaffinity_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_setaffinity_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_setattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t flags);
typedef void (*on_sys_sched_setattr_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t flags);
typedef void (*on_sys_sched_setparam_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_setparam_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_setscheduler_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint64_t param);
typedef void (*on_sys_sched_setscheduler_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint64_t param);
typedef void (*on_sys_sched_yield_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_sched_yield_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_seccomp_enter_t)(CPUState* cpu, target_ulong pc, uint32_t op, uint32_t flags, uint64_t uargs);
typedef void (*on_sys_seccomp_return_t)(CPUState* cpu, target_ulong pc, uint32_t op, uint32_t flags, uint64_t uargs);
typedef void (*on_sys_semctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, int32_t semnum, int32_t cmd, uint64_t arg);
typedef void (*on_sys_semctl_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, int32_t semnum, int32_t cmd, uint64_t arg);
typedef void (*on_sys_semget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t nsems, int32_t semflg);
typedef void (*on_sys_semget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t nsems, int32_t semflg);
typedef void (*on_sys_semop_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops);
typedef void (*on_sys_semop_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops);
typedef void (*on_sys_semtimedop_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops, uint64_t timeout);
typedef void (*on_sys_semtimedop_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops, uint64_t timeout);
typedef void (*on_sys_sendfile_enter_t)(CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_sendfile_return_t)(CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_sendmmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags);
typedef void (*on_sys_sendmmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags);
typedef void (*on_sys_sendmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_sendmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_sendto_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, int32_t arg5);
typedef void (*on_sys_sendto_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, int32_t arg5);
typedef void (*on_sys_set_mempolicy_enter_t)(CPUState* cpu, target_ulong pc, int32_t mode, uint64_t nmask, uint64_t maxnode);
typedef void (*on_sys_set_mempolicy_return_t)(CPUState* cpu, target_ulong pc, int32_t mode, uint64_t nmask, uint64_t maxnode);
typedef void (*on_sys_set_robust_list_enter_t)(CPUState* cpu, target_ulong pc, uint64_t head, uint32_t len);
typedef void (*on_sys_set_robust_list_return_t)(CPUState* cpu, target_ulong pc, uint64_t head, uint32_t len);
typedef void (*on_sys_set_tid_address_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tidptr);
typedef void (*on_sys_set_tid_address_return_t)(CPUState* cpu, target_ulong pc, uint64_t tidptr);
typedef void (*on_sys_setdomainname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_setdomainname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_setfsgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setfsgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setfsuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setfsuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setgroups_enter_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_setgroups_return_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_sethostname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_sethostname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_setitimer_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value, uint64_t ovalue);
typedef void (*on_sys_setitimer_return_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value, uint64_t ovalue);
typedef void (*on_sys_setns_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t nstype);
typedef void (*on_sys_setns_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t nstype);
typedef void (*on_sys_setpgid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
typedef void (*on_sys_setpgid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
typedef void (*on_sys_setpriority_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t niceval);
typedef void (*on_sys_setpriority_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t niceval);
typedef void (*on_sys_setregid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
typedef void (*on_sys_setregid_return_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
typedef void (*on_sys_setresgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
typedef void (*on_sys_setresgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
typedef void (*on_sys_setresuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
typedef void (*on_sys_setresuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
typedef void (*on_sys_setreuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
typedef void (*on_sys_setreuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
typedef void (*on_sys_setrlimit_enter_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_setrlimit_return_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_setsid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_setsid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_setsockopt_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, int32_t optlen);
typedef void (*on_sys_setsockopt_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, int32_t optlen);
typedef void (*on_sys_settimeofday_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_settimeofday_return_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_setuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_setxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_shmat_enter_t)(CPUState* cpu, target_ulong pc, int32_t shmid, uint64_t shmaddr, int32_t shmflg);
typedef void (*on_sys_shmat_return_t)(CPUState* cpu, target_ulong pc, int32_t shmid, uint64_t shmaddr, int32_t shmflg);
typedef void (*on_sys_shmctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t shmid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_shmctl_return_t)(CPUState* cpu, target_ulong pc, int32_t shmid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_shmdt_enter_t)(CPUState* cpu, target_ulong pc, uint64_t shmaddr);
typedef void (*on_sys_shmdt_return_t)(CPUState* cpu, target_ulong pc, uint64_t shmaddr);
typedef void (*on_sys_shmget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, uint32_t size, int32_t flag);
typedef void (*on_sys_shmget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, uint32_t size, int32_t flag);
typedef void (*on_sys_shutdown_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_shutdown_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_sigaltstack_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uss, uint64_t uoss);
typedef void (*on_sys_sigaltstack_return_t)(CPUState* cpu, target_ulong pc, uint64_t uss, uint64_t uoss);
typedef void (*on_sys_signalfd4_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t user_mask, uint32_t sizemask, int32_t flags);
typedef void (*on_sys_signalfd4_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t user_mask, uint32_t sizemask, int32_t flags);
typedef void (*on_sys_socket_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2);
typedef void (*on_sys_socket_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2);
typedef void (*on_sys_socketpair_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2, uint64_t arg3);
typedef void (*on_sys_socketpair_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2, uint64_t arg3);
typedef void (*on_sys_splice_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_splice_return_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_statfs_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf);
typedef void (*on_sys_statfs_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf);
typedef void (*on_sys_statx_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint32_t flags, uint32_t mask, uint64_t buffer);
typedef void (*on_sys_statx_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint32_t flags, uint32_t mask, uint64_t buffer);
typedef void (*on_sys_swapoff_enter_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile);
typedef void (*on_sys_swapoff_return_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile);
typedef void (*on_sys_swapon_enter_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile, int32_t swap_flags);
typedef void (*on_sys_swapon_return_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile, int32_t swap_flags);
typedef void (*on_sys_symlinkat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_symlinkat_return_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_sync_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_sync_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_sync_file_range_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t nbytes, uint32_t flags);
typedef void (*on_sys_sync_file_range_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t nbytes, uint32_t flags);
typedef void (*on_sys_syncfs_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_sys_syncfs_return_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_sys_sysinfo_enter_t)(CPUState* cpu, target_ulong pc, uint64_t info);
typedef void (*on_sys_sysinfo_return_t)(CPUState* cpu, target_ulong pc, uint64_t info);
typedef void (*on_sys_syslog_enter_t)(CPUState* cpu, target_ulong pc, int32_t type, uint64_t buf, int32_t len);
typedef void (*on_sys_syslog_return_t)(CPUState* cpu, target_ulong pc, int32_t type, uint64_t buf, int32_t len);
typedef void (*on_sys_tee_enter_t)(CPUState* cpu, target_ulong pc, int32_t fdin, int32_t fdout, uint32_t len, uint32_t flags);
typedef void (*on_sys_tee_return_t)(CPUState* cpu, target_ulong pc, int32_t fdin, int32_t fdout, uint32_t len, uint32_t flags);
typedef void (*on_sys_tgkill_enter_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig);
typedef void (*on_sys_tgkill_return_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig);
typedef void (*on_sys_timer_create_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t timer_event_spec, uint64_t created_timer_id);
typedef void (*on_sys_timer_create_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t timer_event_spec, uint64_t created_timer_id);
typedef void (*on_sys_timer_delete_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_delete_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_getoverrun_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_getoverrun_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_gettime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, uint64_t setting);
typedef void (*on_sys_timer_gettime_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, uint64_t setting);
typedef void (*on_sys_timer_settime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, int32_t flags, uint64_t new_setting, uint64_t old_setting);
typedef void (*on_sys_timer_settime_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, int32_t flags, uint64_t new_setting, uint64_t old_setting);
typedef void (*on_sys_timerfd_create_enter_t)(CPUState* cpu, target_ulong pc, int32_t clockid, int32_t flags);
typedef void (*on_sys_timerfd_create_return_t)(CPUState* cpu, target_ulong pc, int32_t clockid, int32_t flags);
typedef void (*on_sys_timerfd_gettime_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t otmr);
typedef void (*on_sys_timerfd_gettime_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t otmr);
typedef void (*on_sys_timerfd_settime_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, int32_t flags, uint64_t utmr, uint64_t otmr);
typedef void (*on_sys_timerfd_settime_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, int32_t flags, uint64_t utmr, uint64_t otmr);
typedef void (*on_sys_times_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tbuf);
typedef void (*on_sys_times_return_t)(CPUState* cpu, target_ulong pc, uint64_t tbuf);
typedef void (*on_sys_tkill_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_tkill_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_truncate_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t length);
typedef void (*on_sys_truncate_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t length);
typedef void (*on_sys_umask_enter_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sys_umask_return_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sys_umount2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t target, int32_t flags);
typedef void (*on_sys_umount2_return_t)(CPUState* cpu, target_ulong pc, uint64_t target, int32_t flags);
typedef void (*on_sys_uname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_uname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_unlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, int32_t flag);
typedef void (*on_sys_unlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, int32_t flag);
typedef void (*on_sys_unshare_enter_t)(CPUState* cpu, target_ulong pc, uint64_t unshare_flags);
typedef void (*on_sys_unshare_return_t)(CPUState* cpu, target_ulong pc, uint64_t unshare_flags);
typedef void (*on_sys_userfaultfd_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_userfaultfd_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_utimensat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t utimes, int32_t flags);
typedef void (*on_sys_utimensat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t utimes, int32_t flags);
typedef void (*on_sys_vhangup_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_vhangup_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_vmsplice_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iov, uint64_t nr_segs, uint32_t flags);
typedef void (*on_sys_vmsplice_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iov, uint64_t nr_segs, uint32_t flags);
typedef void (*on_sys_wait4_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t stat_addr, int32_t options, uint64_t ru);
typedef void (*on_sys_wait4_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t stat_addr, int32_t options, uint64_t ru);
typedef void (*on_sys_waitid_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t pid, uint64_t infop, int32_t options, uint64_t ru);
typedef void (*on_sys_waitid_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t pid, uint64_t infop, int32_t options, uint64_t ru);
typedef void (*on_sys_write_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_write_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_writev_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sys_writev_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);

// END_PYPANDA_NEEDS_THIS -- do not delete this comment!
