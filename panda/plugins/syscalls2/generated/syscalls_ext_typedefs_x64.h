// BEGIN_PYPANDA_NEEDS_THIS -- do not delete this comment bc pypanda
// api autogen needs it.  And don't put any compiler directives
// between this and END_PYPANDA_NEEDS_THIS except includes of other
// files in this directory that contain subsections like this one.
typedef void (*on___acl_aclcheck_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type, uint64_t aclp);
typedef void (*on___acl_aclcheck_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type, uint64_t aclp);
typedef void (*on___acl_aclcheck_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_aclcheck_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_aclcheck_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_aclcheck_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_delete_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type);
typedef void (*on___acl_delete_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type);
typedef void (*on___acl_delete_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type);
typedef void (*on___acl_delete_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type);
typedef void (*on___acl_delete_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type);
typedef void (*on___acl_delete_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type);
typedef void (*on___acl_get_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type, uint64_t aclp);
typedef void (*on___acl_get_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type, uint64_t aclp);
typedef void (*on___acl_get_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_get_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_get_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_get_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_set_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type, uint64_t aclp);
typedef void (*on___acl_set_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t filedes, uint32_t type, uint64_t aclp);
typedef void (*on___acl_set_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_set_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_set_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___acl_set_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t type, uint64_t aclp);
typedef void (*on___cap_rights_get_enter_t)(CPUState* cpu, target_ulong pc, int32_t version, int32_t fd, uint64_t rightsp);
typedef void (*on___cap_rights_get_return_t)(CPUState* cpu, target_ulong pc, int32_t version, int32_t fd, uint64_t rightsp);
typedef void (*on___getcwd_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t buflen);
typedef void (*on___getcwd_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t buflen);
typedef void (*on___mac_execve_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t argv, uint64_t envv, uint64_t mac_p);
typedef void (*on___mac_execve_return_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t argv, uint64_t envv, uint64_t mac_p);
typedef void (*on___mac_get_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t mac_p);
typedef void (*on___mac_get_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t mac_p);
typedef void (*on___mac_get_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_get_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_get_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_get_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_get_pid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t mac_p);
typedef void (*on___mac_get_pid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t mac_p);
typedef void (*on___mac_get_proc_enter_t)(CPUState* cpu, target_ulong pc, uint64_t mac_p);
typedef void (*on___mac_get_proc_return_t)(CPUState* cpu, target_ulong pc, uint64_t mac_p);
typedef void (*on___mac_set_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t mac_p);
typedef void (*on___mac_set_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t mac_p);
typedef void (*on___mac_set_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_set_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_set_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_set_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path_p, uint64_t mac_p);
typedef void (*on___mac_set_proc_enter_t)(CPUState* cpu, target_ulong pc, uint64_t mac_p);
typedef void (*on___mac_set_proc_return_t)(CPUState* cpu, target_ulong pc, uint64_t mac_p);
typedef void (*on___realpathat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t buf, uint32_t size, int32_t flags);
typedef void (*on___realpathat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t buf, uint32_t size, int32_t flags);
typedef void (*on___semctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, int32_t semnum, int32_t cmd, uint64_t arg);
typedef void (*on___semctl_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, int32_t semnum, int32_t cmd, uint64_t arg);
typedef void (*on___setugid_enter_t)(CPUState* cpu, target_ulong pc, int32_t flag);
typedef void (*on___setugid_return_t)(CPUState* cpu, target_ulong pc, int32_t flag);
typedef void (*on___sysctl_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, uint32_t namelen, uint64_t old, uint64_t oldlenp, uint64_t _new, uint32_t newlen);
typedef void (*on___sysctl_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, uint32_t namelen, uint64_t old, uint64_t oldlenp, uint64_t _new, uint32_t newlen);
typedef void (*on___sysctlbyname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, uint32_t namelen, uint64_t old, uint64_t oldlenp, uint64_t _new, uint32_t newlen);
typedef void (*on___sysctlbyname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, uint32_t namelen, uint64_t old, uint64_t oldlenp, uint64_t _new, uint32_t newlen);
typedef void (*on__umtx_op_enter_t)(CPUState* cpu, target_ulong pc, uint64_t obj, int32_t op, int64_t val, uint64_t uaddr1, uint64_t uaddr2);
typedef void (*on__umtx_op_return_t)(CPUState* cpu, target_ulong pc, uint64_t obj, int32_t op, int64_t val, uint64_t uaddr1, uint64_t uaddr2);
typedef void (*on_abort2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t why, int32_t nargs, uint64_t args);
typedef void (*on_abort2_return_t)(CPUState* cpu, target_ulong pc, uint64_t why, int32_t nargs, uint64_t args);
typedef void (*on_accept_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, uint64_t anamelen);
typedef void (*on_accept_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, uint64_t anamelen);
typedef void (*on_accept4_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, uint64_t anamelen, int32_t flags);
typedef void (*on_accept4_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, uint64_t anamelen, int32_t flags);
typedef void (*on_access_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t amode);
typedef void (*on_access_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t amode);
typedef void (*on_acct_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_acct_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_adjtime_enter_t)(CPUState* cpu, target_ulong pc, uint64_t delta, uint64_t olddelta);
typedef void (*on_adjtime_return_t)(CPUState* cpu, target_ulong pc, uint64_t delta, uint64_t olddelta);
typedef void (*on_afs3_syscall_enter_t)(CPUState* cpu, target_ulong pc, int64_t syscall, int64_t parm1, int64_t parm2, int64_t parm3, int64_t parm4, int64_t parm5, int64_t parm6);
typedef void (*on_afs3_syscall_return_t)(CPUState* cpu, target_ulong pc, int64_t syscall, int64_t parm1, int64_t parm2, int64_t parm3, int64_t parm4, int64_t parm5, int64_t parm6);
typedef void (*on_aio_cancel_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t aiocbp);
typedef void (*on_aio_cancel_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t aiocbp);
typedef void (*on_aio_error_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_error_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_fsync_enter_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t aiocbp);
typedef void (*on_aio_fsync_return_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t aiocbp);
typedef void (*on_aio_mlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_mlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_read_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_read_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_return_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_return_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_suspend_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp, int32_t nent, uint64_t timeout);
typedef void (*on_aio_suspend_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp, int32_t nent, uint64_t timeout);
typedef void (*on_aio_waitcomplete_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp, uint64_t timeout);
typedef void (*on_aio_waitcomplete_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp, uint64_t timeout);
typedef void (*on_aio_write_enter_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_aio_write_return_t)(CPUState* cpu, target_ulong pc, uint64_t aiocbp);
typedef void (*on_audit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t record, uint32_t length);
typedef void (*on_audit_return_t)(CPUState* cpu, target_ulong pc, uint64_t record, uint32_t length);
typedef void (*on_auditctl_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_auditctl_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_auditon_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t _data, uint32_t length);
typedef void (*on_auditon_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t _data, uint32_t length);
typedef void (*on_bind_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_bind_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_bindat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_bindat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_cap_enter_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_cap_enter_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_cap_fcntls_get_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t fcntlrightsp);
typedef void (*on_cap_fcntls_get_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t fcntlrightsp);
typedef void (*on_cap_fcntls_limit_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t fcntlrights);
typedef void (*on_cap_fcntls_limit_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t fcntlrights);
typedef void (*on_cap_getmode_enter_t)(CPUState* cpu, target_ulong pc, uint64_t modep);
typedef void (*on_cap_getmode_return_t)(CPUState* cpu, target_ulong pc, uint64_t modep);
typedef void (*on_cap_ioctls_get_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t cmds, uint32_t maxcmds);
typedef void (*on_cap_ioctls_get_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t cmds, uint32_t maxcmds);
typedef void (*on_cap_ioctls_limit_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t cmds, uint32_t ncmds);
typedef void (*on_cap_ioctls_limit_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t cmds, uint32_t ncmds);
typedef void (*on_cap_rights_limit_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t rightsp);
typedef void (*on_cap_rights_limit_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t rightsp);
typedef void (*on_chdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_chdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_chflags_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t flags);
typedef void (*on_chflags_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t flags);
typedef void (*on_chflagsat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int64_t flags, int32_t atflag);
typedef void (*on_chflagsat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int64_t flags, int32_t atflag);
typedef void (*on_chmod_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_chmod_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_chown_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t uid, int32_t gid);
typedef void (*on_chown_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t uid, int32_t gid);
typedef void (*on_chroot_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_chroot_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_clock_getcpuclockid2_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id, int32_t which, uint64_t clock_id);
typedef void (*on_clock_getcpuclockid2_return_t)(CPUState* cpu, target_ulong pc, uint32_t id, int32_t which, uint64_t clock_id);
typedef void (*on_clock_getres_enter_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t tp);
typedef void (*on_clock_getres_return_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t tp);
typedef void (*on_clock_gettime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t tp);
typedef void (*on_clock_gettime_return_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t tp);
typedef void (*on_clock_nanosleep_enter_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, int32_t flags, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_clock_nanosleep_return_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, int32_t flags, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_clock_settime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t tp);
typedef void (*on_clock_settime_return_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t tp);
typedef void (*on_close_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_close_return_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_close_range_enter_t)(CPUState* cpu, target_ulong pc, uint32_t lowfd, uint32_t highfd, int32_t flags);
typedef void (*on_close_range_return_t)(CPUState* cpu, target_ulong pc, uint32_t lowfd, uint32_t highfd, int32_t flags);
typedef void (*on_closefrom_enter_t)(CPUState* cpu, target_ulong pc, int32_t lowfd);
typedef void (*on_closefrom_return_t)(CPUState* cpu, target_ulong pc, int32_t lowfd);
typedef void (*on_connect_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_connect_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_connectat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_connectat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t s, uint64_t name, int32_t namelen);
typedef void (*on_copy_file_range_enter_t)(CPUState* cpu, target_ulong pc, int32_t infd, uint64_t inoffp, int32_t outfd, uint64_t outoffp, uint32_t len, uint32_t flags);
typedef void (*on_copy_file_range_return_t)(CPUState* cpu, target_ulong pc, int32_t infd, uint64_t inoffp, int32_t outfd, uint64_t outoffp, uint32_t len, uint32_t flags);
typedef void (*on_cpuset_enter_t)(CPUState* cpu, target_ulong pc, uint64_t setid);
typedef void (*on_cpuset_return_t)(CPUState* cpu, target_ulong pc, uint64_t setid);
typedef void (*on_cpuset_getaffinity_enter_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t cpusetsize, uint64_t mask);
typedef void (*on_cpuset_getaffinity_return_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t cpusetsize, uint64_t mask);
typedef void (*on_cpuset_getdomain_enter_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t domainsetsize, uint64_t mask, uint64_t policy);
typedef void (*on_cpuset_getdomain_return_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t domainsetsize, uint64_t mask, uint64_t policy);
typedef void (*on_cpuset_getid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint64_t setid);
typedef void (*on_cpuset_getid_return_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint64_t setid);
typedef void (*on_cpuset_setaffinity_enter_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t cpusetsize, uint64_t mask);
typedef void (*on_cpuset_setaffinity_return_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t cpusetsize, uint64_t mask);
typedef void (*on_cpuset_setdomain_enter_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t domainsetsize, uint64_t mask, int32_t policy);
typedef void (*on_cpuset_setdomain_return_t)(CPUState* cpu, target_ulong pc, uint32_t level, uint32_t which, uint32_t id, uint32_t domainsetsize, uint64_t mask, int32_t policy);
typedef void (*on_cpuset_setid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint32_t id, uint32_t setid);
typedef void (*on_cpuset_setid_return_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint32_t id, uint32_t setid);
typedef void (*on_creat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t mode);
typedef void (*on_creat_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t mode);
typedef void (*on_dup_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_dup_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_dup2_enter_t)(CPUState* cpu, target_ulong pc, uint32_t from, uint32_t to);
typedef void (*on_dup2_return_t)(CPUState* cpu, target_ulong pc, uint32_t from, uint32_t to);
typedef void (*on_eaccess_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t amode);
typedef void (*on_eaccess_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t amode);
typedef void (*on_execve_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t argv, uint64_t envv);
typedef void (*on_execve_return_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t argv, uint64_t envv);
typedef void (*on_extattr_delete_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattr_delete_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattr_delete_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattr_delete_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattr_delete_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattr_delete_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattr_get_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_get_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_get_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_get_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_get_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_get_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_list_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_list_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_list_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_list_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_list_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_list_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_set_fd_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_set_fd_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_set_file_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_set_file_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_set_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattr_set_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t attrnamespace, uint64_t attrname, uint64_t _data, uint32_t nbytes);
typedef void (*on_extattrctl_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t cmd, uint64_t filename, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_extattrctl_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t cmd, uint64_t filename, int32_t attrnamespace, uint64_t attrname);
typedef void (*on_faccessat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int32_t amode, int32_t flag);
typedef void (*on_faccessat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int32_t amode, int32_t flag);
typedef void (*on_fchdir_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_fchdir_return_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_fchflags_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int64_t flags);
typedef void (*on_fchflags_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int64_t flags);
typedef void (*on_fchmod_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint32_t mode);
typedef void (*on_fchmod_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint32_t mode);
typedef void (*on_fchmodat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode, int32_t flag);
typedef void (*on_fchmodat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode, int32_t flag);
typedef void (*on_fchown_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t uid, int32_t gid);
typedef void (*on_fchown_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t uid, int32_t gid);
typedef void (*on_fchownat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t uid, uint32_t gid, int32_t flag);
typedef void (*on_fchownat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t uid, uint32_t gid, int32_t flag);
typedef void (*on_fcntl_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t cmd, int64_t arg);
typedef void (*on_fcntl_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t cmd, int64_t arg);
typedef void (*on_fdatasync_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_fdatasync_return_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_fexecve_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t argv, uint64_t envv);
typedef void (*on_fexecve_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t argv, uint64_t envv);
typedef void (*on_ffclock_getcounter_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ffcount);
typedef void (*on_ffclock_getcounter_return_t)(CPUState* cpu, target_ulong pc, uint64_t ffcount);
typedef void (*on_ffclock_getestimate_enter_t)(CPUState* cpu, target_ulong pc, uint64_t cest);
typedef void (*on_ffclock_getestimate_return_t)(CPUState* cpu, target_ulong pc, uint64_t cest);
typedef void (*on_ffclock_setestimate_enter_t)(CPUState* cpu, target_ulong pc, uint64_t cest);
typedef void (*on_ffclock_setestimate_return_t)(CPUState* cpu, target_ulong pc, uint64_t cest);
typedef void (*on_fhlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fhp, uint64_t to);
typedef void (*on_fhlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t fhp, uint64_t to);
typedef void (*on_fhlinkat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fhp, int32_t tofd, uint64_t to);
typedef void (*on_fhlinkat_return_t)(CPUState* cpu, target_ulong pc, uint64_t fhp, int32_t tofd, uint64_t to);
typedef void (*on_fhopen_enter_t)(CPUState* cpu, target_ulong pc, uint64_t u_fhp, int32_t flags);
typedef void (*on_fhopen_return_t)(CPUState* cpu, target_ulong pc, uint64_t u_fhp, int32_t flags);
typedef void (*on_fhreadlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fhp, uint64_t buf, uint32_t bufsize);
typedef void (*on_fhreadlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t fhp, uint64_t buf, uint32_t bufsize);
typedef void (*on_fhstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t u_fhp, uint64_t sb);
typedef void (*on_fhstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t u_fhp, uint64_t sb);
typedef void (*on_fhstatfs_enter_t)(CPUState* cpu, target_ulong pc, uint64_t u_fhp, uint64_t buf);
typedef void (*on_fhstatfs_return_t)(CPUState* cpu, target_ulong pc, uint64_t u_fhp, uint64_t buf);
typedef void (*on_flock_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t how);
typedef void (*on_flock_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t how);
typedef void (*on_fork_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_fork_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_fpathconf_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t name);
typedef void (*on_fpathconf_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t name);
typedef void (*on_fstat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t sb);
typedef void (*on_fstat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t sb);
typedef void (*on_fstatat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t buf, int32_t flag);
typedef void (*on_fstatat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t buf, int32_t flag);
typedef void (*on_fstatfs_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf);
typedef void (*on_fstatfs_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf);
typedef void (*on_fsync_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_fsync_return_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_ftruncate_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t length);
typedef void (*on_ftruncate_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t length);
typedef void (*on_funlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, int32_t fd, int32_t flag);
typedef void (*on_funlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, int32_t fd, int32_t flag);
typedef void (*on_futimens_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t times);
typedef void (*on_futimens_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t times);
typedef void (*on_futimes_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t tptr);
typedef void (*on_futimes_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t tptr);
typedef void (*on_futimesat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t times);
typedef void (*on_futimesat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t times);
typedef void (*on_getaudit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo);
typedef void (*on_getaudit_return_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo);
typedef void (*on_getaudit_addr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo_addr, uint32_t length);
typedef void (*on_getaudit_addr_return_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo_addr, uint32_t length);
typedef void (*on_getauid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t auid);
typedef void (*on_getauid_return_t)(CPUState* cpu, target_ulong pc, uint64_t auid);
typedef void (*on_getcontext_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ucp);
typedef void (*on_getcontext_return_t)(CPUState* cpu, target_ulong pc, uint64_t ucp);
typedef void (*on_getdents_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_getdents_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_getdirentries_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t count, uint64_t basep);
typedef void (*on_getdirentries_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t count, uint64_t basep);
typedef void (*on_getdomainname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t domainname, int32_t len);
typedef void (*on_getdomainname_return_t)(CPUState* cpu, target_ulong pc, uint64_t domainname, int32_t len);
typedef void (*on_getdtablesize_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getdtablesize_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getegid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getegid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_geteuid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_geteuid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getfh_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t fhp);
typedef void (*on_getfh_return_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t fhp);
typedef void (*on_getfhat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t fhp, int32_t flags);
typedef void (*on_getfhat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t fhp, int32_t flags);
typedef void (*on_getfsstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, int64_t bufsize, int32_t mode);
typedef void (*on_getfsstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, int64_t bufsize, int32_t mode);
typedef void (*on_getgid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getgid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getgroups_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gidsetsize, uint64_t gidset);
typedef void (*on_getgroups_return_t)(CPUState* cpu, target_ulong pc, uint32_t gidsetsize, uint64_t gidset);
typedef void (*on_gethostid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_gethostid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_gethostname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t hostname, uint32_t len);
typedef void (*on_gethostname_return_t)(CPUState* cpu, target_ulong pc, uint64_t hostname, uint32_t len);
typedef void (*on_getitimer_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t itv);
typedef void (*on_getitimer_return_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t itv);
typedef void (*on_getkerninfo_enter_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t where, uint64_t size, int32_t arg);
typedef void (*on_getkerninfo_return_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t where, uint64_t size, int32_t arg);
typedef void (*on_getlogin_enter_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf, uint32_t namelen);
typedef void (*on_getlogin_return_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf, uint32_t namelen);
typedef void (*on_getloginclass_enter_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf, uint32_t namelen);
typedef void (*on_getloginclass_return_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf, uint32_t namelen);
typedef void (*on_getpagesize_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getpagesize_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getpeername_enter_t)(CPUState* cpu, target_ulong pc, int32_t fdes, uint64_t asa, uint64_t alen);
typedef void (*on_getpeername_return_t)(CPUState* cpu, target_ulong pc, int32_t fdes, uint64_t asa, uint64_t alen);
typedef void (*on_getpgid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_getpgid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_getpgrp_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getpgrp_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getpid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getpid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getppid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getppid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getpriority_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_getpriority_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_getrandom_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t buflen, uint32_t flags);
typedef void (*on_getrandom_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t buflen, uint32_t flags);
typedef void (*on_getresgid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t rgid, uint64_t egid, uint64_t sgid);
typedef void (*on_getresgid_return_t)(CPUState* cpu, target_ulong pc, uint64_t rgid, uint64_t egid, uint64_t sgid);
typedef void (*on_getresuid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ruid, uint64_t euid, uint64_t suid);
typedef void (*on_getresuid_return_t)(CPUState* cpu, target_ulong pc, uint64_t ruid, uint64_t euid, uint64_t suid);
typedef void (*on_getrlimit_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t rlp);
typedef void (*on_getrlimit_return_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t rlp);
typedef void (*on_getrusage_enter_t)(CPUState* cpu, target_ulong pc, int32_t who, uint64_t rusage);
typedef void (*on_getrusage_return_t)(CPUState* cpu, target_ulong pc, int32_t who, uint64_t rusage);
typedef void (*on_getsid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_getsid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_getsockname_enter_t)(CPUState* cpu, target_ulong pc, int32_t fdec, uint64_t asa, uint64_t alen);
typedef void (*on_getsockname_return_t)(CPUState* cpu, target_ulong pc, int32_t fdec, uint64_t asa, uint64_t alen);
typedef void (*on_getsockopt_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t level, int32_t name, uint64_t val, uint64_t avalsize);
typedef void (*on_getsockopt_return_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t level, int32_t name, uint64_t val, uint64_t avalsize);
typedef void (*on_gettimeofday_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tp, uint64_t tzp);
typedef void (*on_gettimeofday_return_t)(CPUState* cpu, target_ulong pc, uint64_t tp, uint64_t tzp);
typedef void (*on_getuid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_getuid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_gssd_syscall_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_gssd_syscall_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_ioctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int64_t com, uint64_t _data);
typedef void (*on_ioctl_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int64_t com, uint64_t _data);
typedef void (*on_issetugid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_issetugid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_jail_enter_t)(CPUState* cpu, target_ulong pc, uint64_t jail);
typedef void (*on_jail_return_t)(CPUState* cpu, target_ulong pc, uint64_t jail);
typedef void (*on_jail_attach_enter_t)(CPUState* cpu, target_ulong pc, int32_t jid);
typedef void (*on_jail_attach_return_t)(CPUState* cpu, target_ulong pc, int32_t jid);
typedef void (*on_jail_get_enter_t)(CPUState* cpu, target_ulong pc, uint64_t iovp, uint32_t iovcnt, int32_t flags);
typedef void (*on_jail_get_return_t)(CPUState* cpu, target_ulong pc, uint64_t iovp, uint32_t iovcnt, int32_t flags);
typedef void (*on_jail_remove_enter_t)(CPUState* cpu, target_ulong pc, int32_t jid);
typedef void (*on_jail_remove_return_t)(CPUState* cpu, target_ulong pc, int32_t jid);
typedef void (*on_jail_set_enter_t)(CPUState* cpu, target_ulong pc, uint64_t iovp, uint32_t iovcnt, int32_t flags);
typedef void (*on_jail_set_return_t)(CPUState* cpu, target_ulong pc, uint64_t iovp, uint32_t iovcnt, int32_t flags);
typedef void (*on_kenv_enter_t)(CPUState* cpu, target_ulong pc, int32_t what, uint64_t name, uint64_t value, int32_t len);
typedef void (*on_kenv_return_t)(CPUState* cpu, target_ulong pc, int32_t what, uint64_t name, uint64_t value, int32_t len);
typedef void (*on_kevent_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t changelist, int32_t nchanges, uint64_t eventlist, int32_t nevents, uint64_t timeout);
typedef void (*on_kevent_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t changelist, int32_t nchanges, uint64_t eventlist, int32_t nevents, uint64_t timeout);
typedef void (*on_kill_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t signum);
typedef void (*on_kill_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t signum);
typedef void (*on_killpg_enter_t)(CPUState* cpu, target_ulong pc, int32_t pgid, int32_t signum);
typedef void (*on_killpg_return_t)(CPUState* cpu, target_ulong pc, int32_t pgid, int32_t signum);
typedef void (*on_kldfind_enter_t)(CPUState* cpu, target_ulong pc, uint64_t file);
typedef void (*on_kldfind_return_t)(CPUState* cpu, target_ulong pc, uint64_t file);
typedef void (*on_kldfirstmod_enter_t)(CPUState* cpu, target_ulong pc, int32_t fileid);
typedef void (*on_kldfirstmod_return_t)(CPUState* cpu, target_ulong pc, int32_t fileid);
typedef void (*on_kldload_enter_t)(CPUState* cpu, target_ulong pc, uint64_t file);
typedef void (*on_kldload_return_t)(CPUState* cpu, target_ulong pc, uint64_t file);
typedef void (*on_kldnext_enter_t)(CPUState* cpu, target_ulong pc, int32_t fileid);
typedef void (*on_kldnext_return_t)(CPUState* cpu, target_ulong pc, int32_t fileid);
typedef void (*on_kldstat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fileid, uint64_t stat);
typedef void (*on_kldstat_return_t)(CPUState* cpu, target_ulong pc, int32_t fileid, uint64_t stat);
typedef void (*on_kldsym_enter_t)(CPUState* cpu, target_ulong pc, int32_t fileid, int32_t cmd, uint64_t _data);
typedef void (*on_kldsym_return_t)(CPUState* cpu, target_ulong pc, int32_t fileid, int32_t cmd, uint64_t _data);
typedef void (*on_kldunload_enter_t)(CPUState* cpu, target_ulong pc, int32_t fileid);
typedef void (*on_kldunload_return_t)(CPUState* cpu, target_ulong pc, int32_t fileid);
typedef void (*on_kldunloadf_enter_t)(CPUState* cpu, target_ulong pc, int32_t fileid, int32_t flags);
typedef void (*on_kldunloadf_return_t)(CPUState* cpu, target_ulong pc, int32_t fileid, int32_t flags);
typedef void (*on_kmq_notify_enter_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t sigev);
typedef void (*on_kmq_notify_return_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t sigev);
typedef void (*on_kmq_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode, uint64_t attr);
typedef void (*on_kmq_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode, uint64_t attr);
typedef void (*on_kmq_setattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t attr, uint64_t oattr);
typedef void (*on_kmq_setattr_return_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t attr, uint64_t oattr);
typedef void (*on_kmq_timedreceive_enter_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t msg_ptr, uint32_t msg_len, uint64_t msg_prio, uint64_t abs_timeout);
typedef void (*on_kmq_timedreceive_return_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t msg_ptr, uint32_t msg_len, uint64_t msg_prio, uint64_t abs_timeout);
typedef void (*on_kmq_timedsend_enter_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint64_t abs_timeout);
typedef void (*on_kmq_timedsend_return_t)(CPUState* cpu, target_ulong pc, int32_t mqd, uint64_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint64_t abs_timeout);
typedef void (*on_kmq_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_kmq_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_kqueue_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_kqueue_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_ksem_close_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_close_return_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_destroy_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_destroy_return_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_getvalue_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id, uint64_t val);
typedef void (*on_ksem_getvalue_return_t)(CPUState* cpu, target_ulong pc, uint32_t id, uint64_t val);
typedef void (*on_ksem_init_enter_t)(CPUState* cpu, target_ulong pc, uint64_t idp, uint32_t value);
typedef void (*on_ksem_init_return_t)(CPUState* cpu, target_ulong pc, uint64_t idp, uint32_t value);
typedef void (*on_ksem_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t idp, uint64_t name, int32_t oflag, uint32_t mode, uint32_t value);
typedef void (*on_ksem_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t idp, uint64_t name, int32_t oflag, uint32_t mode, uint32_t value);
typedef void (*on_ksem_post_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_post_return_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_timedwait_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id, uint64_t abstime);
typedef void (*on_ksem_timedwait_return_t)(CPUState* cpu, target_ulong pc, uint32_t id, uint64_t abstime);
typedef void (*on_ksem_trywait_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_trywait_return_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_ksem_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_ksem_wait_enter_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ksem_wait_return_t)(CPUState* cpu, target_ulong pc, uint32_t id);
typedef void (*on_ktimer_create_enter_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t evp, uint64_t timerid);
typedef void (*on_ktimer_create_return_t)(CPUState* cpu, target_ulong pc, uint32_t clock_id, uint64_t evp, uint64_t timerid);
typedef void (*on_ktimer_delete_enter_t)(CPUState* cpu, target_ulong pc, int32_t timerid);
typedef void (*on_ktimer_delete_return_t)(CPUState* cpu, target_ulong pc, int32_t timerid);
typedef void (*on_ktimer_getoverrun_enter_t)(CPUState* cpu, target_ulong pc, int32_t timerid);
typedef void (*on_ktimer_getoverrun_return_t)(CPUState* cpu, target_ulong pc, int32_t timerid);
typedef void (*on_ktimer_gettime_enter_t)(CPUState* cpu, target_ulong pc, int32_t timerid, uint64_t value);
typedef void (*on_ktimer_gettime_return_t)(CPUState* cpu, target_ulong pc, int32_t timerid, uint64_t value);
typedef void (*on_ktimer_settime_enter_t)(CPUState* cpu, target_ulong pc, int32_t timerid, int32_t flags, uint64_t value, uint64_t ovalue);
typedef void (*on_ktimer_settime_return_t)(CPUState* cpu, target_ulong pc, int32_t timerid, int32_t flags, uint64_t value, uint64_t ovalue);
typedef void (*on_ktrace_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fname, int32_t ops, int32_t facs, int32_t pid);
typedef void (*on_ktrace_return_t)(CPUState* cpu, target_ulong pc, uint64_t fname, int32_t ops, int32_t facs, int32_t pid);
typedef void (*on_lchflags_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t flags);
typedef void (*on_lchflags_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t flags);
typedef void (*on_lchmod_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_lchmod_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_lchown_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t uid, int32_t gid);
typedef void (*on_lchown_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t uid, int32_t gid);
typedef void (*on_lgetfh_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t fhp);
typedef void (*on_lgetfh_return_t)(CPUState* cpu, target_ulong pc, uint64_t fname, uint64_t fhp);
typedef void (*on_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t link);
typedef void (*on_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t link);
typedef void (*on_linkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd1, uint64_t path1, int32_t fd2, uint64_t path2, int32_t flag);
typedef void (*on_linkat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd1, uint64_t path1, int32_t fd2, uint64_t path2, int32_t flag);
typedef void (*on_lio_listio_enter_t)(CPUState* cpu, target_ulong pc, int32_t mode, uint64_t acb_list, int32_t nent, uint64_t sig);
typedef void (*on_lio_listio_return_t)(CPUState* cpu, target_ulong pc, int32_t mode, uint64_t acb_list, int32_t nent, uint64_t sig);
typedef void (*on_listen_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t backlog);
typedef void (*on_listen_return_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t backlog);
typedef void (*on_lpathconf_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t name);
typedef void (*on_lpathconf_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t name);
typedef void (*on_lseek_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, int32_t whence);
typedef void (*on_lseek_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, int32_t whence);
typedef void (*on_lstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_lstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_lutimes_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t tptr);
typedef void (*on_lutimes_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t tptr);
typedef void (*on_mac_syscall_enter_t)(CPUState* cpu, target_ulong pc, uint64_t policy, int32_t call, uint64_t arg);
typedef void (*on_mac_syscall_return_t)(CPUState* cpu, target_ulong pc, uint64_t policy, int32_t call, uint64_t arg);
typedef void (*on_madvise_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t behav);
typedef void (*on_madvise_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t behav);
typedef void (*on_mincore_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, uint64_t vec);
typedef void (*on_mincore_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, uint64_t vec);
typedef void (*on_minherit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t inherit);
typedef void (*on_minherit_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t inherit);
typedef void (*on_mkdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_mkdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_mkdirat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode);
typedef void (*on_mkdirat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode);
typedef void (*on_mkfifo_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_mkfifo_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint32_t mode);
typedef void (*on_mkfifoat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode);
typedef void (*on_mkfifoat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode);
typedef void (*on_mknod_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t mode, int32_t dev);
typedef void (*on_mknod_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t mode, int32_t dev);
typedef void (*on_mknodat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode, uint32_t dev);
typedef void (*on_mknodat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mode, uint32_t dev);
typedef void (*on_mlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_mlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_mlockall_enter_t)(CPUState* cpu, target_ulong pc, int32_t how);
typedef void (*on_mlockall_return_t)(CPUState* cpu, target_ulong pc, int32_t how);
typedef void (*on_modfind_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_modfind_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_modfnext_enter_t)(CPUState* cpu, target_ulong pc, int32_t modid);
typedef void (*on_modfnext_return_t)(CPUState* cpu, target_ulong pc, int32_t modid);
typedef void (*on_modnext_enter_t)(CPUState* cpu, target_ulong pc, int32_t modid);
typedef void (*on_modnext_return_t)(CPUState* cpu, target_ulong pc, int32_t modid);
typedef void (*on_modstat_enter_t)(CPUState* cpu, target_ulong pc, int32_t modid, uint64_t stat);
typedef void (*on_modstat_return_t)(CPUState* cpu, target_ulong pc, int32_t modid, uint64_t stat);
typedef void (*on_mount_enter_t)(CPUState* cpu, target_ulong pc, uint64_t type, uint64_t path, int32_t flags, uint64_t _data);
typedef void (*on_mount_return_t)(CPUState* cpu, target_ulong pc, uint64_t type, uint64_t path, int32_t flags, uint64_t _data);
typedef void (*on_mprotect_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t prot);
typedef void (*on_mprotect_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t prot);
typedef void (*on_msgctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, int32_t cmd, uint64_t buf);
typedef void (*on_msgctl_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, int32_t cmd, uint64_t buf);
typedef void (*on_msgget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t msgflg);
typedef void (*on_msgget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t msgflg);
typedef void (*on_msgrcv_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int64_t msgtyp, int32_t msgflg);
typedef void (*on_msgrcv_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int64_t msgtyp, int32_t msgflg);
typedef void (*on_msgsnd_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int32_t msgflg);
typedef void (*on_msgsnd_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int32_t msgflg);
typedef void (*on_msync_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t flags);
typedef void (*on_msync_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len, int32_t flags);
typedef void (*on_munlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_munlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_munmap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_munmap_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_nanosleep_enter_t)(CPUState* cpu, target_ulong pc, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_nanosleep_return_t)(CPUState* cpu, target_ulong pc, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_nfssvc_enter_t)(CPUState* cpu, target_ulong pc, int32_t flag, uint64_t argp);
typedef void (*on_nfssvc_return_t)(CPUState* cpu, target_ulong pc, int32_t flag, uint64_t argp);
typedef void (*on_nfstat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t sb);
typedef void (*on_nfstat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t sb);
typedef void (*on_nlm_syscall_enter_t)(CPUState* cpu, target_ulong pc, int32_t debug_level, int32_t grace_period, int32_t addr_count, uint64_t addrs);
typedef void (*on_nlm_syscall_return_t)(CPUState* cpu, target_ulong pc, int32_t debug_level, int32_t grace_period, int32_t addr_count, uint64_t addrs);
typedef void (*on_nlstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_nlstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_nmount_enter_t)(CPUState* cpu, target_ulong pc, uint64_t iovp, uint32_t iovcnt, int32_t flags);
typedef void (*on_nmount_return_t)(CPUState* cpu, target_ulong pc, uint64_t iovp, uint32_t iovcnt, int32_t flags);
typedef void (*on_nnpfs_syscall_enter_t)(CPUState* cpu, target_ulong pc, int32_t operation, uint64_t a_pathP, int32_t a_opcode, uint64_t a_paramsP, int32_t a_followSymlinks);
typedef void (*on_nnpfs_syscall_return_t)(CPUState* cpu, target_ulong pc, int32_t operation, uint64_t a_pathP, int32_t a_opcode, uint64_t a_paramsP, int32_t a_followSymlinks);
typedef void (*on_nosys_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_nosys_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_nstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_nstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_ntp_adjtime_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tp);
typedef void (*on_ntp_adjtime_return_t)(CPUState* cpu, target_ulong pc, uint64_t tp);
typedef void (*on_ntp_gettime_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ntvp);
typedef void (*on_ntp_gettime_return_t)(CPUState* cpu, target_ulong pc, uint64_t ntvp);
typedef void (*on_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode);
typedef void (*on_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode);
typedef void (*on_openat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int32_t flag, uint32_t mode);
typedef void (*on_openat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int32_t flag, uint32_t mode);
typedef void (*on_pathconf_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t name);
typedef void (*on_pathconf_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t name);
typedef void (*on_pdfork_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fdp, int32_t flags);
typedef void (*on_pdfork_return_t)(CPUState* cpu, target_ulong pc, uint64_t fdp, int32_t flags);
typedef void (*on_pdgetpid_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t pidp);
typedef void (*on_pdgetpid_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t pidp);
typedef void (*on_pdkill_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t signum);
typedef void (*on_pdkill_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t signum);
typedef void (*on_pipe_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_pipe_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_pipe2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fildes, int32_t flags);
typedef void (*on_pipe2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fildes, int32_t flags);
typedef void (*on_poll_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fds, uint32_t nfds, int32_t timeout);
typedef void (*on_poll_return_t)(CPUState* cpu, target_ulong pc, uint64_t fds, uint32_t nfds, int32_t timeout);
typedef void (*on_posix_fadvise_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t len, int32_t advice);
typedef void (*on_posix_fadvise_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t len, int32_t advice);
typedef void (*on_posix_fallocate_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t len);
typedef void (*on_posix_fallocate_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t len);
typedef void (*on_posix_openpt_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_posix_openpt_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_ppoll_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fds, uint32_t nfds, uint64_t ts, uint64_t set);
typedef void (*on_ppoll_return_t)(CPUState* cpu, target_ulong pc, uint64_t fds, uint32_t nfds, uint64_t ts, uint64_t set);
typedef void (*on_pread_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte, uint64_t offset);
typedef void (*on_pread_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte, uint64_t offset);
typedef void (*on_preadv_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt, uint64_t offset);
typedef void (*on_preadv_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt, uint64_t offset);
typedef void (*on_procctl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t idtype, uint32_t id, int32_t com, uint64_t _data);
typedef void (*on_procctl_return_t)(CPUState* cpu, target_ulong pc, uint32_t idtype, uint32_t id, int32_t com, uint64_t _data);
typedef void (*on_profil_enter_t)(CPUState* cpu, target_ulong pc, uint64_t samples, uint32_t size, uint32_t offset, uint32_t scale);
typedef void (*on_profil_return_t)(CPUState* cpu, target_ulong pc, uint64_t samples, uint32_t size, uint32_t offset, uint32_t scale);
typedef void (*on_pselect_enter_t)(CPUState* cpu, target_ulong pc, int32_t nd, uint64_t in, uint64_t ou, uint64_t ex, uint64_t ts, uint64_t sm);
typedef void (*on_pselect_return_t)(CPUState* cpu, target_ulong pc, int32_t nd, uint64_t in, uint64_t ou, uint64_t ex, uint64_t ts, uint64_t sm);
typedef void (*on_ptrace_enter_t)(CPUState* cpu, target_ulong pc, int32_t req, int32_t pid, uint32_t addr, int32_t _data);
typedef void (*on_ptrace_return_t)(CPUState* cpu, target_ulong pc, int32_t req, int32_t pid, uint32_t addr, int32_t _data);
typedef void (*on_pwrite_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte, uint64_t offset);
typedef void (*on_pwrite_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte, uint64_t offset);
typedef void (*on_pwritev_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt, uint64_t offset);
typedef void (*on_pwritev_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt, uint64_t offset);
typedef void (*on_quota_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_quota_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_quotactl_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t cmd, int32_t uid, uint64_t arg);
typedef void (*on_quotactl_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t cmd, int32_t uid, uint64_t arg);
typedef void (*on_rctl_add_rule_enter_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_add_rule_return_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_get_limits_enter_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_get_limits_return_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_get_racct_enter_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_get_racct_return_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_get_rules_enter_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_get_rules_return_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_remove_rule_enter_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_rctl_remove_rule_return_t)(CPUState* cpu, target_ulong pc, uint64_t inbufp, uint32_t inbuflen, uint64_t outbufp, uint32_t outbuflen);
typedef void (*on_read_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte);
typedef void (*on_read_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte);
typedef void (*on_readlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf, uint32_t count);
typedef void (*on_readlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf, uint32_t count);
typedef void (*on_readlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t buf, uint32_t bufsize);
typedef void (*on_readlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t buf, uint32_t bufsize);
typedef void (*on_readv_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt);
typedef void (*on_readv_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt);
typedef void (*on_reboot_enter_t)(CPUState* cpu, target_ulong pc, int32_t opt);
typedef void (*on_reboot_return_t)(CPUState* cpu, target_ulong pc, int32_t opt);
typedef void (*on_recv_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, int32_t len, int32_t flags);
typedef void (*on_recv_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, int32_t len, int32_t flags);
typedef void (*on_recvfrom_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, uint32_t len, int32_t flags, uint64_t from, uint64_t fromlenaddr);
typedef void (*on_recvfrom_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, uint32_t len, int32_t flags, uint64_t from, uint64_t fromlenaddr);
typedef void (*on_recvmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t msg, int32_t flags);
typedef void (*on_recvmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t msg, int32_t flags);
typedef void (*on_rename_enter_t)(CPUState* cpu, target_ulong pc, uint64_t from, uint64_t to);
typedef void (*on_rename_return_t)(CPUState* cpu, target_ulong pc, uint64_t from, uint64_t to);
typedef void (*on_renameat_enter_t)(CPUState* cpu, target_ulong pc, int32_t oldfd, uint64_t old, int32_t newfd, uint64_t _new);
typedef void (*on_renameat_return_t)(CPUState* cpu, target_ulong pc, int32_t oldfd, uint64_t old, int32_t newfd, uint64_t _new);
typedef void (*on_revoke_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_revoke_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_rfork_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_rfork_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_rmdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_rmdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_rpctls_syscall_enter_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t path);
typedef void (*on_rpctls_syscall_return_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t path);
typedef void (*on_rtprio_enter_t)(CPUState* cpu, target_ulong pc, int32_t function, int32_t pid, uint64_t rtp);
typedef void (*on_rtprio_return_t)(CPUState* cpu, target_ulong pc, int32_t function, int32_t pid, uint64_t rtp);
typedef void (*on_rtprio_thread_enter_t)(CPUState* cpu, target_ulong pc, int32_t function, int32_t lwpid, uint64_t rtp);
typedef void (*on_rtprio_thread_return_t)(CPUState* cpu, target_ulong pc, int32_t function, int32_t lwpid, uint64_t rtp);
typedef void (*on_sbrk_enter_t)(CPUState* cpu, target_ulong pc, int32_t incr);
typedef void (*on_sbrk_return_t)(CPUState* cpu, target_ulong pc, int32_t incr);
typedef void (*on_sched_get_priority_max_enter_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sched_get_priority_max_return_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sched_get_priority_min_enter_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sched_get_priority_min_return_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sched_getparam_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sched_getparam_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sched_getscheduler_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sched_getscheduler_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sched_rr_get_interval_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t interval);
typedef void (*on_sched_rr_get_interval_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t interval);
typedef void (*on_sched_setparam_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sched_setparam_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sched_setscheduler_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint64_t param);
typedef void (*on_sched_setscheduler_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint64_t param);
typedef void (*on_sched_yield_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sched_yield_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sctp_generic_recvmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t sd, uint64_t iov, int32_t iovlen, uint64_t from, uint64_t fromlenaddr, uint64_t sinfo, uint64_t msg_flags);
typedef void (*on_sctp_generic_recvmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t sd, uint64_t iov, int32_t iovlen, uint64_t from, uint64_t fromlenaddr, uint64_t sinfo, uint64_t msg_flags);
typedef void (*on_sctp_generic_sendmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t sd, uint64_t msg, int32_t mlen, uint64_t to, uint32_t tolen, uint64_t sinfo, int32_t flags);
typedef void (*on_sctp_generic_sendmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t sd, uint64_t msg, int32_t mlen, uint64_t to, uint32_t tolen, uint64_t sinfo, int32_t flags);
typedef void (*on_sctp_generic_sendmsg_iov_enter_t)(CPUState* cpu, target_ulong pc, int32_t sd, uint64_t iov, int32_t iovlen, uint64_t to, uint32_t tolen, uint64_t sinfo, int32_t flags);
typedef void (*on_sctp_generic_sendmsg_iov_return_t)(CPUState* cpu, target_ulong pc, int32_t sd, uint64_t iov, int32_t iovlen, uint64_t to, uint32_t tolen, uint64_t sinfo, int32_t flags);
typedef void (*on_sctp_peeloff_enter_t)(CPUState* cpu, target_ulong pc, int32_t sd, int32_t name);
typedef void (*on_sctp_peeloff_return_t)(CPUState* cpu, target_ulong pc, int32_t sd, int32_t name);
typedef void (*on_select_enter_t)(CPUState* cpu, target_ulong pc, int32_t nd, uint64_t in, uint64_t ou, uint64_t ex, uint64_t tv);
typedef void (*on_select_return_t)(CPUState* cpu, target_ulong pc, int32_t nd, uint64_t in, uint64_t ou, uint64_t ex, uint64_t tv);
typedef void (*on_semget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t nsems, int32_t semflg);
typedef void (*on_semget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t nsems, int32_t semflg);
typedef void (*on_semop_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops);
typedef void (*on_semop_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops);
typedef void (*on_semsys_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
typedef void (*on_semsys_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t a2, int32_t a3, int32_t a4, int32_t a5);
typedef void (*on_send_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, int32_t len, int32_t flags);
typedef void (*on_send_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, int32_t len, int32_t flags);
typedef void (*on_sendfile_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t s, uint64_t offset, uint32_t nbytes, uint64_t hdtr, uint64_t sbytes, int32_t flags);
typedef void (*on_sendfile_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t s, uint64_t offset, uint32_t nbytes, uint64_t hdtr, uint64_t sbytes, int32_t flags);
typedef void (*on_sendmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t msg, int32_t flags);
typedef void (*on_sendmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t msg, int32_t flags);
typedef void (*on_sendto_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, uint32_t len, int32_t flags, uint64_t to, int32_t tolen);
typedef void (*on_sendto_return_t)(CPUState* cpu, target_ulong pc, int32_t s, uint64_t buf, uint32_t len, int32_t flags, uint64_t to, int32_t tolen);
typedef void (*on_setaudit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo);
typedef void (*on_setaudit_return_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo);
typedef void (*on_setaudit_addr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo_addr, uint32_t length);
typedef void (*on_setaudit_addr_return_t)(CPUState* cpu, target_ulong pc, uint64_t auditinfo_addr, uint32_t length);
typedef void (*on_setauid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t auid);
typedef void (*on_setauid_return_t)(CPUState* cpu, target_ulong pc, uint64_t auid);
typedef void (*on_setcontext_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ucp);
typedef void (*on_setcontext_return_t)(CPUState* cpu, target_ulong pc, uint64_t ucp);
typedef void (*on_setdomainname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t domainname, int32_t len);
typedef void (*on_setdomainname_return_t)(CPUState* cpu, target_ulong pc, uint64_t domainname, int32_t len);
typedef void (*on_setegid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t egid);
typedef void (*on_setegid_return_t)(CPUState* cpu, target_ulong pc, uint32_t egid);
typedef void (*on_seteuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t euid);
typedef void (*on_seteuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t euid);
typedef void (*on_setfib_enter_t)(CPUState* cpu, target_ulong pc, int32_t fibnum);
typedef void (*on_setfib_return_t)(CPUState* cpu, target_ulong pc, int32_t fibnum);
typedef void (*on_setgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_setgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_setgroups_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gidsetsize, uint64_t gidset);
typedef void (*on_setgroups_return_t)(CPUState* cpu, target_ulong pc, uint32_t gidsetsize, uint64_t gidset);
typedef void (*on_sethostid_enter_t)(CPUState* cpu, target_ulong pc, int64_t hostid);
typedef void (*on_sethostid_return_t)(CPUState* cpu, target_ulong pc, int64_t hostid);
typedef void (*on_sethostname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t hostname, uint32_t len);
typedef void (*on_sethostname_return_t)(CPUState* cpu, target_ulong pc, uint64_t hostname, uint32_t len);
typedef void (*on_setitimer_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t itv, uint64_t oitv);
typedef void (*on_setitimer_return_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t itv, uint64_t oitv);
typedef void (*on_setlogin_enter_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf);
typedef void (*on_setlogin_return_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf);
typedef void (*on_setloginclass_enter_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf);
typedef void (*on_setloginclass_return_t)(CPUState* cpu, target_ulong pc, uint64_t namebuf);
typedef void (*on_setpgid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
typedef void (*on_setpgid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
typedef void (*on_setpriority_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t prio);
typedef void (*on_setpriority_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t prio);
typedef void (*on_setregid_enter_t)(CPUState* cpu, target_ulong pc, int32_t rgid, int32_t egid);
typedef void (*on_setregid_return_t)(CPUState* cpu, target_ulong pc, int32_t rgid, int32_t egid);
typedef void (*on_setresgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
typedef void (*on_setresgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
typedef void (*on_setresuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
typedef void (*on_setresuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
typedef void (*on_setreuid_enter_t)(CPUState* cpu, target_ulong pc, int32_t ruid, int32_t euid);
typedef void (*on_setreuid_return_t)(CPUState* cpu, target_ulong pc, int32_t ruid, int32_t euid);
typedef void (*on_setrlimit_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t rlp);
typedef void (*on_setrlimit_return_t)(CPUState* cpu, target_ulong pc, uint32_t which, uint64_t rlp);
typedef void (*on_setsid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_setsid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_setsockopt_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t level, int32_t name, uint64_t val, int32_t valsize);
typedef void (*on_setsockopt_return_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t level, int32_t name, uint64_t val, int32_t valsize);
typedef void (*on_settimeofday_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tzp);
typedef void (*on_settimeofday_return_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tzp);
typedef void (*on_setuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_setuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_shm_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode);
typedef void (*on_shm_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode);
typedef void (*on_shm_open2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode, int32_t shmflags, uint64_t name);
typedef void (*on_shm_open2_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags, uint32_t mode, int32_t shmflags, uint64_t name);
typedef void (*on_shm_rename_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path_from, uint64_t path_to, int32_t flags);
typedef void (*on_shm_rename_return_t)(CPUState* cpu, target_ulong pc, uint64_t path_from, uint64_t path_to, int32_t flags);
typedef void (*on_shm_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_shm_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_shmctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t shmid, int32_t cmd, uint64_t buf);
typedef void (*on_shmctl_return_t)(CPUState* cpu, target_ulong pc, int32_t shmid, int32_t cmd, uint64_t buf);
typedef void (*on_shmdt_enter_t)(CPUState* cpu, target_ulong pc, uint64_t shmaddr);
typedef void (*on_shmdt_return_t)(CPUState* cpu, target_ulong pc, uint64_t shmaddr);
typedef void (*on_shmget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, uint32_t size, int32_t shmflg);
typedef void (*on_shmget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, uint32_t size, int32_t shmflg);
typedef void (*on_shutdown_enter_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t how);
typedef void (*on_shutdown_return_t)(CPUState* cpu, target_ulong pc, int32_t s, int32_t how);
typedef void (*on_sigaction_enter_t)(CPUState* cpu, target_ulong pc, int32_t sig, uint64_t act, uint64_t oact);
typedef void (*on_sigaction_return_t)(CPUState* cpu, target_ulong pc, int32_t sig, uint64_t act, uint64_t oact);
typedef void (*on_sigaltstack_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ss, uint64_t oss);
typedef void (*on_sigaltstack_return_t)(CPUState* cpu, target_ulong pc, uint64_t ss, uint64_t oss);
typedef void (*on_sigblock_enter_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sigblock_return_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sigfastblock_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t ptr);
typedef void (*on_sigfastblock_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t ptr);
typedef void (*on_sigpending_enter_t)(CPUState* cpu, target_ulong pc, uint64_t set);
typedef void (*on_sigpending_return_t)(CPUState* cpu, target_ulong pc, uint64_t set);
typedef void (*on_sigprocmask_enter_t)(CPUState* cpu, target_ulong pc, int32_t how, uint64_t set, uint64_t oset);
typedef void (*on_sigprocmask_return_t)(CPUState* cpu, target_ulong pc, int32_t how, uint64_t set, uint64_t oset);
typedef void (*on_sigqueue_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t signum, uint64_t value);
typedef void (*on_sigqueue_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t signum, uint64_t value);
typedef void (*on_sigreturn_enter_t)(CPUState* cpu, target_ulong pc, uint64_t sigcntxp);
typedef void (*on_sigreturn_return_t)(CPUState* cpu, target_ulong pc, uint64_t sigcntxp);
typedef void (*on_sigsetmask_enter_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sigsetmask_return_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sigstack_enter_t)(CPUState* cpu, target_ulong pc, uint64_t nss, uint64_t oss);
typedef void (*on_sigstack_return_t)(CPUState* cpu, target_ulong pc, uint64_t nss, uint64_t oss);
typedef void (*on_sigsuspend_enter_t)(CPUState* cpu, target_ulong pc, uint64_t sigmask);
typedef void (*on_sigsuspend_return_t)(CPUState* cpu, target_ulong pc, uint64_t sigmask);
typedef void (*on_sigtimedwait_enter_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint64_t info, uint64_t timeout);
typedef void (*on_sigtimedwait_return_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint64_t info, uint64_t timeout);
typedef void (*on_sigvec_enter_t)(CPUState* cpu, target_ulong pc, int32_t signum, uint64_t nsv, uint64_t osv);
typedef void (*on_sigvec_return_t)(CPUState* cpu, target_ulong pc, int32_t signum, uint64_t nsv, uint64_t osv);
typedef void (*on_sigwait_enter_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint64_t sig);
typedef void (*on_sigwait_return_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint64_t sig);
typedef void (*on_sigwaitinfo_enter_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint64_t info);
typedef void (*on_sigwaitinfo_return_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint64_t info);
typedef void (*on_socket_enter_t)(CPUState* cpu, target_ulong pc, int32_t domain, int32_t type, int32_t protocol);
typedef void (*on_socket_return_t)(CPUState* cpu, target_ulong pc, int32_t domain, int32_t type, int32_t protocol);
typedef void (*on_socketpair_enter_t)(CPUState* cpu, target_ulong pc, int32_t domain, int32_t type, int32_t protocol, uint64_t rsv);
typedef void (*on_socketpair_return_t)(CPUState* cpu, target_ulong pc, int32_t domain, int32_t type, int32_t protocol, uint64_t rsv);
typedef void (*on_sstk_enter_t)(CPUState* cpu, target_ulong pc, int32_t incr);
typedef void (*on_sstk_return_t)(CPUState* cpu, target_ulong pc, int32_t incr);
typedef void (*on_stat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_stat_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t ub);
typedef void (*on_statfs_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf);
typedef void (*on_statfs_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf);
typedef void (*on_swapcontext_enter_t)(CPUState* cpu, target_ulong pc, uint64_t oucp, uint64_t ucp);
typedef void (*on_swapcontext_return_t)(CPUState* cpu, target_ulong pc, uint64_t oucp, uint64_t ucp);
typedef void (*on_swapoff_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_swapoff_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_swapon_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_swapon_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_symlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t link);
typedef void (*on_symlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t link);
typedef void (*on_symlinkat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path1, int32_t fd, uint64_t path2);
typedef void (*on_symlinkat_return_t)(CPUState* cpu, target_ulong pc, uint64_t path1, int32_t fd, uint64_t path2);
typedef void (*on_sync_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sync_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_accept_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_accept_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_accept4_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, int32_t arg3);
typedef void (*on_sys_accept4_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, int32_t arg3);
typedef void (*on_sys_access_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, int32_t mode);
typedef void (*on_sys_access_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, int32_t mode);
typedef void (*on_sys_acct_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_acct_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_add_key_enter_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _payload, uint32_t plen, uint32_t destringid);
typedef void (*on_sys_add_key_return_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _payload, uint32_t plen, uint32_t destringid);
typedef void (*on_sys_adjtimex_enter_t)(CPUState* cpu, target_ulong pc, uint64_t txc_p);
typedef void (*on_sys_adjtimex_return_t)(CPUState* cpu, target_ulong pc, uint64_t txc_p);
typedef void (*on_sys_alarm_enter_t)(CPUState* cpu, target_ulong pc, uint32_t seconds);
typedef void (*on_sys_alarm_return_t)(CPUState* cpu, target_ulong pc, uint32_t seconds);
typedef void (*on_sys_arch_prctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1);
typedef void (*on_sys_arch_prctl_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1);
typedef void (*on_sys_bind_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_bind_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_bpf_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t attr, uint32_t size);
typedef void (*on_sys_bpf_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t attr, uint32_t size);
typedef void (*on_sys_brk_enter_t)(CPUState* cpu, target_ulong pc, uint64_t brk);
typedef void (*on_sys_brk_return_t)(CPUState* cpu, target_ulong pc, uint64_t brk);
typedef void (*on_sys_capget_enter_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t dataptr);
typedef void (*on_sys_capget_return_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t dataptr);
typedef void (*on_sys_capset_enter_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t _data);
typedef void (*on_sys_capset_return_t)(CPUState* cpu, target_ulong pc, uint64_t header, uint64_t _data);
typedef void (*on_sys_chdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_chdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_chmod_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t mode);
typedef void (*on_sys_chmod_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t mode);
typedef void (*on_sys_chown_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t user, uint32_t group);
typedef void (*on_sys_chown_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t user, uint32_t group);
typedef void (*on_sys_chroot_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_chroot_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename);
typedef void (*on_sys_clock_adjtime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tx);
typedef void (*on_sys_clock_adjtime_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tx);
typedef void (*on_sys_clock_getres_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_getres_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_gettime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_gettime_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_nanosleep_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, int32_t flags, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_clock_nanosleep_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, int32_t flags, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_clock_settime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clock_settime_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t tp);
typedef void (*on_sys_clone_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4);
typedef void (*on_sys_clone_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4);
typedef void (*on_sys_close_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_close_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_connect_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_connect_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_copy_file_range_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_copy_file_range_return_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_creat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_creat_return_t)(CPUState* cpu, target_ulong pc, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_delete_module_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name_user, uint32_t flags);
typedef void (*on_sys_delete_module_return_t)(CPUState* cpu, target_ulong pc, uint64_t name_user, uint32_t flags);
typedef void (*on_sys_dup_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fildes);
typedef void (*on_sys_dup_return_t)(CPUState* cpu, target_ulong pc, uint32_t fildes);
typedef void (*on_sys_dup2_enter_t)(CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd);
typedef void (*on_sys_dup2_return_t)(CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd);
typedef void (*on_sys_dup3_enter_t)(CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd, int32_t flags);
typedef void (*on_sys_dup3_return_t)(CPUState* cpu, target_ulong pc, uint32_t oldfd, uint32_t newfd, int32_t flags);
typedef void (*on_sys_epoll_create_enter_t)(CPUState* cpu, target_ulong pc, int32_t size);
typedef void (*on_sys_epoll_create_return_t)(CPUState* cpu, target_ulong pc, int32_t size);
typedef void (*on_sys_epoll_create1_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_epoll_create1_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_epoll_ctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t epfd, int32_t op, int32_t fd, uint64_t event);
typedef void (*on_sys_epoll_ctl_return_t)(CPUState* cpu, target_ulong pc, int32_t epfd, int32_t op, int32_t fd, uint64_t event);
typedef void (*on_sys_epoll_pwait_enter_t)(CPUState* cpu, target_ulong pc, int32_t epfd, uint64_t events, int32_t maxevents, int32_t timeout, uint64_t sigmask, uint32_t sigsetsize);
typedef void (*on_sys_epoll_pwait_return_t)(CPUState* cpu, target_ulong pc, int32_t epfd, uint64_t events, int32_t maxevents, int32_t timeout, uint64_t sigmask, uint32_t sigsetsize);
typedef void (*on_sys_epoll_wait_enter_t)(CPUState* cpu, target_ulong pc, int32_t epfd, uint64_t events, int32_t maxevents, int32_t timeout);
typedef void (*on_sys_epoll_wait_return_t)(CPUState* cpu, target_ulong pc, int32_t epfd, uint64_t events, int32_t maxevents, int32_t timeout);
typedef void (*on_sys_eventfd_enter_t)(CPUState* cpu, target_ulong pc, uint32_t count);
typedef void (*on_sys_eventfd_return_t)(CPUState* cpu, target_ulong pc, uint32_t count);
typedef void (*on_sys_eventfd2_enter_t)(CPUState* cpu, target_ulong pc, uint32_t count, int32_t flags);
typedef void (*on_sys_eventfd2_return_t)(CPUState* cpu, target_ulong pc, uint32_t count, int32_t flags);
typedef void (*on_sys_execve_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t argv, uint64_t envp);
typedef void (*on_sys_execve_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t argv, uint64_t envp);
typedef void (*on_sys_execveat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t argv, uint64_t envp, int32_t flags);
typedef void (*on_sys_execveat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t argv, uint64_t envp, int32_t flags);
typedef void (*on_sys_exit_enter_t)(CPUState* cpu, target_ulong pc, int32_t rval);
typedef void (*on_sys_exit_return_t)(CPUState* cpu, target_ulong pc, int32_t rval);
typedef void (*on_sys_exit_group_enter_t)(CPUState* cpu, target_ulong pc, int32_t error_code);
typedef void (*on_sys_exit_group_return_t)(CPUState* cpu, target_ulong pc, int32_t error_code);
typedef void (*on_sys_faccessat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t mode);
typedef void (*on_sys_faccessat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t mode);
typedef void (*on_sys_fadvise64_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t len, int32_t advice);
typedef void (*on_sys_fadvise64_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t len, int32_t advice);
typedef void (*on_sys_fallocate_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t mode, uint64_t offset, uint64_t len);
typedef void (*on_sys_fallocate_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t mode, uint64_t offset, uint64_t len);
typedef void (*on_sys_fanotify_init_enter_t)(CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t event_f_flags);
typedef void (*on_sys_fanotify_init_return_t)(CPUState* cpu, target_ulong pc, uint32_t flags, uint32_t event_f_flags);
typedef void (*on_sys_fanotify_mark_enter_t)(CPUState* cpu, target_ulong pc, int32_t fanotify_fd, uint32_t flags, uint64_t mask, int32_t fd, uint64_t pathname);
typedef void (*on_sys_fanotify_mark_return_t)(CPUState* cpu, target_ulong pc, int32_t fanotify_fd, uint32_t flags, uint64_t mask, int32_t fd, uint64_t pathname);
typedef void (*on_sys_fchdir_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fchdir_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fchmod_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t mode);
typedef void (*on_sys_fchmod_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t mode);
typedef void (*on_sys_fchmodat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode);
typedef void (*on_sys_fchmodat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode);
typedef void (*on_sys_fchown_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
typedef void (*on_sys_fchown_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t user, uint32_t group);
typedef void (*on_sys_fchownat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t user, uint32_t group, int32_t flag);
typedef void (*on_sys_fchownat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t user, uint32_t group, int32_t flag);
typedef void (*on_sys_fcntl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_fcntl_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_fdatasync_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fdatasync_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fgetxattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_fgetxattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_finit_module_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t uargs, int32_t flags);
typedef void (*on_sys_finit_module_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t uargs, int32_t flags);
typedef void (*on_sys_flistxattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t list, uint32_t size);
typedef void (*on_sys_flistxattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t list, uint32_t size);
typedef void (*on_sys_flock_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd);
typedef void (*on_sys_flock_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd);
typedef void (*on_sys_fork_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_fork_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_fremovexattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name);
typedef void (*on_sys_fremovexattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name);
typedef void (*on_sys_fsetxattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_fsetxattr_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_fstatfs_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf);
typedef void (*on_sys_fstatfs_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf);
typedef void (*on_sys_fsync_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_fsync_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd);
typedef void (*on_sys_ftruncate_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t length);
typedef void (*on_sys_ftruncate_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t length);
typedef void (*on_sys_futex_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uaddr, int32_t op, uint32_t val, uint64_t utime, uint64_t uaddr2, uint32_t val3);
typedef void (*on_sys_futex_return_t)(CPUState* cpu, target_ulong pc, uint64_t uaddr, int32_t op, uint32_t val, uint64_t utime, uint64_t uaddr2, uint32_t val3);
typedef void (*on_sys_futimesat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t utimes);
typedef void (*on_sys_futimesat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t utimes);
typedef void (*on_sys_get_mempolicy_enter_t)(CPUState* cpu, target_ulong pc, uint64_t policy, uint64_t nmask, uint64_t maxnode, uint64_t addr, uint64_t flags);
typedef void (*on_sys_get_mempolicy_return_t)(CPUState* cpu, target_ulong pc, uint64_t policy, uint64_t nmask, uint64_t maxnode, uint64_t addr, uint64_t flags);
typedef void (*on_sys_get_robust_list_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t head_ptr, uint64_t len_ptr);
typedef void (*on_sys_get_robust_list_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t head_ptr, uint64_t len_ptr);
typedef void (*on_sys_getcpu_enter_t)(CPUState* cpu, target_ulong pc, uint64_t _cpu, uint64_t node, uint64_t cache);
typedef void (*on_sys_getcpu_return_t)(CPUState* cpu, target_ulong pc, uint64_t _cpu, uint64_t node, uint64_t cache);
typedef void (*on_sys_getcwd_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint64_t size);
typedef void (*on_sys_getcwd_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint64_t size);
typedef void (*on_sys_getdents_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t dirent, uint32_t count);
typedef void (*on_sys_getdents_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t dirent, uint32_t count);
typedef void (*on_sys_getdents64_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t dirent, uint32_t count);
typedef void (*on_sys_getdents64_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t dirent, uint32_t count);
typedef void (*on_sys_getegid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getegid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_geteuid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_geteuid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getgid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getgid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getgroups_enter_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_getgroups_return_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_getitimer_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value);
typedef void (*on_sys_getitimer_return_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value);
typedef void (*on_sys_getpeername_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getpeername_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getpgid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getpgid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getpgrp_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getpgrp_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getpid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getpid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getppid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getppid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getpriority_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_getpriority_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_getrandom_enter_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t count, uint32_t flags);
typedef void (*on_sys_getrandom_return_t)(CPUState* cpu, target_ulong pc, uint64_t buf, uint32_t count, uint32_t flags);
typedef void (*on_sys_getresgid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t rgid, uint64_t egid, uint64_t sgid);
typedef void (*on_sys_getresgid_return_t)(CPUState* cpu, target_ulong pc, uint64_t rgid, uint64_t egid, uint64_t sgid);
typedef void (*on_sys_getresuid_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ruid, uint64_t euid, uint64_t suid);
typedef void (*on_sys_getresuid_return_t)(CPUState* cpu, target_ulong pc, uint64_t ruid, uint64_t euid, uint64_t suid);
typedef void (*on_sys_getrlimit_enter_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_getrlimit_return_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_getrusage_enter_t)(CPUState* cpu, target_ulong pc, int32_t who, uint64_t ru);
typedef void (*on_sys_getrusage_return_t)(CPUState* cpu, target_ulong pc, int32_t who, uint64_t ru);
typedef void (*on_sys_getsid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getsid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_getsockname_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getsockname_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_getsockopt_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, uint64_t optlen);
typedef void (*on_sys_getsockopt_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, uint64_t optlen);
typedef void (*on_sys_gettid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_gettid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_gettimeofday_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_gettimeofday_return_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_getuid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getuid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_getxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_getxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_init_module_enter_t)(CPUState* cpu, target_ulong pc, uint64_t umod, uint64_t len, uint64_t uargs);
typedef void (*on_sys_init_module_return_t)(CPUState* cpu, target_ulong pc, uint64_t umod, uint64_t len, uint64_t uargs);
typedef void (*on_sys_inotify_add_watch_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mask);
typedef void (*on_sys_inotify_add_watch_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint32_t mask);
typedef void (*on_sys_inotify_init_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_inotify_init_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_inotify_init1_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_inotify_init1_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_inotify_rm_watch_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t wd);
typedef void (*on_sys_inotify_rm_watch_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t wd);
typedef void (*on_sys_io_cancel_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, uint64_t iocb, uint64_t result);
typedef void (*on_sys_io_cancel_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, uint64_t iocb, uint64_t result);
typedef void (*on_sys_io_destroy_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx);
typedef void (*on_sys_io_destroy_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx);
typedef void (*on_sys_io_getevents_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, int64_t min_nr, int64_t nr, uint64_t events, uint64_t timeout);
typedef void (*on_sys_io_getevents_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx_id, int64_t min_nr, int64_t nr, uint64_t events, uint64_t timeout);
typedef void (*on_sys_io_setup_enter_t)(CPUState* cpu, target_ulong pc, uint32_t nr_reqs, uint64_t ctx);
typedef void (*on_sys_io_setup_return_t)(CPUState* cpu, target_ulong pc, uint32_t nr_reqs, uint64_t ctx);
typedef void (*on_sys_io_submit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, int64_t arg1, uint64_t arg2);
typedef void (*on_sys_io_submit_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, int64_t arg1, uint64_t arg2);
typedef void (*on_sys_ioctl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_ioctl_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_ioperm_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_ioperm_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, int32_t arg2);
typedef void (*on_sys_iopl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t arg0);
typedef void (*on_sys_iopl_return_t)(CPUState* cpu, target_ulong pc, uint32_t arg0);
typedef void (*on_sys_ioprio_get_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_ioprio_get_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who);
typedef void (*on_sys_ioprio_set_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t ioprio);
typedef void (*on_sys_ioprio_set_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t ioprio);
typedef void (*on_sys_kcmp_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid1, int32_t pid2, int32_t type, uint64_t idx1, uint64_t idx2);
typedef void (*on_sys_kcmp_return_t)(CPUState* cpu, target_ulong pc, int32_t pid1, int32_t pid2, int32_t type, uint64_t idx1, uint64_t idx2);
typedef void (*on_sys_kexec_file_load_enter_t)(CPUState* cpu, target_ulong pc, int32_t kernel_fd, int32_t initrd_fd, uint64_t cmdline_len, uint64_t cmdline_ptr, uint64_t flags);
typedef void (*on_sys_kexec_file_load_return_t)(CPUState* cpu, target_ulong pc, int32_t kernel_fd, int32_t initrd_fd, uint64_t cmdline_len, uint64_t cmdline_ptr, uint64_t flags);
typedef void (*on_sys_kexec_load_enter_t)(CPUState* cpu, target_ulong pc, uint64_t entry, uint64_t nr_segments, uint64_t segments, uint64_t flags);
typedef void (*on_sys_kexec_load_return_t)(CPUState* cpu, target_ulong pc, uint64_t entry, uint64_t nr_segments, uint64_t segments, uint64_t flags);
typedef void (*on_sys_keyctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_keyctl_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_kill_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_kill_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_lchown_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t user, uint32_t group);
typedef void (*on_sys_lchown_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t user, uint32_t group);
typedef void (*on_sys_lgetxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_lgetxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size);
typedef void (*on_sys_link_enter_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, uint64_t newname);
typedef void (*on_sys_link_return_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, uint64_t newname);
typedef void (*on_sys_linkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, int32_t flags);
typedef void (*on_sys_linkat_return_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, int32_t flags);
typedef void (*on_sys_listen_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_listen_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_listxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_listxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_llistxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_llistxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t list, uint32_t size);
typedef void (*on_sys_lookup_dcookie_enter_t)(CPUState* cpu, target_ulong pc, uint64_t cookie64, uint64_t buf, uint32_t len);
typedef void (*on_sys_lookup_dcookie_return_t)(CPUState* cpu, target_ulong pc, uint64_t cookie64, uint64_t buf, uint32_t len);
typedef void (*on_sys_lremovexattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_lremovexattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_lseek_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t offset, uint32_t whence);
typedef void (*on_sys_lseek_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t offset, uint32_t whence);
typedef void (*on_sys_lsetxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_lsetxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_madvise_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t behavior);
typedef void (*on_sys_madvise_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t behavior);
typedef void (*on_sys_mbind_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t len, uint64_t mode, uint64_t nmask, uint64_t maxnode, uint32_t flags);
typedef void (*on_sys_mbind_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t len, uint64_t mode, uint64_t nmask, uint64_t maxnode, uint32_t flags);
typedef void (*on_sys_membarrier_enter_t)(CPUState* cpu, target_ulong pc, int32_t cmd, int32_t flags);
typedef void (*on_sys_membarrier_return_t)(CPUState* cpu, target_ulong pc, int32_t cmd, int32_t flags);
typedef void (*on_sys_memfd_create_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uname_ptr, uint32_t flags);
typedef void (*on_sys_memfd_create_return_t)(CPUState* cpu, target_ulong pc, uint64_t uname_ptr, uint32_t flags);
typedef void (*on_sys_migrate_pages_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t maxnode, uint64_t from, uint64_t to);
typedef void (*on_sys_migrate_pages_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t maxnode, uint64_t from, uint64_t to);
typedef void (*on_sys_mincore_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t vec);
typedef void (*on_sys_mincore_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t vec);
typedef void (*on_sys_mkdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_mkdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_mkdirat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_mkdirat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, uint32_t mode);
typedef void (*on_sys_mknod_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t mode, uint32_t dev);
typedef void (*on_sys_mknod_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint32_t mode, uint32_t dev);
typedef void (*on_sys_mknodat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode, uint32_t dev);
typedef void (*on_sys_mknodat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint32_t mode, uint32_t dev);
typedef void (*on_sys_mlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_mlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_mlock2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_mlock2_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_mlockall_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_mlockall_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_mmap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_mmap_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_modify_ldt_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_modify_ldt_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_mount_enter_t)(CPUState* cpu, target_ulong pc, uint64_t dev_name, uint64_t dir_name, uint64_t type, uint64_t flags, uint64_t _data);
typedef void (*on_sys_mount_return_t)(CPUState* cpu, target_ulong pc, uint64_t dev_name, uint64_t dir_name, uint64_t type, uint64_t flags, uint64_t _data);
typedef void (*on_sys_move_pages_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t nr_pages, uint64_t pages, uint64_t nodes, uint64_t status, int32_t flags);
typedef void (*on_sys_move_pages_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t nr_pages, uint64_t pages, uint64_t nodes, uint64_t status, int32_t flags);
typedef void (*on_sys_mprotect_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot);
typedef void (*on_sys_mprotect_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot);
typedef void (*on_sys_mq_getsetattr_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t mqstat, uint64_t omqstat);
typedef void (*on_sys_mq_getsetattr_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t mqstat, uint64_t omqstat);
typedef void (*on_sys_mq_notify_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t notification);
typedef void (*on_sys_mq_notify_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t notification);
typedef void (*on_sys_mq_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t oflag, uint32_t mode, uint64_t attr);
typedef void (*on_sys_mq_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t oflag, uint32_t mode, uint64_t attr);
typedef void (*on_sys_mq_timedreceive_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint64_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_timedreceive_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint64_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_timedsend_enter_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_timedsend_return_t)(CPUState* cpu, target_ulong pc, uint32_t mqdes, uint64_t msg_ptr, uint32_t msg_len, uint32_t msg_prio, uint64_t abs_timeout);
typedef void (*on_sys_mq_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_mq_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_mremap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint64_t old_len, uint64_t new_len, uint64_t flags, uint64_t new_addr);
typedef void (*on_sys_mremap_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint64_t old_len, uint64_t new_len, uint64_t flags, uint64_t new_addr);
typedef void (*on_sys_msgctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_msgctl_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_msgget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t msgflg);
typedef void (*on_sys_msgget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t msgflg);
typedef void (*on_sys_msgrcv_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int64_t msgtyp, int32_t msgflg);
typedef void (*on_sys_msgrcv_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int64_t msgtyp, int32_t msgflg);
typedef void (*on_sys_msgsnd_enter_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int32_t msgflg);
typedef void (*on_sys_msgsnd_return_t)(CPUState* cpu, target_ulong pc, int32_t msqid, uint64_t msgp, uint32_t msgsz, int32_t msgflg);
typedef void (*on_sys_msync_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_msync_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, int32_t flags);
typedef void (*on_sys_munlock_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_munlock_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len);
typedef void (*on_sys_munlockall_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_munlockall_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_munmap_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_sys_munmap_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_sys_name_to_handle_at_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t name, uint64_t handle, uint64_t mnt_id, int32_t flag);
typedef void (*on_sys_name_to_handle_at_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t name, uint64_t handle, uint64_t mnt_id, int32_t flag);
typedef void (*on_sys_nanosleep_enter_t)(CPUState* cpu, target_ulong pc, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_nanosleep_return_t)(CPUState* cpu, target_ulong pc, uint64_t rqtp, uint64_t rmtp);
typedef void (*on_sys_newfstat_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t statbuf);
typedef void (*on_sys_newfstat_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t statbuf);
typedef void (*on_sys_newfstatat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t statbuf, int32_t flag);
typedef void (*on_sys_newfstatat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t statbuf, int32_t flag);
typedef void (*on_sys_newlstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t statbuf);
typedef void (*on_sys_newlstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t statbuf);
typedef void (*on_sys_newstat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t statbuf);
typedef void (*on_sys_newstat_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t statbuf);
typedef void (*on_sys_newuname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_newuname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_sys_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, int32_t flags, uint32_t mode);
typedef void (*on_sys_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, int32_t flags, uint32_t mode);
typedef void (*on_sys_open_by_handle_at_enter_t)(CPUState* cpu, target_ulong pc, int32_t mountdirfd, uint64_t handle, int32_t flags);
typedef void (*on_sys_open_by_handle_at_return_t)(CPUState* cpu, target_ulong pc, int32_t mountdirfd, uint64_t handle, int32_t flags);
typedef void (*on_sys_openat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t flags, uint32_t mode);
typedef void (*on_sys_openat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, int32_t flags, uint32_t mode);
typedef void (*on_sys_pause_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_pause_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_perf_event_open_enter_t)(CPUState* cpu, target_ulong pc, uint64_t attr_uptr, int32_t pid, int32_t _cpu, int32_t group_fd, uint64_t flags);
typedef void (*on_sys_perf_event_open_return_t)(CPUState* cpu, target_ulong pc, uint64_t attr_uptr, int32_t pid, int32_t _cpu, int32_t group_fd, uint64_t flags);
typedef void (*on_sys_personality_enter_t)(CPUState* cpu, target_ulong pc, uint32_t personality);
typedef void (*on_sys_personality_return_t)(CPUState* cpu, target_ulong pc, uint32_t personality);
typedef void (*on_sys_pipe_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fildes);
typedef void (*on_sys_pipe_return_t)(CPUState* cpu, target_ulong pc, uint64_t fildes);
typedef void (*on_sys_pipe2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fildes, int32_t flags);
typedef void (*on_sys_pipe2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fildes, int32_t flags);
typedef void (*on_sys_pivot_root_enter_t)(CPUState* cpu, target_ulong pc, uint64_t new_root, uint64_t put_old);
typedef void (*on_sys_pivot_root_return_t)(CPUState* cpu, target_ulong pc, uint64_t new_root, uint64_t put_old);
typedef void (*on_sys_pkey_alloc_enter_t)(CPUState* cpu, target_ulong pc, uint64_t flags, uint64_t init_val);
typedef void (*on_sys_pkey_alloc_return_t)(CPUState* cpu, target_ulong pc, uint64_t flags, uint64_t init_val);
typedef void (*on_sys_pkey_free_enter_t)(CPUState* cpu, target_ulong pc, int32_t pkey);
typedef void (*on_sys_pkey_free_return_t)(CPUState* cpu, target_ulong pc, int32_t pkey);
typedef void (*on_sys_pkey_mprotect_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot, int32_t pkey);
typedef void (*on_sys_pkey_mprotect_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint32_t len, uint64_t prot, int32_t pkey);
typedef void (*on_sys_poll_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ufds, uint32_t nfds, int32_t timeout);
typedef void (*on_sys_poll_return_t)(CPUState* cpu, target_ulong pc, uint64_t ufds, uint32_t nfds, int32_t timeout);
typedef void (*on_sys_ppoll_enter_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint32_t arg1, uint64_t arg2, uint64_t arg3, uint32_t arg4);
typedef void (*on_sys_ppoll_return_t)(CPUState* cpu, target_ulong pc, uint64_t arg0, uint32_t arg1, uint64_t arg2, uint64_t arg3, uint32_t arg4);
typedef void (*on_sys_prctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t option, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_prctl_return_t)(CPUState* cpu, target_ulong pc, int32_t option, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_pread64_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_pread64_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_preadv_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_preadv_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_preadv2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_preadv2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_prlimit64_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t resource, uint64_t new_rlim, uint64_t old_rlim);
typedef void (*on_sys_prlimit64_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t resource, uint64_t new_rlim, uint64_t old_rlim);
typedef void (*on_sys_process_vm_readv_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_process_vm_readv_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_process_vm_writev_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_process_vm_writev_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t lvec, uint64_t liovcnt, uint64_t rvec, uint64_t riovcnt, uint64_t flags);
typedef void (*on_sys_pselect6_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_pselect6_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_ptrace_enter_t)(CPUState* cpu, target_ulong pc, int64_t request, int64_t pid, uint64_t addr, uint64_t _data);
typedef void (*on_sys_ptrace_return_t)(CPUState* cpu, target_ulong pc, int64_t request, int64_t pid, uint64_t addr, uint64_t _data);
typedef void (*on_sys_pwrite64_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_pwrite64_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count, uint64_t pos);
typedef void (*on_sys_pwritev_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_pwritev_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h);
typedef void (*on_sys_pwritev2_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_pwritev2_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen, uint64_t pos_l, uint64_t pos_h, uint32_t flags);
typedef void (*on_sys_quotactl_enter_t)(CPUState* cpu, target_ulong pc, uint32_t cmd, uint64_t special, uint32_t id, uint64_t addr);
typedef void (*on_sys_quotactl_return_t)(CPUState* cpu, target_ulong pc, uint32_t cmd, uint64_t special, uint32_t id, uint64_t addr);
typedef void (*on_sys_read_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_read_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_readahead_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_readahead_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_readlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf, int32_t bufsiz);
typedef void (*on_sys_readlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf, int32_t bufsiz);
typedef void (*on_sys_readlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint64_t buf, int32_t bufsiz);
typedef void (*on_sys_readlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint64_t buf, int32_t bufsiz);
typedef void (*on_sys_readv_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sys_readv_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sys_reboot_enter_t)(CPUState* cpu, target_ulong pc, int32_t magic1, int32_t magic2, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_reboot_return_t)(CPUState* cpu, target_ulong pc, int32_t magic1, int32_t magic2, uint32_t cmd, uint64_t arg);
typedef void (*on_sys_recvfrom_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_recvfrom_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, uint64_t arg5);
typedef void (*on_sys_recvmmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags, uint64_t timeout);
typedef void (*on_sys_recvmmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags, uint64_t timeout);
typedef void (*on_sys_recvmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_recvmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_remap_file_pages_enter_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t size, uint64_t prot, uint64_t pgoff, uint64_t flags);
typedef void (*on_sys_remap_file_pages_return_t)(CPUState* cpu, target_ulong pc, uint64_t start, uint64_t size, uint64_t prot, uint64_t pgoff, uint64_t flags);
typedef void (*on_sys_removexattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_removexattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name);
typedef void (*on_sys_rename_enter_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, uint64_t newname);
typedef void (*on_sys_rename_return_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, uint64_t newname);
typedef void (*on_sys_renameat_enter_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_renameat_return_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_renameat2_enter_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, uint32_t flags);
typedef void (*on_sys_renameat2_return_t)(CPUState* cpu, target_ulong pc, int32_t olddfd, uint64_t oldname, int32_t newdfd, uint64_t newname, uint32_t flags);
typedef void (*on_sys_request_key_enter_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _callout_info, uint32_t destringid);
typedef void (*on_sys_request_key_return_t)(CPUState* cpu, target_ulong pc, uint64_t _type, uint64_t _description, uint64_t _callout_info, uint32_t destringid);
typedef void (*on_sys_restart_syscall_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_restart_syscall_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_rmdir_enter_t)(CPUState* cpu, target_ulong pc, uint64_t pathname);
typedef void (*on_sys_rmdir_return_t)(CPUState* cpu, target_ulong pc, uint64_t pathname);
typedef void (*on_sys_rt_sigaction_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint32_t arg3);
typedef void (*on_sys_rt_sigaction_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint64_t arg2, uint32_t arg3);
typedef void (*on_sys_rt_sigpending_enter_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigpending_return_t)(CPUState* cpu, target_ulong pc, uint64_t set, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigprocmask_enter_t)(CPUState* cpu, target_ulong pc, int32_t how, uint64_t set, uint64_t oset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigprocmask_return_t)(CPUState* cpu, target_ulong pc, int32_t how, uint64_t set, uint64_t oset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigqueueinfo_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_rt_sigqueueinfo_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_rt_sigreturn_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_rt_sigreturn_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_rt_sigsuspend_enter_t)(CPUState* cpu, target_ulong pc, uint64_t unewset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigsuspend_return_t)(CPUState* cpu, target_ulong pc, uint64_t unewset, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigtimedwait_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uthese, uint64_t uinfo, uint64_t uts, uint32_t sigsetsize);
typedef void (*on_sys_rt_sigtimedwait_return_t)(CPUState* cpu, target_ulong pc, uint64_t uthese, uint64_t uinfo, uint64_t uts, uint32_t sigsetsize);
typedef void (*on_sys_rt_tgsigqueueinfo_enter_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_rt_tgsigqueueinfo_return_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig, uint64_t uinfo);
typedef void (*on_sys_sched_get_priority_max_enter_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_get_priority_max_return_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_get_priority_min_enter_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_get_priority_min_return_t)(CPUState* cpu, target_ulong pc, int32_t policy);
typedef void (*on_sys_sched_getaffinity_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_getaffinity_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_getattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t size, uint32_t flags);
typedef void (*on_sys_sched_getattr_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t size, uint32_t flags);
typedef void (*on_sys_sched_getparam_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_getparam_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_getscheduler_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_sched_getscheduler_return_t)(CPUState* cpu, target_ulong pc, int32_t pid);
typedef void (*on_sys_sched_rr_get_interval_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t interval);
typedef void (*on_sys_sched_rr_get_interval_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t interval);
typedef void (*on_sys_sched_setaffinity_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_setaffinity_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint32_t len, uint64_t user_mask_ptr);
typedef void (*on_sys_sched_setattr_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t flags);
typedef void (*on_sys_sched_setattr_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t attr, uint32_t flags);
typedef void (*on_sys_sched_setparam_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_setparam_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t param);
typedef void (*on_sys_sched_setscheduler_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint64_t param);
typedef void (*on_sys_sched_setscheduler_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t policy, uint64_t param);
typedef void (*on_sys_sched_yield_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_sched_yield_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_seccomp_enter_t)(CPUState* cpu, target_ulong pc, uint32_t op, uint32_t flags, uint64_t uargs);
typedef void (*on_sys_seccomp_return_t)(CPUState* cpu, target_ulong pc, uint32_t op, uint32_t flags, uint64_t uargs);
typedef void (*on_sys_select_enter_t)(CPUState* cpu, target_ulong pc, int32_t n, uint64_t inp, uint64_t outp, uint64_t exp, uint64_t tvp);
typedef void (*on_sys_select_return_t)(CPUState* cpu, target_ulong pc, int32_t n, uint64_t inp, uint64_t outp, uint64_t exp, uint64_t tvp);
typedef void (*on_sys_semctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, int32_t semnum, int32_t cmd, uint64_t arg);
typedef void (*on_sys_semctl_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, int32_t semnum, int32_t cmd, uint64_t arg);
typedef void (*on_sys_semget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t nsems, int32_t semflg);
typedef void (*on_sys_semget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, int32_t nsems, int32_t semflg);
typedef void (*on_sys_semop_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops);
typedef void (*on_sys_semop_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops);
typedef void (*on_sys_semtimedop_enter_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops, uint64_t timeout);
typedef void (*on_sys_semtimedop_return_t)(CPUState* cpu, target_ulong pc, int32_t semid, uint64_t sops, uint32_t nsops, uint64_t timeout);
typedef void (*on_sys_sendfile64_enter_t)(CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_sendfile64_return_t)(CPUState* cpu, target_ulong pc, int32_t out_fd, int32_t in_fd, uint64_t offset, uint32_t count);
typedef void (*on_sys_sendmmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags);
typedef void (*on_sys_sendmmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t vlen, uint32_t flags);
typedef void (*on_sys_sendmsg_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_sendmsg_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t msg, uint32_t flags);
typedef void (*on_sys_sendto_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, int32_t arg5);
typedef void (*on_sys_sendto_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, uint64_t arg1, uint32_t arg2, uint32_t arg3, uint64_t arg4, int32_t arg5);
typedef void (*on_sys_set_mempolicy_enter_t)(CPUState* cpu, target_ulong pc, int32_t mode, uint64_t nmask, uint64_t maxnode);
typedef void (*on_sys_set_mempolicy_return_t)(CPUState* cpu, target_ulong pc, int32_t mode, uint64_t nmask, uint64_t maxnode);
typedef void (*on_sys_set_robust_list_enter_t)(CPUState* cpu, target_ulong pc, uint64_t head, uint32_t len);
typedef void (*on_sys_set_robust_list_return_t)(CPUState* cpu, target_ulong pc, uint64_t head, uint32_t len);
typedef void (*on_sys_set_tid_address_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tidptr);
typedef void (*on_sys_set_tid_address_return_t)(CPUState* cpu, target_ulong pc, uint64_t tidptr);
typedef void (*on_sys_setdomainname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_setdomainname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_setfsgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setfsgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setfsuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setfsuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t gid);
typedef void (*on_sys_setgroups_enter_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_setgroups_return_t)(CPUState* cpu, target_ulong pc, int32_t gidsetsize, uint64_t grouplist);
typedef void (*on_sys_sethostname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_sethostname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t len);
typedef void (*on_sys_setitimer_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value, uint64_t ovalue);
typedef void (*on_sys_setitimer_return_t)(CPUState* cpu, target_ulong pc, int32_t which, uint64_t value, uint64_t ovalue);
typedef void (*on_sys_setns_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t nstype);
typedef void (*on_sys_setns_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t nstype);
typedef void (*on_sys_setpgid_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
typedef void (*on_sys_setpgid_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t pgid);
typedef void (*on_sys_setpriority_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t niceval);
typedef void (*on_sys_setpriority_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t who, int32_t niceval);
typedef void (*on_sys_setregid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
typedef void (*on_sys_setregid_return_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid);
typedef void (*on_sys_setresgid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
typedef void (*on_sys_setresgid_return_t)(CPUState* cpu, target_ulong pc, uint32_t rgid, uint32_t egid, uint32_t sgid);
typedef void (*on_sys_setresuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
typedef void (*on_sys_setresuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid, uint32_t suid);
typedef void (*on_sys_setreuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
typedef void (*on_sys_setreuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t ruid, uint32_t euid);
typedef void (*on_sys_setrlimit_enter_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_setrlimit_return_t)(CPUState* cpu, target_ulong pc, uint32_t resource, uint64_t rlim);
typedef void (*on_sys_setsid_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_setsid_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_setsockopt_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, int32_t optlen);
typedef void (*on_sys_setsockopt_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, int32_t level, int32_t optname, uint64_t optval, int32_t optlen);
typedef void (*on_sys_settimeofday_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_settimeofday_return_t)(CPUState* cpu, target_ulong pc, uint64_t tv, uint64_t tz);
typedef void (*on_sys_setuid_enter_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setuid_return_t)(CPUState* cpu, target_ulong pc, uint32_t uid);
typedef void (*on_sys_setxattr_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_setxattr_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t name, uint64_t value, uint32_t size, int32_t flags);
typedef void (*on_sys_shmat_enter_t)(CPUState* cpu, target_ulong pc, int32_t shmid, uint64_t shmaddr, int32_t shmflg);
typedef void (*on_sys_shmat_return_t)(CPUState* cpu, target_ulong pc, int32_t shmid, uint64_t shmaddr, int32_t shmflg);
typedef void (*on_sys_shmctl_enter_t)(CPUState* cpu, target_ulong pc, int32_t shmid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_shmctl_return_t)(CPUState* cpu, target_ulong pc, int32_t shmid, int32_t cmd, uint64_t buf);
typedef void (*on_sys_shmdt_enter_t)(CPUState* cpu, target_ulong pc, uint64_t shmaddr);
typedef void (*on_sys_shmdt_return_t)(CPUState* cpu, target_ulong pc, uint64_t shmaddr);
typedef void (*on_sys_shmget_enter_t)(CPUState* cpu, target_ulong pc, uint32_t key, uint32_t size, int32_t flag);
typedef void (*on_sys_shmget_return_t)(CPUState* cpu, target_ulong pc, uint32_t key, uint32_t size, int32_t flag);
typedef void (*on_sys_shutdown_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_shutdown_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1);
typedef void (*on_sys_sigaltstack_enter_t)(CPUState* cpu, target_ulong pc, uint64_t uss, uint64_t uoss);
typedef void (*on_sys_sigaltstack_return_t)(CPUState* cpu, target_ulong pc, uint64_t uss, uint64_t uoss);
typedef void (*on_sys_signalfd_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t user_mask, uint32_t sizemask);
typedef void (*on_sys_signalfd_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t user_mask, uint32_t sizemask);
typedef void (*on_sys_signalfd4_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t user_mask, uint32_t sizemask, int32_t flags);
typedef void (*on_sys_signalfd4_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t user_mask, uint32_t sizemask, int32_t flags);
typedef void (*on_sys_socket_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2);
typedef void (*on_sys_socket_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2);
typedef void (*on_sys_socketpair_enter_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2, uint64_t arg3);
typedef void (*on_sys_socketpair_return_t)(CPUState* cpu, target_ulong pc, int32_t arg0, int32_t arg1, int32_t arg2, uint64_t arg3);
typedef void (*on_sys_splice_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_splice_return_t)(CPUState* cpu, target_ulong pc, int32_t fd_in, uint64_t off_in, int32_t fd_out, uint64_t off_out, uint32_t len, uint32_t flags);
typedef void (*on_sys_statfs_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf);
typedef void (*on_sys_statfs_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t buf);
typedef void (*on_sys_statx_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint32_t flags, uint32_t mask, uint64_t buffer);
typedef void (*on_sys_statx_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t path, uint32_t flags, uint32_t mask, uint64_t buffer);
typedef void (*on_sys_swapoff_enter_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile);
typedef void (*on_sys_swapoff_return_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile);
typedef void (*on_sys_swapon_enter_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile, int32_t swap_flags);
typedef void (*on_sys_swapon_return_t)(CPUState* cpu, target_ulong pc, uint64_t specialfile, int32_t swap_flags);
typedef void (*on_sys_symlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t old, uint64_t _new);
typedef void (*on_sys_symlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t old, uint64_t _new);
typedef void (*on_sys_symlinkat_enter_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_symlinkat_return_t)(CPUState* cpu, target_ulong pc, uint64_t oldname, int32_t newdfd, uint64_t newname);
typedef void (*on_sys_sync_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_sync_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_sync_file_range_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t nbytes, uint32_t flags);
typedef void (*on_sys_sync_file_range_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t offset, uint64_t nbytes, uint32_t flags);
typedef void (*on_sys_syncfs_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_sys_syncfs_return_t)(CPUState* cpu, target_ulong pc, int32_t fd);
typedef void (*on_sys_sysctl_enter_t)(CPUState* cpu, target_ulong pc, uint64_t args);
typedef void (*on_sys_sysctl_return_t)(CPUState* cpu, target_ulong pc, uint64_t args);
typedef void (*on_sys_sysfs_enter_t)(CPUState* cpu, target_ulong pc, int32_t option, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_sysfs_return_t)(CPUState* cpu, target_ulong pc, int32_t option, uint64_t arg1, uint64_t arg2);
typedef void (*on_sys_sysinfo_enter_t)(CPUState* cpu, target_ulong pc, uint64_t info);
typedef void (*on_sys_sysinfo_return_t)(CPUState* cpu, target_ulong pc, uint64_t info);
typedef void (*on_sys_syslog_enter_t)(CPUState* cpu, target_ulong pc, int32_t type, uint64_t buf, int32_t len);
typedef void (*on_sys_syslog_return_t)(CPUState* cpu, target_ulong pc, int32_t type, uint64_t buf, int32_t len);
typedef void (*on_sys_tee_enter_t)(CPUState* cpu, target_ulong pc, int32_t fdin, int32_t fdout, uint32_t len, uint32_t flags);
typedef void (*on_sys_tee_return_t)(CPUState* cpu, target_ulong pc, int32_t fdin, int32_t fdout, uint32_t len, uint32_t flags);
typedef void (*on_sys_tgkill_enter_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig);
typedef void (*on_sys_tgkill_return_t)(CPUState* cpu, target_ulong pc, int32_t tgid, int32_t pid, int32_t sig);
typedef void (*on_sys_time_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tloc);
typedef void (*on_sys_time_return_t)(CPUState* cpu, target_ulong pc, uint64_t tloc);
typedef void (*on_sys_timer_create_enter_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t timer_event_spec, uint64_t created_timer_id);
typedef void (*on_sys_timer_create_return_t)(CPUState* cpu, target_ulong pc, uint32_t which_clock, uint64_t timer_event_spec, uint64_t created_timer_id);
typedef void (*on_sys_timer_delete_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_delete_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_getoverrun_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_getoverrun_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id);
typedef void (*on_sys_timer_gettime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, uint64_t setting);
typedef void (*on_sys_timer_gettime_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, uint64_t setting);
typedef void (*on_sys_timer_settime_enter_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, int32_t flags, uint64_t new_setting, uint64_t old_setting);
typedef void (*on_sys_timer_settime_return_t)(CPUState* cpu, target_ulong pc, uint32_t timer_id, int32_t flags, uint64_t new_setting, uint64_t old_setting);
typedef void (*on_sys_timerfd_create_enter_t)(CPUState* cpu, target_ulong pc, int32_t clockid, int32_t flags);
typedef void (*on_sys_timerfd_create_return_t)(CPUState* cpu, target_ulong pc, int32_t clockid, int32_t flags);
typedef void (*on_sys_timerfd_gettime_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t otmr);
typedef void (*on_sys_timerfd_gettime_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, uint64_t otmr);
typedef void (*on_sys_timerfd_settime_enter_t)(CPUState* cpu, target_ulong pc, int32_t ufd, int32_t flags, uint64_t utmr, uint64_t otmr);
typedef void (*on_sys_timerfd_settime_return_t)(CPUState* cpu, target_ulong pc, int32_t ufd, int32_t flags, uint64_t utmr, uint64_t otmr);
typedef void (*on_sys_times_enter_t)(CPUState* cpu, target_ulong pc, uint64_t tbuf);
typedef void (*on_sys_times_return_t)(CPUState* cpu, target_ulong pc, uint64_t tbuf);
typedef void (*on_sys_tkill_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_tkill_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int32_t sig);
typedef void (*on_sys_truncate_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t length);
typedef void (*on_sys_truncate_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int64_t length);
typedef void (*on_sys_umask_enter_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sys_umask_return_t)(CPUState* cpu, target_ulong pc, int32_t mask);
typedef void (*on_sys_umount_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t flags);
typedef void (*on_sys_umount_return_t)(CPUState* cpu, target_ulong pc, uint64_t name, int32_t flags);
typedef void (*on_sys_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t pathname);
typedef void (*on_sys_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t pathname);
typedef void (*on_sys_unlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, int32_t flag);
typedef void (*on_sys_unlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t pathname, int32_t flag);
typedef void (*on_sys_unshare_enter_t)(CPUState* cpu, target_ulong pc, uint64_t unshare_flags);
typedef void (*on_sys_unshare_return_t)(CPUState* cpu, target_ulong pc, uint64_t unshare_flags);
typedef void (*on_sys_userfaultfd_enter_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_userfaultfd_return_t)(CPUState* cpu, target_ulong pc, int32_t flags);
typedef void (*on_sys_ustat_enter_t)(CPUState* cpu, target_ulong pc, uint32_t dev, uint64_t ubuf);
typedef void (*on_sys_ustat_return_t)(CPUState* cpu, target_ulong pc, uint32_t dev, uint64_t ubuf);
typedef void (*on_sys_utime_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t times);
typedef void (*on_sys_utime_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t times);
typedef void (*on_sys_utimensat_enter_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t utimes, int32_t flags);
typedef void (*on_sys_utimensat_return_t)(CPUState* cpu, target_ulong pc, int32_t dfd, uint64_t filename, uint64_t utimes, int32_t flags);
typedef void (*on_sys_utimes_enter_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t utimes);
typedef void (*on_sys_utimes_return_t)(CPUState* cpu, target_ulong pc, uint64_t filename, uint64_t utimes);
typedef void (*on_sys_vfork_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_vfork_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_vhangup_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_vhangup_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_sys_vmsplice_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iov, uint64_t nr_segs, uint32_t flags);
typedef void (*on_sys_vmsplice_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iov, uint64_t nr_segs, uint32_t flags);
typedef void (*on_sys_wait4_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t stat_addr, int32_t options, uint64_t ru);
typedef void (*on_sys_wait4_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t stat_addr, int32_t options, uint64_t ru);
typedef void (*on_sys_waitid_enter_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t pid, uint64_t infop, int32_t options, uint64_t ru);
typedef void (*on_sys_waitid_return_t)(CPUState* cpu, target_ulong pc, int32_t which, int32_t pid, uint64_t infop, int32_t options, uint64_t ru);
typedef void (*on_sys_write_enter_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_write_return_t)(CPUState* cpu, target_ulong pc, uint32_t fd, uint64_t buf, uint32_t count);
typedef void (*on_sys_writev_enter_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sys_writev_return_t)(CPUState* cpu, target_ulong pc, uint64_t fd, uint64_t vec, uint64_t vlen);
typedef void (*on_sysarch_enter_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t parms);
typedef void (*on_sysarch_return_t)(CPUState* cpu, target_ulong pc, int32_t op, uint64_t parms);
typedef void (*on_thr_create_enter_t)(CPUState* cpu, target_ulong pc, uint64_t ctx, uint64_t id, int32_t flags);
typedef void (*on_thr_create_return_t)(CPUState* cpu, target_ulong pc, uint64_t ctx, uint64_t id, int32_t flags);
typedef void (*on_thr_exit_enter_t)(CPUState* cpu, target_ulong pc, uint64_t state);
typedef void (*on_thr_exit_return_t)(CPUState* cpu, target_ulong pc, uint64_t state);
typedef void (*on_thr_kill_enter_t)(CPUState* cpu, target_ulong pc, int64_t id, int32_t sig);
typedef void (*on_thr_kill_return_t)(CPUState* cpu, target_ulong pc, int64_t id, int32_t sig);
typedef void (*on_thr_kill2_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, int64_t id, int32_t sig);
typedef void (*on_thr_kill2_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, int64_t id, int32_t sig);
typedef void (*on_thr_new_enter_t)(CPUState* cpu, target_ulong pc, uint64_t param, int32_t param_size);
typedef void (*on_thr_new_return_t)(CPUState* cpu, target_ulong pc, uint64_t param, int32_t param_size);
typedef void (*on_thr_self_enter_t)(CPUState* cpu, target_ulong pc, uint64_t id);
typedef void (*on_thr_self_return_t)(CPUState* cpu, target_ulong pc, uint64_t id);
typedef void (*on_thr_set_name_enter_t)(CPUState* cpu, target_ulong pc, int64_t id, uint64_t name);
typedef void (*on_thr_set_name_return_t)(CPUState* cpu, target_ulong pc, int64_t id, uint64_t name);
typedef void (*on_thr_suspend_enter_t)(CPUState* cpu, target_ulong pc, uint64_t timeout);
typedef void (*on_thr_suspend_return_t)(CPUState* cpu, target_ulong pc, uint64_t timeout);
typedef void (*on_thr_wake_enter_t)(CPUState* cpu, target_ulong pc, int64_t id);
typedef void (*on_thr_wake_return_t)(CPUState* cpu, target_ulong pc, int64_t id);
typedef void (*on_truncate_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t length);
typedef void (*on_truncate_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t length);
typedef void (*on_umask_enter_t)(CPUState* cpu, target_ulong pc, uint32_t newmask);
typedef void (*on_umask_return_t)(CPUState* cpu, target_ulong pc, uint32_t newmask);
typedef void (*on_uname_enter_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_uname_return_t)(CPUState* cpu, target_ulong pc, uint64_t name);
typedef void (*on_undelete_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_undelete_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_unlink_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_unlink_return_t)(CPUState* cpu, target_ulong pc, uint64_t path);
typedef void (*on_unlinkat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int32_t flag);
typedef void (*on_unlinkat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, int32_t flag);
typedef void (*on_unmount_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags);
typedef void (*on_unmount_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, int32_t flags);
typedef void (*on_utimensat_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t times, int32_t flag);
typedef void (*on_utimensat_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t path, uint64_t times, int32_t flag);
typedef void (*on_utimes_enter_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t tptr);
typedef void (*on_utimes_return_t)(CPUState* cpu, target_ulong pc, uint64_t path, uint64_t tptr);
typedef void (*on_utrace_enter_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_utrace_return_t)(CPUState* cpu, target_ulong pc, uint64_t addr, uint32_t len);
typedef void (*on_uuidgen_enter_t)(CPUState* cpu, target_ulong pc, uint64_t store, int32_t count);
typedef void (*on_uuidgen_return_t)(CPUState* cpu, target_ulong pc, uint64_t store, int32_t count);
typedef void (*on_vadvise_enter_t)(CPUState* cpu, target_ulong pc, int32_t anom);
typedef void (*on_vadvise_return_t)(CPUState* cpu, target_ulong pc, int32_t anom);
typedef void (*on_vfork_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_vfork_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_wait_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_wait_return_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_wait4_enter_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t status, int32_t options, uint64_t rusage);
typedef void (*on_wait4_return_t)(CPUState* cpu, target_ulong pc, int32_t pid, uint64_t status, int32_t options, uint64_t rusage);
typedef void (*on_wait6_enter_t)(CPUState* cpu, target_ulong pc, uint32_t idtype, uint32_t id, uint64_t status, int32_t options, uint64_t wrusage, uint64_t info);
typedef void (*on_wait6_return_t)(CPUState* cpu, target_ulong pc, uint32_t idtype, uint32_t id, uint64_t status, int32_t options, uint64_t wrusage, uint64_t info);
typedef void (*on_write_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte);
typedef void (*on_write_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t buf, uint32_t nbyte);
typedef void (*on_writev_enter_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt);
typedef void (*on_writev_return_t)(CPUState* cpu, target_ulong pc, int32_t fd, uint64_t iovp, uint32_t iovcnt);
typedef void (*on_yield_enter_t)(CPUState* cpu, target_ulong pc);
typedef void (*on_yield_return_t)(CPUState* cpu, target_ulong pc);

// END_PYPANDA_NEEDS_THIS -- do not delete this comment!
