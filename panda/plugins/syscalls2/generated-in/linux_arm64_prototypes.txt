0 long sys_io_setup(unsigned nr_reqs, aio_context_t __user *ctx);
1 long sys_io_destroy(aio_context_t ctx);
2 long sys_io_submit(aio_context_t, long, struct iocb __user * __user *);
3 long sys_io_cancel(aio_context_t ctx_id, struct iocb __user *iocb, struct io_event __user *result);
4 long sys_io_getevents(aio_context_t ctx_id, long min_nr, long nr, struct io_event __user *events, struct timespec __user *timeout);
5 long sys_setxattr(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags);
6 long sys_lsetxattr(const char __user *path, const char __user *name, const void __user *value, size_t size, int flags);
7 long sys_fsetxattr(int fd, const char __user *name, const void __user *value, size_t size, int flags);
8 long sys_getxattr(const char __user *path, const char __user *name, void __user *value, size_t size);
9 long sys_lgetxattr(const char __user *path, const char __user *name, void __user *value, size_t size);
10 long sys_fgetxattr(int fd, const char __user *name, void __user *value, size_t size);
11 long sys_listxattr(const char __user *path, char __user *list, size_t size);
12 long sys_llistxattr(const char __user *path, char __user *list, size_t size);
13 long sys_flistxattr(int fd, char __user *list, size_t size);
14 long sys_removexattr(const char __user *path, const char __user *name);
15 long sys_lremovexattr(const char __user *path, const char __user *name);
16 long sys_fremovexattr(int fd, const char __user *name);
17 long sys_getcwd(char __user *buf, unsigned long size);
18 long sys_lookup_dcookie(u64 cookie64, char __user *buf, size_t len);
19 long sys_eventfd2(unsigned int count, int flags);
20 long sys_epoll_create1(int flags);
21 long sys_epoll_ctl(int epfd, int op, int fd, struct epoll_event __user *event);
22 long sys_epoll_pwait(int epfd, struct epoll_event __user *events, int maxevents, int timeout, const sigset_t __user *sigmask, size_t sigsetsize);
23 long sys_dup(unsigned int fildes);
24 long sys_dup3(unsigned int oldfd, unsigned int newfd, int flags);
25 long sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg);
26 long sys_inotify_init1(int flags);
27 long sys_inotify_add_watch(int fd, const char __user *path, u32 mask);
28 long sys_inotify_rm_watch(int fd, __s32 wd);
29 long sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg);
30 long sys_ioprio_set(int which, int who, int ioprio);
31 long sys_ioprio_get(int which, int who);
32 long sys_flock(unsigned int fd, unsigned int cmd);
33 long sys_mknodat(int dfd, const char __user *filename, umode_t mode, unsigned dev);
34 long sys_mkdirat(int dfd, const char __user *pathname, umode_t mode);
35 long sys_unlinkat(int dfd, const char __user *pathname, int flag);
36 long sys_symlinkat(const char __user *oldname, int newdfd, const char __user *newname);
37 long sys_linkat(int olddfd, const char __user *oldname, int newdfd, const char __user *newname, int flags);
38 long sys_renameat(int olddfd, const char __user *oldname, int newdfd, const char __user *newname);
39 long sys_umount2(const char* target, int flags);
40 long sys_mount(char __user *dev_name, char __user *dir_name, char __user *type, unsigned long flags, void __user *data);
41 long sys_pivot_root(const char __user *new_root, const char __user *put_old);
42 long sys_nfsservctl(int cmd, struct nfsctl_arg *argp, union nfsctl_res *resp);
43 long sys_statfs(const char * path, struct statfs *buf);
44 long sys_fstatfs(unsigned int fd, struct statfs *buf);
45 long sys_truncate(const char *path, long length);
46 long sys_ftruncate(unsigned int fd, unsigned long length);
47 long sys_fallocate(int fd, int mode, loff_t offset, loff_t len);
48 long sys_faccessat(int dfd, const char __user *filename, int mode);
49 long sys_chdir(const char __user *filename);
50 long sys_fchdir(unsigned int fd);
51 long sys_chroot(const char __user *filename);
52 long sys_fchmod(unsigned int fd, umode_t mode);
53 long sys_fchmodat(int dfd, const char __user *filename, umode_t mode);
54 long sys_fchownat(int dfd, const char __user *filename, uid_t user, gid_t group, int flag);
55 long sys_fchown(unsigned int fd, uid_t user, gid_t group);
56 long sys_openat(int dfd, const char __user *filename, int flags, umode_t mode);
57 long sys_close(unsigned int fd);
58 long sys_vhangup(void);
59 long sys_pipe2(int *fildes, int flags);
60 long sys_quotactl(unsigned int cmd, const char __user *special, qid_t id, void __user *addr);
61 long sys_getdents64(unsigned int fd, struct linux_dirent64 *dirent, unsigned int count);
62 long sys_lseek(unsigned int fd, off_t offset, unsigned int whence);
63 long sys_read(unsigned int fd, char __user *buf, size_t count);
64 long sys_write(unsigned int fd, const char __user *buf, size_t count);
65 long sys_readv(unsigned long fd, const struct iovec __user *vec, unsigned long vlen);
66 long sys_writev(unsigned long fd, const struct iovec __user *vec, unsigned long vlen);
67 long sys_pread64(unsigned int fd, char *buf, size_t count, loff_t pos);
68 long sys_pwrite64(unsigned int fd, const char *buf, size_t count, loff_t pos);
69 long sys_preadv(unsigned long fd, const struct iovec __user *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h);
70 long sys_pwritev(unsigned long fd, const struct iovec __user *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h);
71 long sys_sendfile(int out_fd, int in_fd, off_t *offset, size_t count);
72 long sys_pselect6(int, fd_set *, fd_set *, fd_set *, struct __kernel_timespec *, void *);
73 long sys_ppoll(struct pollfd __user *, unsigned int, struct timespec __user *, const sigset_t __user *, size_t);
74 long sys_signalfd4(int ufd, sigset_t *user_mask, size_t sizemask, int flags);
75 long sys_vmsplice(int fd, const struct iovec __user *iov, unsigned long nr_segs, unsigned int flags);
76 long sys_splice(int fd_in, loff_t __user *off_in, int fd_out, loff_t __user *off_out, size_t len, unsigned int flags);
77 long sys_tee(int fdin, int fdout, size_t len, unsigned int flags);
78 long sys_readlinkat(int dfd, const char __user *path, char __user *buf, int bufsiz);
79 long sys_newfstatat(int dfd, const char *filename, struct stat *statbuf, int flag);
80 long sys_fstat(unsigned int fd, struct __old_kernel_stat *statbuf);
81 long sys_sync(void);
82 long sys_fsync(unsigned int fd);
83 long sys_fdatasync(unsigned int fd);
84 long sys_sync_file_range(int fd, loff_t offset, loff_t nbytes, unsigned int flags);
85 long sys_timerfd_create(int clockid, int flags);
86 long sys_timerfd_settime(int ufd, int flags, const struct itimerspec __user *utmr, struct itimerspec __user *otmr);
87 long sys_timerfd_gettime(int ufd, struct itimerspec __user *otmr);
88 long sys_utimensat(int dfd, const char __user *filename, struct timespec __user *utimes, int flags);
89 long sys_acct(const char __user *name);
90 long sys_capget(cap_user_header_t header, cap_user_data_t dataptr);
91 long sys_capset(cap_user_header_t header, const cap_user_data_t data);
92 long sys_personality(unsigned int personality);
93 long sys_exit(int error_code);
94 long sys_exit_group(int error_code);
95 long sys_waitid(int which, pid_t pid, struct siginfo __user *infop, int options, struct rusage __user *ru);
96 long sys_set_tid_address(int __user *tidptr);
97 long sys_unshare(unsigned long unshare_flags);
98 long sys_futex(u32 __user *uaddr, int op, u32 val, struct timespec __user *utime, u32 __user *uaddr2, u32 val3);
99 long sys_set_robust_list(struct robust_list_head __user *head, size_t len);
100 long sys_get_robust_list(int pid, struct robust_list_head __user * __user *head_ptr, size_t __user *len_ptr);
101 long sys_nanosleep(struct timespec __user *rqtp, struct timespec __user *rmtp);
102 long sys_getitimer(int which, struct itimerval __user *value);
103 long sys_setitimer(int which, struct itimerval __user *value, struct itimerval __user *ovalue);
104 long sys_kexec_load(unsigned long entry, unsigned long nr_segments, struct kexec_segment __user *segments, unsigned long flags);
105 long sys_init_module(void __user *umod, unsigned long len, const char __user *uargs);
106 long sys_delete_module(const char __user *name_user, unsigned int flags);
107 long sys_timer_create(clockid_t which_clock, struct sigevent __user *timer_event_spec, timer_t __user *created_timer_id);
108 long sys_timer_gettime(timer_t timer_id, struct itimerspec __user *setting);
109 long sys_timer_getoverrun(timer_t timer_id);
110 long sys_timer_settime(timer_t timer_id, int flags, const struct itimerspec __user *new_setting, struct itimerspec __user *old_setting);
111 long sys_timer_delete(timer_t timer_id);
112 long sys_clock_settime(clockid_t which_clock, const struct timespec __user *tp);
113 long sys_clock_gettime(clockid_t which_clock, struct timespec __user *tp);
114 long sys_clock_getres(clockid_t which_clock, struct timespec __user *tp);
115 long sys_clock_nanosleep(clockid_t which_clock, int flags, const struct timespec __user *rqtp, struct timespec __user *rmtp);
116 long sys_syslog(int type, char __user *buf, int len);
117 long sys_ptrace(long request, long pid, unsigned long addr, unsigned long data);
118 long sys_sched_setparam(pid_t pid, struct sched_param __user *param);
119 long sys_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param);
120 long sys_sched_getscheduler(pid_t pid);
121 long sys_sched_getparam(pid_t pid, struct sched_param __user *param);
122 long sys_sched_setaffinity(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr);
123 long sys_sched_getaffinity(pid_t pid, unsigned int len, unsigned long __user *user_mask_ptr);
124 long sys_sched_yield(void);
125 long sys_sched_get_priority_max(int policy);
126 long sys_sched_get_priority_min(int policy);
127 long sys_sched_rr_get_interval(pid_t pid, struct timespec __user *interval);
128 long sys_restart_syscall(void);
129 long sys_kill(pid_t pid, int sig);
130 long sys_tkill(pid_t pid, int sig);
131 long sys_tgkill(pid_t tgid, pid_t pid, int sig);
132 long sys_sigaltstack(const struct sigaltstack __user *uss, struct sigaltstack __user *uoss);
133 long sys_rt_sigsuspend(sigset_t __user *unewset, size_t sigsetsize);
134 long sys_rt_sigaction(int, const struct sigaction __user *, struct sigaction __user *, size_t);
135 long sys_rt_sigprocmask(int how, sigset_t __user *set, sigset_t __user *oset, size_t sigsetsize);
136 long sys_rt_sigpending(sigset_t __user *set, size_t sigsetsize);
137 long sys_rt_sigtimedwait(const sigset_t __user *uthese, siginfo_t __user *uinfo, const struct timespec __user *uts, size_t sigsetsize);
138 long sys_rt_sigqueueinfo(pid_t pid, int sig, siginfo_t __user *uinfo);
139 long sys_rt_sigreturn(struct pt_regs *regs);
140 long sys_setpriority(int which, int who, int niceval);
141 long sys_getpriority(int which, int who);
142 long sys_reboot(int magic1, int magic2, unsigned int cmd, void __user *arg);
143 long sys_setregid(gid_t rgid, gid_t egid);
144 long sys_setgid(gid_t gid);
145 long sys_setreuid(uid_t ruid, uid_t euid);
146 long sys_setuid(uid_t uid);
147 long sys_setresuid(uid_t ruid, uid_t euid, uid_t suid);
148 long sys_getresuid(uid_t __user *ruid, uid_t __user *euid, uid_t __user *suid);
149 long sys_setresgid(gid_t rgid, gid_t egid, gid_t sgid);
150 long sys_getresgid(gid_t __user *rgid, gid_t __user *egid, gid_t __user *sgid);
151 long sys_setfsuid(uid_t uid);
152 long sys_setfsgid(gid_t gid);
153 long sys_times(struct tms __user *tbuf);
154 long sys_setpgid(pid_t pid, pid_t pgid);
155 long sys_getpgid(pid_t pid);
156 long sys_getsid(pid_t pid);
157 long sys_setsid(void);
158 long sys_getgroups(int gidsetsize, gid_t __user *grouplist);
159 long sys_setgroups(int gidsetsize, gid_t __user *grouplist);
160 long sys_uname(struct new_utsname __user *name);
161 long sys_sethostname(char __user *name, int len);
162 long sys_setdomainname(char __user *name, int len);
163 long sys_getrlimit(unsigned int resource, struct rlimit __user *rlim);
164 long sys_setrlimit(unsigned int resource, struct rlimit __user *rlim);
165 long sys_getrusage(int who, struct rusage __user *ru);
166 long sys_umask(int mask);
167 long sys_prctl(int option, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
168 long sys_getcpu(unsigned __user *cpu, unsigned __user *node, struct getcpu_cache __user *cache);
169 long sys_gettimeofday(struct timeval __user *tv, struct timezone __user *tz);
170 long sys_settimeofday(struct timeval __user *tv, struct timezone __user *tz);
171 long sys_adjtimex(struct timex __user *txc_p);
172 long sys_getpid(void);
173 long sys_getppid(void);
174 long sys_getuid(void);
175 long sys_geteuid(void);
176 long sys_getgid(void);
177 long sys_getegid(void);
178 long sys_gettid(void);
179 long sys_sysinfo(struct sysinfo __user *info);
180 long sys_mq_open(const char __user *name, int oflag, umode_t mode, struct mq_attr __user *attr);
181 long sys_mq_unlink(const char __user *name);
182 long sys_mq_timedsend(mqd_t mqdes, const char __user *msg_ptr, size_t msg_len, unsigned int msg_prio, const struct timespec __user *abs_timeout);
183 long sys_mq_timedreceive(mqd_t mqdes, char __user *msg_ptr, size_t msg_len, unsigned int __user *msg_prio, const struct timespec __user *abs_timeout);
184 long sys_mq_notify(mqd_t mqdes, const struct sigevent __user *notification);
185 long sys_mq_getsetattr(mqd_t mqdes, const struct mq_attr __user *mqstat, struct mq_attr __user *omqstat);
186 long sys_msgget(key_t key, int msgflg);
187 long sys_msgctl(int msqid, int cmd, struct msqid_ds __user *buf);
188 long sys_msgrcv(int msqid, struct msgbuf __user *msgp, size_t msgsz, long msgtyp, int msgflg);
189 long sys_msgsnd(int msqid, struct msgbuf __user *msgp, size_t msgsz, int msgflg);
190 long sys_semget(key_t key, int nsems, int semflg);
191 long sys_semctl(int semid, int semnum, int cmd, unsigned long arg);
192 long sys_semtimedop(int semid, struct sembuf __user *sops, unsigned nsops, const struct timespec __user *timeout);
193 long sys_semop(int semid, struct sembuf __user *sops, unsigned nsops);
194 long sys_shmget(key_t key, size_t size, int flag);
195 long sys_shmctl(int shmid, int cmd, struct shmid_ds __user *buf);
196 long sys_shmat(int shmid, char __user *shmaddr, int shmflg);
197 long sys_shmdt(char __user *shmaddr);
198 long sys_socket(int, int, int);
199 long sys_socketpair(int, int, int, int __user *);
200 long sys_bind(int, struct sockaddr __user *, int);
201 long sys_listen(int, int);
202 long sys_accept(int, struct sockaddr __user *, int __user *);
203 long sys_connect(int, struct sockaddr __user *, int);
204 long sys_getsockname(int, struct sockaddr __user *, int __user *);
205 long sys_getpeername(int, struct sockaddr __user *, int __user *);
206 long sys_sendto(int, void __user *, size_t, unsigned, struct sockaddr __user *, int);
207 long sys_recvfrom(int, void __user *, size_t, unsigned, struct sockaddr __user *, int __user *);
208 long sys_setsockopt(int fd, int level, int optname, char __user *optval, int optlen);
209 long sys_getsockopt(int fd, int level, int optname, char __user *optval, int __user *optlen);
210 long sys_shutdown(int, int);
211 long sys_sendmsg(int fd, struct user_msghdr __user *msg, unsigned flags);
212 long sys_recvmsg(int fd, struct user_msghdr __user *msg, unsigned flags);
213 long sys_readahead(int fd, loff_t offset, size_t count);
214 long sys_brk(unsigned long brk);
215 long sys_munmap(unsigned long addr, size_t len);
216 long sys_mremap(unsigned long addr, unsigned long old_len, unsigned long new_len, unsigned long flags, unsigned long new_addr);
217 long sys_add_key(const char __user *_type, const char __user *_description, const void __user *_payload, size_t plen, key_serial_t destringid);
218 long sys_request_key(const char __user *_type, const char __user *_description, const char __user *_callout_info, key_serial_t destringid);
219 long sys_keyctl(int cmd, unsigned long arg2, unsigned long arg3, unsigned long arg4, unsigned long arg5);
220 long sys_clone(unsigned long, unsigned long, int __user *, int __user *, unsigned long);
221 long sys_execve(const char __user *filename, const char __user *const __user *argv, const char __user *const __user *envp);
222 long sys_mmap(void *addr, size_t length, int prot, int flags, int fd, off_t offset);
223 long sys_fadvise64(int fd, loff_t offset, size_t len, int advice);
224 long sys_swapon(const char __user *specialfile, int swap_flags);
225 long sys_swapoff(const char __user *specialfile);
226 long sys_mprotect(unsigned long start, size_t len, unsigned long prot);
227 long sys_msync(unsigned long start, size_t len, int flags);
228 long sys_mlock(unsigned long start, size_t len);
229 long sys_munlock(unsigned long start, size_t len);
230 long sys_mlockall(int flags);
231 long sys_munlockall(void);
232 long sys_mincore(unsigned long start, size_t len, unsigned char __user *vec);
233 long sys_madvise(unsigned long start, size_t len, int behavior);
234 long sys_remap_file_pages(unsigned long start, unsigned long size, unsigned long prot, unsigned long pgoff, unsigned long flags);
235 long sys_mbind(unsigned long start, unsigned long len, unsigned long mode, const unsigned long __user *nmask, unsigned long maxnode, unsigned flags);
236 long sys_get_mempolicy(int __user *policy, unsigned long __user *nmask, unsigned long maxnode, unsigned long addr, unsigned long flags);
237 long sys_set_mempolicy(int mode, const unsigned long __user *nmask, unsigned long maxnode);
238 long sys_migrate_pages(pid_t pid, unsigned long maxnode, const unsigned long __user *from, const unsigned long __user *to);
239 long sys_move_pages(pid_t pid, unsigned long nr_pages, const void __user * __user *pages, const int __user *nodes, int __user *status, int flags);
240 long sys_rt_tgsigqueueinfo(pid_t tgid, pid_t pid, int sig, siginfo_t __user *uinfo);
241 long sys_perf_event_open(struct perf_event_attr __user *attr_uptr, pid_t pid, int cpu, int group_fd, unsigned long flags);
242 long sys_accept4(int, struct sockaddr *, int *, int);
243 long sys_recvmmsg(int fd, struct mmsghdr __user *msg, unsigned int vlen, unsigned flags, struct timespec __user *timeout);
// 244 - 259: not implemented on AArch64
260 long sys_wait4(pid_t pid, int *stat_addr, int options, struct rusage *ru);
261 long sys_prlimit64(pid_t pid, unsigned int resource, const struct rlimit64 *new_rlim, struct rlimit64 *old_rlim);
262 long sys_fanotify_init(unsigned int flags, unsigned int event_f_flags);
263 long sys_fanotify_mark(int fanotify_fd, unsigned int flags, u64 mask, int fd, const char __user *pathname);
264 long sys_name_to_handle_at(int dfd, const char __user *name, struct file_handle __user *handle, int __user *mnt_id, int flag);
265 long sys_open_by_handle_at(int mountdirfd, struct file_handle __user *handle, int flags);
266 long sys_clock_adjtime(clockid_t which_clock, struct timex __user *tx);
267 long sys_syncfs(int fd);
268 long sys_setns(int fd, int nstype);
269 long sys_sendmmsg(int fd, struct mmsghdr __user *msg, unsigned int vlen, unsigned flags);
270 long sys_process_vm_readv(pid_t pid, const struct iovec __user *lvec, unsigned long liovcnt, const struct iovec __user *rvec, unsigned long riovcnt, unsigned long flags);
271 long sys_process_vm_writev(pid_t pid, const struct iovec __user *lvec, unsigned long liovcnt, const struct iovec __user *rvec, unsigned long riovcnt, unsigned long flags);
272 long sys_kcmp(pid_t pid1, pid_t pid2, int type, unsigned long idx1, unsigned long idx2);
273 long sys_finit_module(int fd, const char __user *uargs, int flags);
274 long sys_sched_setattr(pid_t pid, struct sched_attr __user *attr, unsigned int flags);
275 long sys_sched_getattr(pid_t pid, struct sched_attr __user *attr, unsigned int size, unsigned int flags);
276 long sys_renameat2(int olddfd, const char *oldname, int newdfd, const char *newname, unsigned int flags);
277 long sys_seccomp(unsigned int op, unsigned int flags, const char __user *uargs);
278 long sys_getrandom(char __user *buf, size_t count, unsigned int flags);
279 long sys_memfd_create(const char __user *uname_ptr, unsigned int flags);
280 long sys_bpf(int cmd, union bpf_attr *attr, unsigned int size);
281 long sys_execveat(int dfd, const char __user *filename, const char __user *const __user *argv, const char __user *const __user *envp, int flags);
282 long sys_userfaultfd(int flags);
283 long sys_membarrier(int cmd, int flags);
284 long sys_mlock2(unsigned long start, size_t len, int flags);
285 long sys_copy_file_range(int fd_in, loff_t __user *off_in, int fd_out, loff_t __user *off_out, size_t len, unsigned int flags);
286 long sys_preadv2(unsigned long fd, const struct iovec *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h, rwf_t flags);
287 long sys_pwritev2(unsigned long fd, const struct iovec *vec, unsigned long vlen, unsigned long pos_l, unsigned long pos_h, rwf_t flags);
288 long sys_pkey_mprotect(unsigned long start, size_t len, unsigned long prot, int pkey);
289 long sys_pkey_alloc(unsigned long flags, unsigned long init_val);
290 long sys_pkey_free(int pkey);
291 long sys_statx(int dfd, const char *path, unsigned flags, unsigned mask, struct statx *buffer);
// TODO: 292 long sys_io_pgetevents_time64
// TODO: 293 long sys_rseq
294 long sys_kexec_file_load (int kernel_fd, int initrd_fd, unsigned long cmdline_len, const char *cmdline, unsigned long flags);
// 295-423: no uses on AArch64
424 long sys_pidfd_send_signal(int pidfd, int sig, siginfo_t *info, unsigned int flags);
// TODO: 425 long sys_io_uring_setup
// TODO: 426 long sys_io_uring_enter
// TODO: 427 long sys_io_uring_register
// TODO: 428 long sys_open_tree
// TODO: 429 long sys_move_mount
// TODO: 430 long sys_fsopen
// TODO: 431 long sys_fsconfig
// TODO: 432 long sys_fsmount
// TODO: 433 long sys_fspick
434 long sys_pidfd_open(pid_t pid, unsigned int flags);
435 long sys_clone3(struct clone_args *cl_args, size_t size);
// TODO: 436 long sys_close_range
437 long sys_openat2(int dirfd, const char *pathname, struct open_how *how, size_t size);
438 long sys_pidfd_getfd(int pidfd, int targetfd, unsigned int flags);
439 long sys_faccessat2(int dirfd, const char *pathname, int mode, int flags);
// TODO: 440 long sys_process_madvise
// TODO: 441 long sys_epoll_pwait2