
; _In_z_, _Out_z_, _Inout_z_:
;     for a NUL terminated array e.g. a string.
; _In_reads_z_(n),_Out_writes_z_(n), _Inout_updates_z_(n):
;     for a NUL terminated array e.g. a string, of known length n bytes.
; _In_reads_(n),_Out_writes_(n),_Inout_updates_(n):
;     for an array of n elements.
; _In_reads_bytes_(n), _Out_writes_bytes_(n), _Inout_updates_bytes(n):
;     for a buffer of n-bytes.

0 int nosys(void);
1 void sys_exit(   int rval);
2 int fork(void);
3 ssize_t read(   int fd,
  _Out_writes_bytes_(nbyte) void *buf,
  size_t nbyte);
4 ssize_t write(   int fd,
  _In_reads_bytes_(nbyte) const void *buf,
  size_t nbyte);
5 int open(   _In_z_ const char *path,
  int flags,
  mode_t mode);
6 int close(   int fd);
7 int wait4(   int pid,
  _Out_opt_ int *status,
  int options,
  _Out_opt_ struct rusage *rusage);
8 int creat(   _In_z_ const char *path,
  int mode);
9 int link(   _In_z_ const char *path,
  _In_z_ const char *link);
10 int unlink(   _In_z_ const char *path);
11 AUE_NULL OBSOL execv
12 int chdir(   _In_z_ const char *path);
13 int fchdir(   int fd);
14 int mknod(   _In_z_ const char *path,
  int mode,
  uint32_t dev);
15 int chmod(   _In_z_ const char *path,
  mode_t mode);
16 int chown(   _In_z_ const char *path,
  int uid,
  int gid);
17 void *break(   _In_ char *nsize);
18 int getfsstat(   _Out_writes_bytes_opt_(bufsize) struct ostatfs *buf,
  long bufsize,
  int mode);
19 long lseek(   int fd,
  long offset,
  int whence);
20 pid_t getpid(void);
21 int mount(   _In_z_ const char *type,
  _In_z_ const char *path,
  int flags,
  _In_opt_ void *data);
22 int unmount(   _In_z_ const char *path,
  int flags);
23 int setuid(   uid_t uid);
24 uid_t getuid(void);
25 uid_t geteuid(void);
26 int ptrace(   int req,
  pid_t pid,
  _Inout_opt_ caddr_t addr,
  int data);
27 int recvmsg(   int s,
  _Inout_ struct msghdr *msg,
  int flags);
28 int sendmsg(   int s,
  _In_ struct msghdr *msg,
  int flags);
29 int recvfrom(   int s,
  _Out_writes_bytes_(len) void *buf,
  size_t len,
  int flags,
  _Out_writes_bytes_opt_(*fromlenaddr) struct sockaddr *from,
  _Inout_opt_ __socklen_t *fromlenaddr);
30 int accept(   int s,
  _Out_writes_bytes_opt_(*anamelen) struct sockaddr *name,
  _Inout_opt_ __socklen_t *anamelen);
31 int getpeername(   int fdes,
  _Out_writes_bytes_(*alen) struct sockaddr *asa,
  _Inout_opt_ __socklen_t *alen);
32 int getsockname(   int fdes,
  _Out_writes_bytes_(*alen) struct sockaddr *asa,
  _Inout_ __socklen_t *alen);
33 int access(   _In_z_ const char *path,
  int amode);
34 int chflags(   _In_z_ const char *path,
  u_long flags);
35 int fchflags(   int fd,
  u_long flags);
36 int sync(void);
37 int kill(   int pid,
  int signum);
38 int stat(   _In_z_ const char *path,
  _Out_ struct ostat *ub);
39 pid_t getppid(void);
40 int lstat(   _In_z_ const char *path,
  _Out_ struct ostat *ub);
41 int dup(   u_int fd);
42 int pipe(void);
43 gid_t getegid(void);
44 int profil(   _Out_writes_bytes_(size) char *samples,
  size_t size,
  size_t offset,
  u_int scale);
45 int ktrace(   _In_z_ const char *fname,
  int ops,
  int facs,
  int pid);
46 int sigaction(   int signum,
  _In_opt_ struct osigaction *nsa,
  _Out_opt_ struct osigaction *osa);
47 gid_t getgid(void);
48 int sigprocmask(   int how,
  osigset_t mask);
; XXX note nonstandard (bogus) calling convention - the libc stub passes
; us the mask, not a pointer to it, and we return the old mask as the
; (int) return value.
49 int getlogin(   _Out_writes_z_(namelen) char *namebuf,
  u_int namelen);
50 int setlogin(   _In_z_ const char *namebuf);
51 int acct(   _In_z_ const char *path);
52 int sigpending(void);
53 int sigaltstack(   _In_opt_ stack_t *ss,
  _Out_opt_ stack_t *oss);
54 int ioctl(   int fd,
  u_long com,
  _Inout_opt_ char *data);
55 int reboot(   int opt);
56 int revoke(   _In_z_ const char *path);
57 int symlink(   _In_z_ const char *path,
  _In_z_ const char *link);
58 ssize_t readlink(   _In_z_ const char *path,
  _Out_writes_z_(count) char *buf,
  size_t count);
59 int execve(   _In_z_ const char *fname,
  _In_z_ char **argv,
  _In_z_ char **envv);
60 int umask(   mode_t newmask);
61 int chroot(   _In_z_ const char *path);
62 int fstat(   int fd,
  _Out_ struct ostat *sb);
63 int getkerninfo(   int op,
  _Out_writes_bytes_opt(   *size) char *where,
  _Inout_opt_ size_t *size,
  int arg);
64 int getpagesize(void);
65 int msync(   _In_ void *addr,
  size_t len,
  int flags);
66 int vfork(void);
67 AUE_NULL OBSOL vread
68 AUE_NULL OBSOL vwrite
69 int sbrk(   int incr);
70 int sstk(   int incr);
71 void *mmap(   _In_ void *addr,
  int len,
  int prot,
  int flags,
  int fd,
  long pos);
72 int vadvise(   int anom);
73 int munmap(   _In_ void *addr,
  size_t len);
74 int mprotect(   _In_ void *addr,
  size_t len,
  int prot);
75 int madvise(   _In_ void *addr,
  size_t len,
  int behav);
76 AUE_NULL OBSOL vhangup
77 AUE_NULL OBSOL vlimit
78 int mincore(   _In_ const void *addr,
  size_t len,
  _Out_writes_bytes_(len/PAGE_SIZE) char *vec);
79 int getgroups(   u_int gidsetsize,
  _Out_writes_opt_(gidsetsize) gid_t *gidset);
80 int setgroups(   u_int gidsetsize,
  _In_reads_(gidsetsize) gid_t *gidset);
81 int getpgrp(void);
82 int setpgid(   int pid,
  int pgid);
83 int setitimer(   u_int which,
  _In_ struct itimerval *itv,
  _Out_opt_ struct itimerval *oitv);
84 int wait(void);
85 int swapon(   _In_z_ const char *name);
86 int getitimer(   u_int which,
  _Out_ struct itimerval *itv);
87 int gethostname(   _Out_writes_z_(len) char *hostname,
  u_int len);
88 int sethostname(   _In_reads_z_(len) char *hostname,
  u_int len);
89 int getdtablesize(void);
90 int dup2(   u_int from,
  u_int to);
91 AUE_NULL UNIMPL getdopt
92 int fcntl(   int fd,
  int cmd,
  long arg);
; XXX should be { int fcntl(int fd, int cmd, ...); ; but we're not ready for varargs.
93 int select(   int nd,
  _Inout_opt_ fd_set *in,
  _Inout_opt_ fd_set *ou,
  _Inout_opt_ fd_set *ex,
  _In_opt_ struct timeval *tv);
94 AUE_NULL UNIMPL setdopt
95 int fsync(   int fd);
96 int setpriority(   int which,
  int who,
  int prio);
97 int socket(   int domain,
  int type,
  int protocol);
98 int connect(   int s,
  _In_reads_bytes_(namelen) const struct sockaddr *name,
  int namelen);
99 int accept(   int s,
  _Out_writes_bytes_opt_(*anamelen) struct sockaddr *name,
  int *anamelen);
100 int getpriority(   int which,
  int who);
101 int send(   int s,
  _In_reads_bytes_(len) const void *buf,
  int len,
  int flags);
102 int recv(   int s,
  _Out_writes_bytes_(len) void *buf,
  int len,
  int flags);
103 int sigreturn(   _In_ struct osigcontext *sigcntxp);
104 int bind(   int s,
  _In_reads_bytes_(namelen) const struct sockaddr *name,
  int namelen);
105 int setsockopt(   int s,
  int level,
  int name,
  _In_reads_bytes_opt_(valsize) const void *val,
  int valsize);
106 int listen(   int s,
  int backlog);
107 AUE_NULL OBSOL vtimes
108 int sigvec(   int signum,
  _In_opt_ struct sigvec *nsv,
  _Out_opt_ struct sigvec *osv);
109 int sigblock(   int mask);
110 int sigsetmask(   int mask);
111 int sigsuspend(   osigset_t mask);
; XXX note nonstandard (bogus) calling convention - the libc stub passes
; us the mask, not a pointer to it.
112 int sigstack(   _In_opt_ struct sigstack *nss,
  _Out_opt_ struct sigstack *oss);
113 int recvmsg(   int s,
  _Inout_ struct omsghdr *msg,
  int flags);
114 int sendmsg(   int s,
  _In_ const void *msg,
  int flags);
115 AUE_NULL OBSOL vtrace
116 int gettimeofday(   _Out_ struct timeval *tp,
  _Out_opt_ struct timezone *tzp);
117 int getrusage(   int who,
  _Out_ struct rusage *rusage);
118 int getsockopt(   int s,
  int level,
  int name,
  _Out_writes_bytes_opt_(*avalsize) void *val,
  _Inout_  int *avalsize);
119 AUE_NULL UNIMPL resuba (BSD/OS 2.x)
120 int readv(   int fd,
  _Inout_updates_(iovcnt) struct iovec *iovp,
  u_int iovcnt);
121 int writev(   int fd,
  _In_reads_opt_(iovcnt) struct iovec *iovp,
  u_int iovcnt);
122 int settimeofday(   _In_ struct timeval *tv,
  _In_opt_ struct timezone *tzp);
123 int fchown(   int fd,
  int uid,
  int gid);
124 int fchmod(   int fd,
  mode_t mode);
125 int recvfrom(   int s,
  _Out_writes_(len) void *buf,
  size_t len,
  int flags,
  _Out_writes_bytes_(*fromlenaddr) struct sockaddr *from,
  _Inout_ int *fromlenaddr);
126 int setreuid(   int ruid,
  int euid);
127 int setregid(   int rgid,
  int egid);
128 int rename(   _In_z_ const char *from,
  _In_z_ const char *to);
129 int truncate(   _In_z_ const char *path,
  long length);
130 int ftruncate(   int fd,
  long length);
131 int flock(   int fd,
  int how);
132 int mkfifo(   _In_z_ const char *path,
  mode_t mode);
133 int sendto(   int s,
  _In_reads_bytes_(len) const void *buf,
  size_t len,
  int flags,
  _In_reads_bytes_opt_(tolen) const struct sockaddr *to,
  int tolen);
134 int shutdown(   int s,
  int how);
135 int socketpair(   int domain,
  int type,
  int protocol,
  _Out_writes_(2) int *rsv);
136 int mkdir(   _In_z_ const char *path,
  mode_t mode);
137 int rmdir(   _In_z_ const char *path);
138 int utimes(   _In_z_ const char *path,
  _In_ struct timeval *tptr);
139 AUE_NULL OBSOL 4.2 sigreturn
140 int adjtime(   _In_ struct timeval *delta,
  _Out_opt_ struct timeval *olddelta);
141 int getpeername(   int fdes,
  _Out_writes_bytes_(*alen) struct sockaddr *asa,
  _Inout_opt_ int *alen);
142 long gethostid(void);
143 int sethostid(   long hostid);
144 int getrlimit(   u_int which,
  _Out_ struct orlimit *rlp);
145 int setrlimit(   u_int which,
  _Out_ struct orlimit *rlp);
146 int killpg(   int pgid,
  int signum);
147 int setsid(void);
148 int quotactl(   _In_z_ const char *path,
  int cmd,
  int uid,
  _In_ void *arg);
149 int quota(void);
150 int getsockname(   int fdec,
  _Out_writes_bytes_(*alen) struct sockaddr *asa,
  _Inout_ int *alen);

; Syscalls 151-180 inclusive are reserved for vendor-specific
; system calls.  (This includes various calls added for compatibity
; with other Unix variants.)
; Some of these calls are now supported by BSD.
151 AUE_NULL UNIMPL sem_lock (BSD/OS 2.x)
152 AUE_NULL UNIMPL sem_wakeup (BSD/OS 2.x)
153 AUE_NULL UNIMPL asyncdaemon (BSD/OS 2.x)
; 154 is initialised by the NLM code, if present.
154 int nlm_syscall(   int debug_level,
  int grace_period,
  int addr_count,
  _In_reads_(addr_count) char **addrs);
; 155 is initialized by the NFS code, if present.
155 int nfssvc(   int flag,
  _In_ void *argp);
156 int getdirentries(   int fd,
  _Out_writes_bytes_(count) char *buf,
  u_int count,
  _Out_ long *basep);
157 int statfs(   _In_z_ const char *path,
  _Out_ struct ostatfs *buf);
158 int fstatfs(   int fd,
  _Out_ struct ostatfs *buf);
159 AUE_NULL UNIMPL nosys
160 int lgetfh(   _In_z_ const char *fname,
  _Out_ struct fhandle *fhp);
161 int getfh(   _In_z_ const char *fname,
  _Out_ struct fhandle *fhp);
162 int getdomainname(   _Out_writes_z_(len) char *domainname,
  int len);
163 int setdomainname(   _In_reads_z_(len) char *domainname,
  int len);
164 int uname(   _Out_ struct utsname *name);
165 int sysarch(   int op,
  _In_z_ char *parms);
166 int rtprio(   int function,
  pid_t pid,
  _Inout_ struct rtprio *rtp);
167 AUE_NULL UNIMPL nosys
168 AUE_NULL UNIMPL nosys
169 int semsys(   int which,
  int a2,
  int a3,
  int a4,
  int a5);
; XXX should be { int semsys(int which, ...); 170 int msgsys(   int which,
  int a2,
  int a3,
  int a4,
  int a5,
  int a6);
; XXX should be { int msgsys(int which, ...); 171 int shmsys(   int which,
  int a2,
  int a3,
  int a4);
; XXX should be { int shmsys(int which, ...); 172 AUE_NULL UNIMPL nosys
173 ssize_t pread(   int fd,
  _Out_writes_bytes_(nbyte) void *buf,
  size_t nbyte,
  int pad,
  off_t offset);
174 ssize_t pwrite(   int fd,
  _In_reads_bytes_(nbyte) const void *buf,
  size_t nbyte,
  int pad,
  off_t offset);
175 int setfib(   int fibnum);
176 int ntp_adjtime(   _Inout_ struct timex *tp);
177 AUE_NULL UNIMPL sfork (BSD/OS 2.x)
178 AUE_NULL UNIMPL getdescriptor (BSD/OS 2.x)
179 AUE_NULL UNIMPL setdescriptor (BSD/OS 2.x)
180 AUE_NULL UNIMPL nosys

; Syscalls 181-199 are used by/reserved for BSD
181 int setgid(   gid_t gid);
182 int setegid(   gid_t egid);
183 int seteuid(   uid_t euid);
184 AUE_NULL OBSOL lfs_bmapv
185 AUE_NULL OBSOL lfs_markv
186 AUE_NULL OBSOL lfs_segclean
187 AUE_NULL OBSOL lfs_segwait
188 int stat(   _In_z_ const char *path,
  _Out_ struct freebsd11_stat *ub);
189 int fstat(   int fd,
  _Out_ struct freebsd11_stat *sb);
190 int lstat(   _In_z_ const char *path,
  _Out_ struct freebsd11_stat *ub);
191 int pathconf(   _In_z_ const char *path,
  int name);
192 int fpathconf(   int fd,
  int name);
193 AUE_NULL UNIMPL nosys
194 int getrlimit(   u_int which,
  _Out_ struct rlimit *rlp);
195 int setrlimit(   u_int which,
  _In_ struct rlimit *rlp);
196 int getdirentries(   int fd,
  _Out_writes_bytes_(count) char *buf,
  u_int count,
  _Out_ long *basep);
197 void *mmap(   _In_ void *addr,
  size_t len,
  int prot,
  int flags,
  int fd,
  int pad,
  off_t pos);
198 AUE_NULL NOPROTO {
 int nosys(void);
199 off_t lseek(   int fd,
  int pad,
  off_t offset,
  int whence);
200 int truncate(   _In_z_ const char *path,
  int pad,
  off_t length);
201 int ftruncate(   int fd,
  int pad,
  off_t length);
202 int __sysctl(   _In_reads_(namelen) int *name,
  u_int namelen,
  _Out_writes_bytes_opt_(*oldlenp) void *old,
  _Inout_opt_ size_t *oldlenp,
  _In_reads_bytes_opt_(newlen) const void *new,
  size_t newlen);
203 int mlock(   _In_ const void *addr,
  size_t len);
204 int munlock(   _In_ const void *addr,
  size_t len);
205 int undelete(   _In_z_ const char *path);
206 int futimes(   int fd,
  _In_reads_(2) struct timeval *tptr);
207 int getpgid(   pid_t pid);
208 AUE_NULL UNIMPL nosys
209 int poll(   _Inout_updates_(nfds) struct pollfd *fds,
  u_int nfds,
  int timeout);
;
; The following are reserved for loadable syscalls
;
210 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
211 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
212 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
213 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
214 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
215 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
216 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
217 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
218 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int
219 AUE_NULL NODEF|NOTSTATIC lkmnosys lkmnosys nosys_args int

220 int __semctl(   int semid,
  int semnum,
  int cmd,
  union semun_old *arg);
221 int semget(   key_t key,
  int nsems,
  int semflg);
222 int semop(   int semid,
  _In_reads_(nsops) struct sembuf *sops,
  size_t nsops);
223 AUE_NULL OBSOL semconfig
224 int msgctl(   int msqid,
  int cmd,
  struct msqid_ds_old *buf);
225 int msgget(   key_t key,
  int msgflg);
226 int msgsnd(   int msqid,
  _In_reads_bytes_(msgsz) const void *msgp,
  size_t msgsz,
  int msgflg);
227 ssize_t msgrcv(   int msqid,
  _Out_writes_bytes_(msgsz) void *msgp,
  size_t msgsz,
  long msgtyp,
  int msgflg);
228 void *shmat(   int shmid,
  _In_ const void *shmaddr,
  int shmflg);
229 int shmctl(   int shmid,
  int cmd,
  struct shmid_ds_old *buf);
230 int shmdt(   _In_ const void *shmaddr);
231 int shmget(   key_t key,
  size_t size,
  int shmflg);
232 int clock_gettime(   clockid_t clock_id,
  _Out_ struct timespec *tp);
233 int clock_settime(   clockid_t clock_id,
  _In_ const struct timespec *tp);
234 int clock_getres(   clockid_t clock_id,
  _Out_ struct timespec *tp);
235 int ktimer_create(   clockid_t clock_id,
  _In_ struct sigevent *evp,
  _Out_ int *timerid);
236 int ktimer_delete(   int timerid);
237 int ktimer_settime(   int timerid,
  int flags,
  _In_ const struct itimerspec *value,
  _Out_opt_ struct itimerspec *ovalue);
238 int ktimer_gettime(   int timerid,
  _Out_ struct itimerspec *value);
239 int ktimer_getoverrun(   int timerid);
240 int nanosleep(   _In_ const struct timespec *rqtp,
  _Out_opt_ struct timespec *rmtp);
241 int ffclock_getcounter(   _Out_ ffcounter *ffcount);
242 int ffclock_setestimate(   _In_ struct ffclock_estimate *cest);
243 int ffclock_getestimate(   _Out_ struct ffclock_estimate *cest);
244 int clock_nanosleep(   clockid_t clock_id,
  int flags,
  _In_ const struct timespec *rqtp,
  _Out_opt_ struct timespec *rmtp);
245-246 AUE_NULL UNIMPL nosys
247 int clock_getcpuclockid2(   id_t id,
  int which,
  _Out_ clockid_t *clock_id);
248 int ntp_gettime(   _Out_ struct ntptimeval *ntvp);
249 AUE_NULL UNIMPL nosys
; syscall numbers initially used in OpenBSD
250 int minherit(   _In_ void *addr,
  size_t len,
  int inherit);
251 int rfork(   int flags);
252 AUE_POLL OBSOL openbsd_poll
253 int issetugid(void);
254 int lchown(   _In_z_ const char *path,
  int uid,
  int gid);
255 int aio_read(   _Inout_ struct aiocb *aiocbp);
256 int aio_write(   _Inout_ struct aiocb *aiocbp);
257 int lio_listio(   int mode,
  _Inout_updates_(nent) struct aiocb * const *acb_list,
  int nent,
  _In_opt_ struct sigevent *sig);
258-271 AUE_NULL UNIMPL nosys
272 int getdents(   int fd,
  _Out_writes_bytes_(count) char *buf,
  size_t count);
273 AUE_NULL UNIMPL nosys
274 int lchmod(   _In_z_ const char *path,
  mode_t mode);
275 AUE_NULL OBSOL netbsd_lchown
276 int lutimes(   _In_z_ const char *path,
  _In_ struct timeval *tptr);
277 AUE_NULL OBSOL netbsd_msync
278 int nstat(   _In_z_ const char *path,
  _Out_ struct nstat *ub);
279 int nfstat(   int fd,
  _Out_ struct nstat *sb);
280 int nlstat(   _In_z_ const char *path,
  _Out_ struct nstat *ub);
281-288 AUE_NULL UNIMPL nosys
289 ssize_t preadv(   int fd,
  _In_reads_(iovcnt) struct iovec *iovp,
  u_int iovcnt,
  off_t offset);
290 ssize_t pwritev(   int fd,
  _In_reads_(iovcnt) struct iovec *iovp,
  u_int iovcnt,
  off_t offset);
291-296 AUE_NULL UNIMPL nosys
297 int fhstatfs(   _In_ const struct fhandle *u_fhp,
  _Out_ struct ostatfs *buf);
298 int fhopen(   _In_ const struct fhandle *u_fhp,
  int flags);
299 int fhstat(   _In_ const struct fhandle *u_fhp,
  _Out_ struct freebsd11_stat *sb);
300 int modnext(   int modid);
301 int modstat(   int modid,
  _Out_ struct module_stat *stat);
302 int modfnext(   int modid);
303 int modfind(   _In_z_ const char *name);
304 int kldload(   _In_z_ const char *file);
305 int kldunload(   int fileid);
306 int kldfind(   _In_z_ const char *file);
307 int kldnext(   int fileid);
308 int kldstat(   int fileid,
  _Out_ struct kld_file_stat *stat);
309 int kldfirstmod(   int fileid);
310 int getsid(   pid_t pid);
311 int setresuid(   uid_t ruid,
  uid_t euid,
  uid_t suid);
312 int setresgid(   gid_t rgid,
  gid_t egid,
  gid_t sgid);
313 AUE_NULL OBSOL signanosleep
314 ssize_t aio_return(   _Inout_ struct aiocb *aiocbp);
315 int aio_suspend(   _Inout_updates_(nent) struct aiocb * const * aiocbp,
  int nent,
  _In_opt_ const struct timespec *timeout);
316 int aio_cancel(   int fd,
  _In_opt_ struct aiocb *aiocbp);
317 int aio_error(   _In_ struct aiocb *aiocbp);
318 int aio_read(   _Inout_  struct oaiocb *aiocbp);
319 int aio_write(   _Inout_ struct oaiocb *aiocbp);
320 int lio_listio(   int mode,
  _Inout_updates_(nent) struct oaiocb * const *acb_list,
  int nent,
  _In_opt_ struct osigevent *sig);
321 int yield(void);
322 AUE_NULL OBSOL thr_sleep
323 AUE_NULL OBSOL thr_wakeup
324 int mlockall(   int how);
325 int munlockall(void); 326 int __getcwd(   _Out_writes_z_(buflen) char *buf,
  size_t buflen);
327 int sched_setparam(   pid_t pid,
  _In_ const struct sched_param *param);
328 int sched_getparam(   pid_t pid,
  _Out_ struct sched_param *param);
329 int sched_setscheduler(   pid_t pid,
  int policy,
  _In_ const struct sched_param *param);
330 int sched_getscheduler(   pid_t pid);
331 int sched_yield(void);
332 int sched_get_priority_max(   int policy);
333 int sched_get_priority_min(   int policy);
334 int sched_rr_get_interval(   pid_t pid,
  _Out_ struct timespec *interval);
335 int utrace(   _In_reads_bytes_(len) const void *addr,
  size_t len);
336 int sendfile(   int fd,
  int s,
  off_t offset,
  size_t nbytes,
  _In_opt_ struct sf_hdtr *hdtr,
  _Out_opt_ off_t *sbytes,
  int flags);
337 int kldsym(   int fileid,
  int cmd,
  _In_ void *data);
338 int jail(   _In_ struct jail *jail);
339 AUE_NULL NOSTD|NOTSTATIC {
 int nnpfs_syscall(   int operation,
  char *a_pathP,
  int a_opcode,
  void *a_paramsP,
  int a_followSymlinks);
340 int sigprocmask(   int how,
  _In_opt_ const sigset_t *set,
  _Out_opt_ sigset_t *oset);
341 int sigsuspend(   _In_ const sigset_t *sigmask);
342 int sigaction(   int sig,
  _In_opt_ const struct sigaction *act,
  _Out_opt_ struct sigaction *oact);
343 int sigpending(   _In_ sigset_t *set);
344 int sigreturn(   _In_ const struct ucontext4 *sigcntxp);
345 int sigtimedwait(   _In_ const sigset_t *set,
  _Out_opt_ siginfo_t *info,
  _In_opt_ const struct timespec *timeout);
346 int sigwaitinfo(   _In_ const sigset_t *set,
  _Out_opt_ siginfo_t *info);
347 int __acl_get_file(   _In_z_ const char *path,
  acl_type_t type,
  _Out_ struct acl *aclp);
348 int __acl_set_file(   _In_z_ const char *path,
  acl_type_t type,
  _In_ struct acl *aclp);
349 int __acl_get_fd(   int filedes,
  acl_type_t type,
  _Out_ struct acl *aclp);
350 int __acl_set_fd(   int filedes,
  acl_type_t type,
  _In_ struct acl *aclp);
351 int __acl_delete_file(   _In_z_ const char *path,
  acl_type_t type);
352 int __acl_delete_fd(   int filedes,
  acl_type_t type);
353 int __acl_aclcheck_file(   _In_z_ const char *path,
  acl_type_t type,
  _In_ struct acl *aclp);
354 int __acl_aclcheck_fd(   int filedes,
  acl_type_t type,
  _In_ struct acl *aclp);
355 int extattrctl(   _In_z_ const char *path,
  int cmd,
  _In_z_opt_ const char *filename,
  int attrnamespace,
  _In_z_ const char *attrname);
356 ssize_t extattr_set_file(   _In_z_ const char *path,
  int attrnamespace,
  _In_z_ const char *attrname,
  _In_reads_bytes_(nbytes) void *data,
  size_t nbytes);
357 ssize_t extattr_get_file(   _In_z_ const char *path,
  int attrnamespace,
  _In_z_ const char *attrname,
  _Out_writes_bytes_(nbytes) void *data,
  size_t nbytes);
358 int extattr_delete_file(   _In_z_ const char *path,
  int attrnamespace,
  _In_z_ const char *attrname);
359 ssize_t aio_waitcomplete(   _Outptr_result_maybenull_ struct aiocb **aiocbp,
  _In_opt_ struct timespec *timeout);
360 int getresuid(   _Out_opt_ uid_t *ruid,
  _Out_opt_ uid_t *euid,
  _Out_opt_ uid_t *suid);
361 int getresgid(   _Out_opt_ gid_t *rgid,
  _Out_opt_ gid_t *egid,
  _Out_opt_ gid_t *sgid);
362 int kqueue(void);
363 int kevent(   int fd,
  _In_reads_opt_(nchanges) struct kevent_freebsd11 *changelist,
  int nchanges,
  _Out_writes_opt_(nevents) struct kevent_freebsd11 *eventlist,
  int nevents,
  _In_opt_ const struct timespec *timeout);
364 AUE_NULL OBSOL __cap_get_proc
365 AUE_NULL OBSOL __cap_set_proc
366 AUE_NULL OBSOL __cap_get_fd
367 AUE_NULL OBSOL __cap_get_file
368 AUE_NULL OBSOL __cap_set_fd
369 AUE_NULL OBSOL __cap_set_file
370 AUE_NULL UNIMPL nosys
371 ssize_t extattr_set_fd(   int fd,
  int attrnamespace,
  _In_z_ const char *attrname,
  _In_reads_bytes_(nbytes) void *data,
  size_t nbytes);
372 ssize_t extattr_get_fd(   int fd,
  int attrnamespace,
  _In_z_ const char *attrname,
  _Out_writes_bytes_(nbytes) void *data,
  size_t nbytes);
373 int extattr_delete_fd(   int fd,
  int attrnamespace,
  _In_z_ const char *attrname);
374 int __setugid(   int flag);
375 AUE_NULL OBSOL nfsclnt
376 int eaccess(   _In_z_ const char *path,
  int amode);
377 AUE_NULL NOSTD|NOTSTATIC {
 int afs3_syscall(   long syscall,
  long parm1,
  long parm2,
  long parm3,
  long parm4,
  long parm5,
  long parm6);
378 int nmount(   _In_reads_(iovcnt) struct iovec *iovp,
  unsigned int iovcnt,
  int flags);
379 AUE_NULL OBSOL kse_exit
380 AUE_NULL OBSOL kse_wakeup
381 AUE_NULL OBSOL kse_create
382 AUE_NULL OBSOL kse_thr_interrupt
383 AUE_NULL OBSOL kse_release
384 int __mac_get_proc(   _In_ struct mac *mac_p);
385 int __mac_set_proc(   _In_ struct mac *mac_p);
386 int __mac_get_fd(   int fd,
  _In_ struct mac *mac_p);
387 int __mac_get_file(   _In_z_ const char *path_p,
  _In_ struct mac *mac_p);
388 int __mac_set_fd(   int fd,
  _In_ struct mac *mac_p);
389 int __mac_set_file(   _In_z_ const char *path_p,
  _In_ struct mac *mac_p);
390 int kenv(   int what,
  _In_z_opt_ const char *name,
  _Inout_updates_opt_(len) char *value,
  int len);
391 int lchflags(   _In_z_ const char *path,
  u_long flags);
392 int uuidgen(   _Out_writes_(count) struct uuid *store,
  int count);
393 int sendfile(   int fd,
  int s,
  off_t offset,
  size_t nbytes,
  _In_opt_ struct sf_hdtr *hdtr,
  _Out_opt_ off_t *sbytes,
  int flags);
394 int mac_syscall(   _In_z_ const char *policy,
  int call,
  _In_opt_ void *arg);
395 int getfsstat(   _Out_writes_bytes_opt_(bufsize) struct freebsd11_statfs *buf,
  long bufsize,
  int mode);
396 int statfs(   _In_z_ const char *path,
  _Out_ struct freebsd11_statfs *buf);
397 int fstatfs(   int fd,
  _Out_ struct freebsd11_statfs *buf);
398 int fhstatfs(   _In_ const struct fhandle *u_fhp,
  _Out_ struct freebsd11_statfs *buf);
399 AUE_NULL UNIMPL nosys
400 int ksem_close(   semid_t id);
401 int ksem_post(   semid_t id);
402 int ksem_wait(   semid_t id);
403 int ksem_trywait(   semid_t id);
404 int ksem_init(   _Out_ semid_t *idp,
  unsigned int value);
405 int ksem_open(   _Out_ semid_t *idp,
  _In_z_ const char *name,
  int oflag,
  mode_t mode,
  unsigned int value);
406 int ksem_unlink(   _In_z_ const char *name);
407 int ksem_getvalue(   semid_t id,
  _Out_ int *val);
408 int ksem_destroy(   semid_t id);
409 int __mac_get_pid(   pid_t pid,
  _In_ struct mac *mac_p);
410 int __mac_get_link(   _In_z_ const char *path_p,
  _In_ struct mac *mac_p);
411 int __mac_set_link(   _In_z_ const char *path_p,
  _In_ struct mac *mac_p);
412 ssize_t extattr_set_link(   _In_z_ const char *path,
  int attrnamespace,
  _In_z_ const char *attrname,
  _In_reads_bytes_(nbytes) void *data,
  size_t nbytes);
413 ssize_t extattr_get_link(   _In_z_ const char *path,
  int attrnamespace,
  _In_z_ const char *attrname,
  _Out_writes_bytes_(nbytes) void *data,
  size_t nbytes);
414 int extattr_delete_link(   _In_z_ const char *path,
  int attrnamespace,
  _In_z_ const char *attrname);
415 int __mac_execve(   _In_z_ const char *fname,
  _In_ char **argv,
  _In_ char **envv,
  _In_ struct mac *mac_p);
416 int sigaction(   int sig,
  _In_opt_ const struct sigaction *act,
  _Out_opt_ struct sigaction *oact);
417 int sigreturn(   _In_ const struct __ucontext *sigcntxp);
418 AUE_NULL UNIMPL __xstat
419 AUE_NULL UNIMPL __xfstat
420 AUE_NULL UNIMPL __xlstat
421 int getcontext(   _Out_ struct __ucontext *ucp);
422 int setcontext(   _In_ const struct __ucontext *ucp);
423 int swapcontext(   _Out_ struct __ucontext *oucp,
  _In_ const struct __ucontext *ucp);
424 int swapoff(   _In_z_ const char *name);
425 int __acl_get_link(   _In_z_ const char *path,
  acl_type_t type,
  _Out_ struct acl *aclp);
426 int __acl_set_link(   _In_z_ const char *path,
  acl_type_t type,
  _In_ struct acl *aclp);
427 int __acl_delete_link(   _In_z_ const char *path,
  acl_type_t type);
428 int __acl_aclcheck_link(   _In_z_ const char *path,
  acl_type_t type,
  _In_ struct acl *aclp);
429 int sigwait(   _In_ const sigset_t *set,
  _Out_ int *sig);
430 int thr_create(   _In_ ucontext_t *ctx,
  _Out_ long *id,
  int flags);
431 void thr_exit(   _Out_opt_ long *state);
432 int thr_self(   _Out_ long *id);
433 int thr_kill(   long id,
  int sig);
434-435 AUE_NULL UNIMPL nosys
436 int jail_attach(   int jid);
437 ssize_t extattr_list_fd(   int fd,
  int attrnamespace,
  _Out_writes_bytes_opt_(nbytes) void *data,
  size_t nbytes);
438 ssize_t extattr_list_file(   _In_z_ const char *path,
  int attrnamespace,
  _Out_writes_bytes_opt_(nbytes) void *data,
  size_t nbytes);
439 ssize_t extattr_list_link(   _In_z_ const char *path,
  int attrnamespace,
  _Out_writes_bytes_opt_(nbytes)
  void *data,
  size_t nbytes);
440 AUE_NULL OBSOL kse_switchin
441 int ksem_timedwait(   semid_t id,
  _In_opt_ const struct timespec *abstime);
442 int thr_suspend(   _In_opt_ const struct timespec *timeout);
443 int thr_wake(   long id);
444 int kldunloadf(   int fileid,
  int flags);
445 int audit(   _In_reads_bytes_(length) const void *record,
  u_int length);
446 int auditon(   int cmd,
  _In_opt_ void *data,
  u_int length);
447 int getauid(   _Out_ uid_t *auid);
448 int setauid(   _In_ uid_t *auid);
449 int getaudit(   _Out_ struct auditinfo *auditinfo);
450 int setaudit(   _In_ struct auditinfo *auditinfo);
451 int getaudit_addr(   _Out_writes_bytes_(length) struct auditinfo_addr *auditinfo_addr,
  u_int length);
452 int setaudit_addr(   _In_reads_bytes_(length) struct auditinfo_addr *auditinfo_addr,
  u_int length);
453 int auditctl(   _In_z_ const char *path);
454 int _umtx_op(   _Inout_ void *obj,
  int op,
  u_long val,
  _In_ void *uaddr1,
  _In_ void *uaddr2);
455 int thr_new(   _In_ struct thr_param *param,
  int param_size);
456 int sigqueue(   pid_t pid,
  int signum,
  _In_ void *value);

457 int kmq_open(   _In_z_ const char *path,
  int flags,
  mode_t mode,
  _In_opt_ const struct mq_attr *attr);
458 int kmq_setattr(   int mqd,
  _In_opt_ const struct mq_attr *attr,
  _Out_opt_ struct mq_attr *oattr);
459 int kmq_timedreceive(   int mqd,
  _Out_writes_bytes_(msg_len) char *msg_ptr,
  size_t msg_len,
  _Out_opt_ unsigned *msg_prio,
  _In_opt_ const struct timespec *abs_timeout);
460 int kmq_timedsend(   int mqd,
  _In_reads_bytes_(msg_len) const char *msg_ptr,
  size_t msg_len,
  unsigned msg_prio,
  _In_opt_ const struct timespec *abs_timeout);
461 int kmq_notify(   int mqd,
  _In_opt_ const struct sigevent *sigev);
462 int kmq_unlink(   _In_z_ const char *path);
463 int abort2(   _In_z_ const char *why,
  int nargs,
  _In_reads_(nargs) void **args);
464 int thr_set_name(   long id,
  _In_z_ const char *name);
465 int aio_fsync(   int op,
  _In_ struct aiocb *aiocbp);
466 int rtprio_thread(   int function,
  lwpid_t lwpid,
  _Inout_ struct rtprio *rtp);
467-468 AUE_NULL UNIMPL nosys
469 AUE_NULL UNIMPL __getpath_fromfd
470 AUE_NULL UNIMPL __getpath_fromaddr
471 int sctp_peeloff(   int sd,
  uint32_t name);
472 int sctp_generic_sendmsg(   int sd,
  _In_reads_bytes_(mlen) void *msg,
  int mlen,
  _In_reads_bytes_(tolen) struct sockaddr *to,
  __socklen_t tolen,
  _In_opt_ struct sctp_sndrcvinfo *sinfo,
  int flags);
473 int sctp_generic_sendmsg_iov(   int sd,
  _In_reads_(iovlen) struct iovec *iov,
  int iovlen,
  _In_reads_bytes_(tolen) struct sockaddr *to,
  __socklen_t tolen,
  _In_opt_ struct sctp_sndrcvinfo *sinfo,
  int flags);
474 int sctp_generic_recvmsg(   int sd,
  _In_reads_(iovlen) struct iovec *iov,
  int iovlen,
  _Out_writes_bytes_(*fromlenaddr) struct sockaddr *from,
  _Out_ __socklen_t *fromlenaddr,
  _In_opt_ struct sctp_sndrcvinfo *sinfo,
  _Out_opt_ int *msg_flags);
475 ssize_t pread(   int fd,
  _Out_writes_bytes_(nbyte) void *buf,
  size_t nbyte,
  off_t offset);
476 ssize_t pwrite(   int fd,
  _In_reads_bytes_(nbyte) const void *buf,
  size_t nbyte,
  off_t offset);
477 void *mmap(   _In_ void *addr,
  size_t len,
  int prot,
  int flags,
  int fd,
  off_t pos);
478 off_t lseek(   int fd,
  off_t offset,
  int whence);
479 int truncate(   _In_z_ const char *path,
  off_t length);
480 int ftruncate(   int fd,
  off_t length);
481 int thr_kill2(   pid_t pid,
  long id,
  int sig);
482 int shm_open(   _In_z_ const char *path,
  int flags,
  mode_t mode);
483 int shm_unlink(   _In_z_ const char *path);
484 int cpuset(   _Out_ cpusetid_t *setid);
485 int cpuset_setid(   cpuwhich_t which,
  id_t id,
  cpusetid_t setid);
486 int cpuset_getid(   cpulevel_t level,
  cpuwhich_t which,
  id_t id,
  _Out_ cpusetid_t *setid);
487 int cpuset_getaffinity(   cpulevel_t level,
  cpuwhich_t which,
  id_t id,
  size_t cpusetsize,
  _Out_ cpuset_t *mask);
488 int cpuset_setaffinity(   cpulevel_t level,
  cpuwhich_t which,
  id_t id,
  size_t cpusetsize,
  _Out_ const cpuset_t *mask);
489 int faccessat(   int fd,
  _In_z_ const char *path,
  int amode,
  int flag);
490 int fchmodat(   int fd,
  _In_z_ const char *path,
  mode_t mode,
  int flag);
491 int fchownat(   int fd,
  _In_z_ const char *path,
  uid_t uid,
  gid_t gid,
  int flag);
492 int fexecve(   int fd,
  _In_ char **argv,
  _In_ char **envv);
493 int fstatat(   int fd,
  _In_z_ const char *path,
  _Out_ struct freebsd11_stat *buf,
  int flag);
494 int futimesat(   int fd,
  _In_z_ const char *path,
  _In_reads_(2) struct timeval *times);
495 int linkat(   int fd1,
  _In_z_ const char *path1,
  int fd2,
  _In_z_ const char *path2,
  int flag);
496 int mkdirat(   int fd,
  _In_z_ const char *path,
  mode_t mode);
497 int mkfifoat(   int fd,
  _In_z_ const char *path,
  mode_t mode);
498 int mknodat(   int fd,
  _In_z_ const char *path,
  mode_t mode,
  uint32_t dev);
; XXX: see the comment for open
499 int openat(   int fd,
  _In_z_ const char *path,
  int flag,
  mode_t mode);
500 ssize_t readlinkat(   int fd,
  _In_z_ const char *path,
  _Out_writes_bytes_(bufsize) char *buf,
  size_t bufsize);
501 int renameat(   int oldfd,
  _In_z_ const char *old,
  int newfd,
  _In_z_ const char *new);
502 int symlinkat(   _In_z_ const char *path1,
  int fd,
  _In_z_ const char *path2);
503 int unlinkat(   int fd,
  _In_z_ const char *path,
  int flag);
504 int posix_openpt(   int flags);
; 505 is initialised by the kgssapi code, if present.
505 int gssd_syscall(   _In_z_ const char *path);
506 int jail_get(   _In_reads_(iovcnt) struct iovec *iovp,
  unsigned int iovcnt,
  int flags);
507 int jail_set(   _In_reads_(iovcnt) struct iovec *iovp,
  unsigned int iovcnt,
  int flags);
508 int jail_remove(   int jid);
509 int closefrom(   int lowfd);
510 int __semctl(   int semid,
  int semnum,
  int cmd,
  _Inout_ union semun *arg);
511 int msgctl(   int msqid,
  int cmd,
  _Inout_opt_ struct msqid_ds *buf);
512 int shmctl(   int shmid,
  int cmd,
  _Inout_opt_ struct shmid_ds *buf);
513 int lpathconf(   _In_z_ const char *path,
  int name);
514 AUE_NULL OBSOL cap_new
515 int __cap_rights_get(   int version,
  int fd,
  _Out_ cap_rights_t *rightsp);
516 int cap_enter(void);
517 int cap_getmode(   _Out_ u_int *modep);
518 int pdfork(   _Out_ int *fdp,
  int flags);
519 int pdkill(   int fd,
  int signum);
520 int pdgetpid(   int fd,
  _Out_ pid_t *pidp);
521 AUE_PDWAIT UNIMPL pdwait4
522 int pselect(   int nd,
  _Inout_opt_ fd_set *in,
  _Inout_opt_ fd_set *ou,
  _Inout_opt_ fd_set *ex,
  _In_opt_ const struct timespec *ts,
  _In_opt_ const sigset_t *sm);
523 int getloginclass(   _Out_writes_z_(namelen) char *namebuf,
  size_t namelen);
524 int setloginclass(   _In_z_ const char *namebuf);
525 int rctl_get_racct(   _In_reads_bytes_(inbuflen) const void *inbufp,
  size_t inbuflen,
  _Out_writes_bytes_(outbuflen) void *outbufp,
  size_t outbuflen);
526 int rctl_get_rules(   _In_reads_bytes_(inbuflen) const void *inbufp,
  size_t inbuflen,
  _Out_writes_bytes_(outbuflen) void *outbufp,
  size_t outbuflen);
527 int rctl_get_limits(   _In_reads_bytes_(inbuflen) const void *inbufp,
  size_t inbuflen,
  _Out_writes_bytes_(outbuflen) void *outbufp,
  size_t outbuflen);
528 int rctl_add_rule(   _In_reads_bytes_(inbuflen) const void *inbufp,
  size_t inbuflen,
  _Out_writes_bytes_(outbuflen) void *outbufp,
  size_t outbuflen);
529 int rctl_remove_rule(   _In_reads_bytes_(inbuflen) const void *inbufp,
  size_t inbuflen,
  _Out_writes_bytes_(outbuflen) void *outbufp,
  size_t outbuflen);
530 int posix_fallocate(   int fd,
  off_t offset,
  off_t len);
531 int posix_fadvise(   int fd,
  off_t offset,
  off_t len,
  int advice);
532 int wait6(   idtype_t idtype,
  id_t id,
  _Out_opt_ int *status,
  int options,
  _Out_opt_ struct __wrusage *wrusage,
  _Out_opt_ siginfo_t *info);
533 int cap_rights_limit(   int fd,
  _In_ cap_rights_t *rightsp);
534 int cap_ioctls_limit(   int fd,
  _In_reads_(ncmds) const u_long *cmds,
  size_t ncmds);
535 ssize_t cap_ioctls_get(   int fd,
  _Out_writes_(maxcmds) u_long *cmds,
  size_t maxcmds);
536 int cap_fcntls_limit(   int fd,
  uint32_t fcntlrights);
537 int cap_fcntls_get(   int fd,
  _Out_ uint32_t *fcntlrightsp);
538 int bindat(   int fd,
  int s,
  _In_reads_bytes_(namelen) const struct sockaddr *name,
  int namelen);
539 int connectat(   int fd,
  int s,
  _In_reads_bytes_(namelen) const struct sockaddr *name,
  int namelen);
540 int chflagsat(   int fd,
  _In_z_ const char *path,
  u_long flags,
  int atflag);
541 int accept4(   int s,
  _Out_writes_bytes_opt_(*anamelen) struct sockaddr *name,
  _Inout_opt_ __socklen_t *anamelen,
  int flags);
542 int pipe2(   _Out_writes_(2) int *fildes,
  int flags);
543 int aio_mlock(   _In_ struct aiocb *aiocbp);
544 int procctl(   idtype_t idtype,
  id_t id,
  int com,
  _In_opt_ void *data);
545 int ppoll(   _Inout_updates_(nfds) struct pollfd *fds,
  u_int nfds,
  _In_opt_ const struct timespec *ts,
  _In_opt_ const sigset_t *set);
546 int futimens(   int fd,
  _In_reads_(2) struct timespec *times);
547 int utimensat(   int fd,
  _In_z_ const char *path,
  _In_reads_(2) struct timespec *times,
  int flag);
548 AUE_NULL OBSOL numa_getaffinity
549 AUE_NULL OBSOL numa_setaffinity
550 int fdatasync(   int fd);
551 int fstat(   int fd,
  _Out_ struct stat *sb);
552 int fstatat(   int fd,
  _In_z_ const char *path,
  _Out_ struct stat *buf,
  int flag);
553 int fhstat(   _In_ const struct fhandle *u_fhp,
  _Out_ struct stat *sb);
554 ssize_t getdirentries(   int fd,
  _Out_writes_bytes_(count) char *buf,
  size_t count,
  _Out_ off_t *basep);
555 int statfs(   _In_z_ const char *path,
  _Out_ struct statfs *buf);
556 int fstatfs(   int fd,
  _Out_ struct statfs *buf);
557 int getfsstat(   _Out_writes_bytes_opt_(bufsize) struct statfs *buf,
  long bufsize,
  int mode);
558 int fhstatfs(   _In_ const struct fhandle *u_fhp,
  _Out_ struct statfs *buf);
559 int mknodat(   int fd,
  _In_z_ const char *path,
  mode_t mode,
  dev_t dev);
560 int kevent(   int fd,
  _In_reads_opt_(nchanges) struct kevent *changelist,
  int nchanges,
  _Out_writes_opt_(nevents) struct kevent *eventlist,
  int nevents,
  _In_opt_ const struct timespec *timeout);
561 int cpuset_getdomain(   cpulevel_t level,
  cpuwhich_t which,
  id_t id,
  size_t domainsetsize,
  _Out_writes_bytes_(domainsetsize) domainset_t *mask,
  _Out_ int *policy);
562 int cpuset_setdomain(   cpulevel_t level,
  cpuwhich_t which,
  id_t id,
  size_t domainsetsize,
  _In_ domainset_t *mask,
  int policy);
563 int getrandom(   _Out_writes_bytes_(buflen) void *buf,
  size_t buflen,
  unsigned int flags);
564 int getfhat(   int fd,
  _In_z_ char *path,
  _Out_ struct fhandle *fhp,
  int flags);
565 int fhlink(   _In_ struct fhandle *fhp,
  _In_z_ const char *to);
566 int fhlinkat(   _In_ struct fhandle *fhp,
  int tofd,
  _In_z_ const char *to,);
567 int fhreadlink(   _In_ struct fhandle *fhp,
  _Out_writes_(bufsize) char *buf,
  size_t bufsize);
568 int funlinkat(   int dfd,
  _In_z_ const char *path,
  int fd,
  int flag);
569 ssize_t copy_file_range(   int infd,
  _Inout_opt_ off_t *inoffp,
  int outfd,
  _Inout_opt_ off_t *outoffp,
  size_t len,
  unsigned int flags);
570 int __sysctlbyname(   _In_reads_(namelen) const char *name,
  size_t namelen,
  _Out_writes_bytes_opt_(*oldlenp) void *old,
  _Inout_opt_ size_t *oldlenp,
  _In_reads_bytes_opt_(newlen) void *new,
  size_t newlen);
571 int shm_open2(   _In_z_ const char *path,
  int flags,
  mode_t mode,
  int shmflags,
  _In_z_ const char *name);
572 int shm_rename(   _In_z_ const char *path_from,
  _In_z_ const char *path_to,
  int flags);
573 int sigfastblock(   int cmd,
  _Inout_opt_ uint32_t *ptr);
574 int __realpathat(   int fd,
  _In_z_ const char *path,
  _Out_writes_z_(size) char *buf,
  size_t size,
  int flags);
575 int close_range(   u_int lowfd,
  u_int highfd,
  int flags);
; 576 is initialised by the krpc code, if present.
576 int rpctls_syscall(   int op,
  _In_z_ const char *path);