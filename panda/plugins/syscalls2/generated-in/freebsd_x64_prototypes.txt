0 int nosys(void);
1 void sys_exit(int rval);
2 int fork(void);
3 ssize_t read(int fd, void *buf, size_t nbyte);
4 ssize_t write(int fd, const void *buf, size_t nbyte);
5 int open(const char *path, int flags, mode_t mode);
6 int close(int fd);
7 int wait4(int pid, int *status, int options, struct rusage *rusage);
8 int creat(const char *path, int mode);
9 int link(const char *path, const char *link);
10 int unlink(const char *path);

12 int chdir(const char *path);
13 int fchdir(int fd);
14 int mknod(const char *path, int mode, uint32_t dev);
15 int chmod(const char *path, mode_t mode);
16 int chown(const char *path, int uid, int gid);
17 void *break(char *nsize);
18 int getfsstat(struct ostatfs *buf, long bufsize, int mode);
19 long lseek(int fd, long offset, int whence);
20 pid_t getpid(void);
21 int mount(const char *type, const char *path, int flags, void *data);
22 int unmount(const char *path, int flags);
23 int setuid(uid_t uid);
24 uid_t getuid(void);
25 uid_t geteuid(void);
26 int ptrace(int req, pid_t pid, caddr_t addr, int data);
27 int recvmsg(int s, struct msghdr *msg, int flags);
28 int sendmsg(int s, struct msghdr *msg, int flags);
29 int recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, __socklen_t *fromlenaddr);
30 int accept(int s, struct sockaddr *name, __socklen_t *anamelen);
31 int getpeername(int fdes, struct sockaddr *asa, __socklen_t *alen);
32 int getsockname(int fdes, struct sockaddr *asa, __socklen_t *alen);
33 int access(const char *path, int amode);
34 int chflags(const char *path, u_long flags);
35 int fchflags(int fd, u_long flags);
36 int sync(void);
37 int kill(int pid, int signum);
38 int stat(const char *path, struct ostat *ub);
39 pid_t getppid(void);
40 int lstat(const char *path, struct ostat *ub);
41 int dup(u_int fd);
42 int pipe(void);
43 gid_t getegid(void);
44 int profil(char *samples, size_t size, size_t offset, u_int scale);
45 int ktrace(const char *fname, int ops, int facs, int pid);
46 int sigaction(int signum, struct osigaction *nsa, struct osigaction *osa);
47 gid_t getgid(void);
48 int sigprocmask(int how, osigset_t mask);
49 int getlogin(char *namebuf, u_int namelen);
50 int setlogin(const char *namebuf);
51 int acct(const char *path);
52 int sigpending(void);
53 int sigaltstack(stack_t *ss, stack_t *oss);
54 int ioctl(int fd, u_long com, char *data);
55 int reboot(int opt);
56 int revoke(const char *path);
57 int symlink(const char *path, const char *link);
58 ssize_t readlink(const char *path, char *buf, size_t count);
59 int execve(const char *fname, char **argv, char **envv);
60 int umask(mode_t newmask);
61 int chroot(const char *path);
62 int fstat(int fd, struct ostat *sb);
63 int getkerninfo(int op, char *where, size_t *size, int arg);
64 int getpagesize(void);
65 int msync(void *addr, size_t len, int flags);
66 int vfork(void);

69 int sbrk(int incr);
70 int sstk(int incr);
71 void *mmap(void *addr, int len, int prot, int flags, int fd, long pos);
72 int vadvise(int anom);
73 int munmap(void *addr, size_t len);
74 int mprotect(void *addr, size_t len, int prot);
75 int madvise(void *addr, size_t len, int behav);

78 int mincore(const void *addr, size_t len, char *vec);
79 int getgroups(u_int gidsetsize, gid_t *gidset);
80 int setgroups(u_int gidsetsize, gid_t *gidset);
81 int getpgrp(void);
82 int setpgid(int pid, int pgid);
83 int setitimer(u_int which, struct itimerval *itv, struct itimerval *oitv);
84 int wait(void);
85 int swapon(const char *name);
86 int getitimer(u_int which, struct itimerval *itv);
87 int gethostname(char *hostname, u_int len);
88 int sethostname(char *hostname, u_int len);
89 int getdtablesize(void);
90 int dup2(u_int from, u_int to);

92 int fcntl(int fd, int cmd, long arg);
93 int select(int nd, fd_set *in, fd_set *ou, fd_set *ex, struct timeval *tv);

95 int fsync(int fd);
96 int setpriority(int which, int who, int prio);
97 int socket(int domain, int type, int protocol);
98 int connect(int s, const struct sockaddr *name, int namelen);
99 int accept(int s, struct sockaddr *name, int *anamelen);
100 int getpriority(int which, int who);
101 int send(int s, const void *buf, int len, int flags);
102 int recv(int s, void *buf, int len, int flags);
103 int sigreturn(struct osigcontext *sigcntxp);
104 int bind(int s, const struct sockaddr *name, int namelen);
105 int setsockopt(int s, int level, int name, const void *val, int valsize);
106 int listen(int s, int backlog);

108 int sigvec(int signum, struct sigvec *nsv, struct sigvec *osv);
109 int sigblock(int mask);
110 int sigsetmask(int mask);
111 int sigsuspend(osigset_t mask);
112 int sigstack(struct sigstack *nss, struct sigstack *oss);
113 int recvmsg(int s, struct omsghdr *msg, int flags);
114 int sendmsg(int s, const void *msg, int flags);

116 int gettimeofday(struct timeval *tp, struct timezone *tzp);
117 int getrusage(int who, struct rusage *rusage);
118 int getsockopt(int s, int level, int name, void *val,  int *avalsize);

120 int readv(int fd, struct iovec *iovp, u_int iovcnt);
121 int writev(int fd, struct iovec *iovp, u_int iovcnt);
122 int settimeofday(struct timeval *tv, struct timezone *tzp);
123 int fchown(int fd, int uid, int gid);
124 int fchmod(int fd, mode_t mode);
125 int recvfrom(int s, void *buf, size_t len, int flags, struct sockaddr *from, int *fromlenaddr);
126 int setreuid(int ruid, int euid);
127 int setregid(int rgid, int egid);
128 int rename(const char *from, const char *to);
129 int truncate(const char *path, long length);
130 int ftruncate(int fd, long length);
131 int flock(int fd, int how);
132 int mkfifo(const char *path, mode_t mode);
133 int sendto(int s, const void *buf, size_t len, int flags, const struct sockaddr *to, int tolen);
134 int shutdown(int s, int how);
135 int socketpair(int domain, int type, int protocol, int *rsv);
136 int mkdir(const char *path, mode_t mode);
137 int rmdir(const char *path);
138 int utimes(const char *path, struct timeval *tptr);

140 int adjtime(struct timeval *delta, struct timeval *olddelta);
141 int getpeername(int fdes, struct sockaddr *asa, int *alen);
142 long gethostid(void);
143 int sethostid(long hostid);
144 int getrlimit(u_int which, struct orlimit *rlp);
145 int setrlimit(u_int which, struct orlimit *rlp);
146 int killpg(int pgid, int signum);
147 int setsid(void);
148 int quotactl(const char *path, int cmd, int uid, void *arg);
149 int quota(void);
150 int getsockname(int fdec, struct sockaddr *asa, int *alen);

154 int nlm_syscall(int debug_level, int grace_period, int addr_count, char **addrs);
155 int nfssvc(int flag, void *argp);
156 int getdirentries(int fd, char *buf, u_int count, long *basep);
157 int statfs(const char *path, struct ostatfs *buf);
158 int fstatfs(int fd, struct ostatfs *buf);

160 int lgetfh(const char *fname, struct fhandle *fhp);
161 int getfh(const char *fname, struct fhandle *fhp);
162 int getdomainname(char *domainname, int len);
163 int setdomainname(char *domainname, int len);
164 int uname(struct utsname *name);
165 int sysarch(int op, char *parms);
166 int rtprio(int function, pid_t pid, struct rtprio *rtp);

169 int semsys(int which, int a2, int a3, int a4, int a5);
173 ssize_t pread(int fd, void *buf, size_t nbyte, int pad, off_t offset);
174 ssize_t pwrite(int fd, const void *buf, size_t nbyte, int pad, off_t offset);
175 int setfib(int fibnum);
176 int ntp_adjtime(struct timex *tp);

181 int setgid(gid_t gid);
182 int setegid(gid_t egid);
183 int seteuid(uid_t euid);

188 int stat(const char *path, struct freebsd11_stat *ub);
189 int fstat(int fd, struct freebsd11_stat *sb);
190 int lstat(const char *path, struct freebsd11_stat *ub);
191 int pathconf(const char *path, int name);
192 int fpathconf(int fd, int name);

194 int getrlimit(u_int which, struct rlimit *rlp);
195 int setrlimit(u_int which, struct rlimit *rlp);
196 int getdirentries(int fd, char *buf, u_int count, long *basep);
197 void *mmap(void *addr, size_t len, int prot, int flags, int fd, int pad, off_t pos);
198 int nosys(void);
199 off_t lseek(int fd, int pad, off_t offset, int whence);
200 int truncate(const char *path, int pad, off_t length);
201 int ftruncate(int fd, int pad, off_t length);
202 int __sysctl(int *name, u_int namelen, void *old, size_t *oldlenp, const void *new, size_t newlen);
203 int mlock(const void *addr, size_t len);
204 int munlock(const void *addr, size_t len);
205 int undelete(const char *path);
206 int futimes(int fd, struct timeval *tptr);
207 int getpgid(pid_t pid);
209 int poll(struct pollfd *fds, u_int nfds, int timeout);

220 int __semctl(int semid, int semnum, int cmd, union semun_old *arg);
221 int semget(key_t key, int nsems, int semflg);
222 int semop(int semid, struct sembuf *sops, size_t nsops);

224 int msgctl(int msqid, int cmd, struct msqid_ds_old *buf);
225 int msgget(key_t key, int msgflg);
226 int msgsnd(int msqid, const void *msgp, size_t msgsz, int msgflg);
227 ssize_t msgrcv(int msqid, void *msgp, size_t msgsz, long msgtyp, int msgflg);
228 void *shmat(int shmid, const void *shmaddr, int shmflg);
229 int shmctl(int shmid, int cmd, struct shmid_ds_old *buf);
230 int shmdt(const void *shmaddr);
231 int shmget(key_t key, size_t size, int shmflg);
232 int clock_gettime(clockid_t clock_id, struct timespec *tp);
233 int clock_settime(clockid_t clock_id, const struct timespec *tp);
234 int clock_getres(clockid_t clock_id, struct timespec *tp);
235 int ktimer_create(clockid_t clock_id, struct sigevent *evp, int *timerid);
236 int ktimer_delete(int timerid);
237 int ktimer_settime(int timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue);
238 int ktimer_gettime(int timerid, struct itimerspec *value);
239 int ktimer_getoverrun(int timerid);
240 int nanosleep(const struct timespec *rqtp, struct timespec *rmtp);
241 int ffclock_getcounter(ffcounter *ffcount);
242 int ffclock_setestimate(struct ffclock_estimate *cest);
243 int ffclock_getestimate(struct ffclock_estimate *cest);
244 int clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp);

247 int clock_getcpuclockid2(id_t id, int which, clockid_t *clock_id);
248 int ntp_gettime(struct ntptimeval *ntvp);

250 int minherit(void *addr, size_t len, int inherit);
251 int rfork(int flags);
252 AUE_POLL OBSOL openbsd_poll
253 int issetugid(void);
254 int lchown(const char *path, int uid, int gid);
255 int aio_read(struct aiocb *aiocbp);
256 int aio_write(struct aiocb *aiocbp);
257 int lio_listio(int mode, struct aiocb * const *acb_list, int nent, struct sigevent *sig);

272 int getdents(int fd, char *buf, size_t count);

274 int lchmod(const char *path, mode_t mode);

276 int lutimes(const char *path, struct timeval *tptr);

278 int nstat(const char *path, struct nstat *ub);
279 int nfstat(int fd, struct nstat *sb);
280 int nlstat(const char *path, struct nstat *ub);

289 ssize_t preadv(int fd, struct iovec *iovp, u_int iovcnt, off_t offset);
290 ssize_t pwritev(int fd, struct iovec *iovp, u_int iovcnt, off_t offset);

297 int fhstatfs(const struct fhandle *u_fhp, struct ostatfs *buf);
298 int fhopen(const struct fhandle *u_fhp, int flags);
299 int fhstat(const struct fhandle *u_fhp, struct freebsd11_stat *sb);
300 int modnext(int modid);
301 int modstat(int modid, struct module_stat *stat);
302 int modfnext(int modid);
303 int modfind(const char *name);
304 int kldload(const char *file);
305 int kldunload(int fileid);
306 int kldfind(const char *file);
307 int kldnext(int fileid);
308 int kldstat(int fileid, struct kld_file_stat *stat);
309 int kldfirstmod(int fileid);
310 int getsid(pid_t pid);
311 int setresuid(uid_t ruid, uid_t euid, uid_t suid);
312 int setresgid(gid_t rgid, gid_t egid, gid_t sgid);

314 ssize_t aio_return(struct aiocb *aiocbp);
315 int aio_suspend(struct aiocb * const * aiocbp, int nent, const struct timespec *timeout);
316 int aio_cancel(int fd, struct aiocb *aiocbp);
317 int aio_error(struct aiocb *aiocbp);
318 int aio_read( struct oaiocb *aiocbp);
319 int aio_write(struct oaiocb *aiocbp);
320 int lio_listio(int mode, struct oaiocb * const *acb_list, int nent, struct osigevent *sig);
321 int yield(void);

324 int mlockall(int how);
325 int munlockall(void); 326 int __getcwd(char *buf, size_t buflen);
327 int sched_setparam(pid_t pid, const struct sched_param *param);
328 int sched_getparam(pid_t pid, struct sched_param *param);
329 int sched_setscheduler(pid_t pid, int policy, const struct sched_param *param);
330 int sched_getscheduler(pid_t pid);
331 int sched_yield(void);
332 int sched_get_priority_max(int policy);
333 int sched_get_priority_min(int policy);
334 int sched_rr_get_interval(pid_t pid, struct timespec *interval);
335 int utrace(const void *addr, size_t len);
336 int sendfile(int fd, int s, off_t offset, size_t nbytes, struct sf_hdtr *hdtr, off_t *sbytes, int flags);
337 int kldsym(int fileid, int cmd, void *data);
338 int jail(struct jail *jail);

339 int nnpfs_syscall(int operation, char *a_pathP, int a_opcode, void *a_paramsP, int a_followSymlinks);
340 int sigprocmask(int how, const sigset_t *set, sigset_t *oset);
341 int sigsuspend(const sigset_t *sigmask);
342 int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);
343 int sigpending(sigset_t *set);
344 int sigreturn(const struct ucontext4 *sigcntxp);
345 int sigtimedwait(const sigset_t *set, siginfo_t *info, const struct timespec *timeout);
346 int sigwaitinfo(const sigset_t *set, siginfo_t *info);
347 int __acl_get_file(const char *path, acl_type_t type, struct acl *aclp);
348 int __acl_set_file(const char *path, acl_type_t type, struct acl *aclp);
349 int __acl_get_fd(int filedes, acl_type_t type, struct acl *aclp);
350 int __acl_set_fd(int filedes, acl_type_t type, struct acl *aclp);
351 int __acl_delete_file(const char *path, acl_type_t type);
352 int __acl_delete_fd(int filedes, acl_type_t type);
353 int __acl_aclcheck_file(const char *path, acl_type_t type, struct acl *aclp);
354 int __acl_aclcheck_fd(int filedes, acl_type_t type, struct acl *aclp);
355 int extattrctl(const char *path, int cmd, const char *filename, int attrnamespace, const char *attrname);
356 ssize_t extattr_set_file(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes);
357 ssize_t extattr_get_file(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes);
358 int extattr_delete_file(const char *path, int attrnamespace, const char *attrname);
359 ssize_t aio_waitcomplete(struct aiocb **aiocbp, struct timespec *timeout);
360 int getresuid(uid_t *ruid, uid_t *euid, uid_t *suid);
361 int getresgid(gid_t *rgid, gid_t *egid, gid_t *sgid);
362 int kqueue(void);
363 int kevent(int fd, struct kevent_freebsd11 *changelist, int nchanges, struct kevent_freebsd11 *eventlist, int nevents, const struct timespec *timeout);

371 ssize_t extattr_set_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes);
372 ssize_t extattr_get_fd(int fd, int attrnamespace, const char *attrname, void *data, size_t nbytes);
373 int extattr_delete_fd(int fd, int attrnamespace, const char *attrname);
374 int __setugid(int flag);

376 int eaccess(const char *path, int amode);
377 int afs3_syscall(long syscall, long parm1, long parm2, long parm3, long parm4, long parm5, long parm6);
378 int nmount(struct iovec *iovp, unsigned int iovcnt, int flags);

384 int __mac_get_proc(struct mac *mac_p);
385 int __mac_set_proc(struct mac *mac_p);
386 int __mac_get_fd(int fd, struct mac *mac_p);
387 int __mac_get_file(const char *path_p, struct mac *mac_p);
388 int __mac_set_fd(int fd, struct mac *mac_p);
389 int __mac_set_file(const char *path_p, struct mac *mac_p);
390 int kenv(int what, const char *name, char *value, int len);
391 int lchflags(const char *path, u_long flags);
392 int uuidgen(struct uuid *store, int count);
393 int sendfile(int fd, int s, off_t offset, size_t nbytes, struct sf_hdtr *hdtr, off_t *sbytes, int flags);
394 int mac_syscall(const char *policy, int call, void *arg);
395 int getfsstat(struct freebsd11_statfs *buf, long bufsize, int mode);
396 int statfs(const char *path, struct freebsd11_statfs *buf);
397 int fstatfs(int fd, struct freebsd11_statfs *buf);
398 int fhstatfs(const struct fhandle *u_fhp, struct freebsd11_statfs *buf);

400 int ksem_close(semid_t id);
401 int ksem_post(semid_t id);
402 int ksem_wait(semid_t id);
403 int ksem_trywait(semid_t id);
404 int ksem_init(semid_t *idp, unsigned int value);
405 int ksem_open(semid_t *idp, const char *name, int oflag, mode_t mode, unsigned int value);
406 int ksem_unlink(const char *name);
407 int ksem_getvalue(semid_t id, int *val);
408 int ksem_destroy(semid_t id);
409 int __mac_get_pid(pid_t pid, struct mac *mac_p);
410 int __mac_get_link(const char *path_p, struct mac *mac_p);
411 int __mac_set_link(const char *path_p, struct mac *mac_p);
412 ssize_t extattr_set_link(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes);
413 ssize_t extattr_get_link(const char *path, int attrnamespace, const char *attrname, void *data, size_t nbytes);
414 int extattr_delete_link(const char *path, int attrnamespace, const char *attrname);
415 int __mac_execve(const char *fname, char **argv, char **envv, struct mac *mac_p);
416 int sigaction(int sig, const struct sigaction *act, struct sigaction *oact);
417 int sigreturn(const struct __ucontext *sigcntxp);

421 int getcontext(struct __ucontext *ucp);
422 int setcontext(const struct __ucontext *ucp);
423 int swapcontext(struct __ucontext *oucp, const struct __ucontext *ucp);
424 int swapoff(const char *name);
425 int __acl_get_link(const char *path, acl_type_t type, struct acl *aclp);
426 int __acl_set_link(const char *path, acl_type_t type, struct acl *aclp);
427 int __acl_delete_link(const char *path, acl_type_t type);
428 int __acl_aclcheck_link(const char *path, acl_type_t type, struct acl *aclp);
429 int sigwait(const sigset_t *set, int *sig);
430 int thr_create(ucontext_t *ctx, long *id, int flags);
431 void thr_exit(long *state);
432 int thr_self(long *id);
433 int thr_kill(long id, int sig);

436 int jail_attach(int jid);
437 ssize_t extattr_list_fd(int fd, int attrnamespace, void *data, size_t nbytes);
438 ssize_t extattr_list_file(const char *path, int attrnamespace, void *data, size_t nbytes);
439 ssize_t extattr_list_link(const char *path, int attrnamespace, void *data, size_t nbytes);

441 int ksem_timedwait(semid_t id, const struct timespec *abstime);
442 int thr_suspend(const struct timespec *timeout);
443 int thr_wake(long id);
444 int kldunloadf(int fileid, int flags);
445 int audit(const void *record, u_int length);
446 int auditon(int cmd, void *data, u_int length);
447 int getauid(uid_t *auid);
448 int setauid(uid_t *auid);
449 int getaudit(struct auditinfo *auditinfo);
450 int setaudit(struct auditinfo *auditinfo);
451 int getaudit_addr(struct auditinfo_addr *auditinfo_addr, u_int length);
452 int setaudit_addr(struct auditinfo_addr *auditinfo_addr, u_int length);
453 int auditctl(const char *path);
454 int _umtx_op(void *obj, int op, u_long val, void *uaddr1, void *uaddr2);
455 int thr_new(struct thr_param *param, int param_size);
456 int sigqueue(pid_t pid, int signum, void *value);

457 int kmq_open(const char *path, int flags, mode_t mode, const struct mq_attr *attr);
458 int kmq_setattr(int mqd, const struct mq_attr *attr, struct mq_attr *oattr);
459 int kmq_timedreceive(int mqd, char *msg_ptr, size_t msg_len, unsigned *msg_prio, const struct timespec *abs_timeout);
460 int kmq_timedsend(int mqd, const char *msg_ptr, size_t msg_len, unsigned msg_prio, const struct timespec *abs_timeout);
461 int kmq_notify(int mqd, const struct sigevent *sigev);
462 int kmq_unlink(const char *path);
463 int abort2(const char *why, int nargs, void **args);
464 int thr_set_name(long id, const char *name);
465 int aio_fsync(int op, struct aiocb *aiocbp);
466 int rtprio_thread(int function, lwpid_t lwpid, struct rtprio *rtp);

471 int sctp_peeloff(int sd, uint32_t name);
472 int sctp_generic_sendmsg(int sd, void *msg, int mlen, struct sockaddr *to, __socklen_t tolen, struct sctp_sndrcvinfo *sinfo, int flags);
473 int sctp_generic_sendmsg_iov(int sd, struct iovec *iov, int iovlen, struct sockaddr *to, __socklen_t tolen, struct sctp_sndrcvinfo *sinfo, int flags);
474 int sctp_generic_recvmsg(int sd, struct iovec *iov, int iovlen, struct sockaddr *from, __socklen_t *fromlenaddr, struct sctp_sndrcvinfo *sinfo, int *msg_flags);
475 ssize_t pread(int fd, void *buf, size_t nbyte, off_t offset);
476 ssize_t pwrite(int fd, const void *buf, size_t nbyte, off_t offset);
477 void *mmap(void *addr, size_t len, int prot, int flags, int fd, off_t pos);
478 off_t lseek(int fd, off_t offset, int whence);
479 int truncate(const char *path, off_t length);
480 int ftruncate(int fd, off_t length);
481 int thr_kill2(pid_t pid, long id, int sig);
482 int shm_open(const char *path, int flags, mode_t mode);
483 int shm_unlink(const char *path);
484 int cpuset(cpusetid_t *setid);
485 int cpuset_setid(cpuwhich_t which, id_t id, cpusetid_t setid);
486 int cpuset_getid(cpulevel_t level, cpuwhich_t which, id_t id, cpusetid_t *setid);
487 int cpuset_getaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, cpuset_t *mask);
488 int cpuset_setaffinity(cpulevel_t level, cpuwhich_t which, id_t id, size_t cpusetsize, const cpuset_t *mask);
489 int faccessat(int fd, const char *path, int amode, int flag);
490 int fchmodat(int fd, const char *path, mode_t mode, int flag);
491 int fchownat(int fd, const char *path, uid_t uid, gid_t gid, int flag);
492 int fexecve(int fd, char **argv, char **envv);
493 int fstatat(int fd, const char *path, struct freebsd11_stat *buf, int flag);
494 int futimesat(int fd, const char *path, struct timeval *times);
495 int linkat(int fd1, const char *path1, int fd2, const char *path2, int flag);
496 int mkdirat(int fd, const char *path, mode_t mode);
497 int mkfifoat(int fd, const char *path, mode_t mode);
498 int mknodat(int fd, const char *path, mode_t mode, uint32_t dev);
499 int openat(int fd, const char *path, int flag, mode_t mode);
500 ssize_t readlinkat(int fd, const char *path, char *buf, size_t bufsize);
501 int renameat(int oldfd, const char *old, int newfd, const char *new);
502 int symlinkat(const char *path1, int fd, const char *path2);
503 int unlinkat(int fd, const char *path, int flag);
504 int posix_openpt(int flags);
505 int gssd_syscall(const char *path);
506 int jail_get(struct iovec *iovp, unsigned int iovcnt, int flags);
507 int jail_set(struct iovec *iovp, unsigned int iovcnt, int flags);
508 int jail_remove(int jid);
509 int closefrom(int lowfd);
510 int __semctl(int semid, int semnum, int cmd, union semun *arg);
511 int msgctl(int msqid, int cmd, struct msqid_ds *buf);
512 int shmctl(int shmid, int cmd, struct shmid_ds *buf);
513 int lpathconf(const char *path, int name);

515 int __cap_rights_get(int version, int fd, cap_rights_t *rightsp);
516 int cap_enter(void);
517 int cap_getmode(u_int *modep);
518 int pdfork(int *fdp, int flags);
519 int pdkill(int fd, int signum);
520 int pdgetpid(int fd, pid_t *pidp);

522 int pselect(int nd, fd_set *in, fd_set *ou, fd_set *ex, const struct timespec *ts, const sigset_t *sm);
523 int getloginclass(char *namebuf, size_t namelen);
524 int setloginclass(const char *namebuf);
525 int rctl_get_racct(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen);
526 int rctl_get_rules(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen);
527 int rctl_get_limits(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen);
528 int rctl_add_rule(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen);
529 int rctl_remove_rule(const void *inbufp, size_t inbuflen, void *outbufp, size_t outbuflen);
530 int posix_fallocate(int fd, off_t offset, off_t len);
531 int posix_fadvise(int fd, off_t offset, off_t len, int advice);
532 int wait6(idtype_t idtype, id_t id, int *status, int options, struct __wrusage *wrusage, siginfo_t *info);
533 int cap_rights_limit(int fd, cap_rights_t *rightsp);
534 int cap_ioctls_limit(int fd, const u_long *cmds, size_t ncmds);
535 ssize_t cap_ioctls_get(int fd, u_long *cmds, size_t maxcmds);
536 int cap_fcntls_limit(int fd, uint32_t fcntlrights);
537 int cap_fcntls_get(int fd, uint32_t *fcntlrightsp);
538 int bindat(int fd, int s, const struct sockaddr *name, int namelen);
539 int connectat(int fd, int s, const struct sockaddr *name, int namelen);
540 int chflagsat(int fd, const char *path, u_long flags, int atflag);
541 int accept4(int s, struct sockaddr *name, __socklen_t *anamelen, int flags);
542 int pipe2(int *fildes, int flags);
543 int aio_mlock(struct aiocb *aiocbp);
544 int procctl(idtype_t idtype, id_t id, int com, void *data);
545 int ppoll(struct pollfd *fds, u_int nfds, const struct timespec *ts, const sigset_t *set);
546 int futimens(int fd, struct timespec *times);
547 int utimensat(int fd, const char *path, struct timespec *times, int flag);

550 int fdatasync(int fd);
551 int fstat(int fd, struct stat *sb);
552 int fstatat(int fd, const char *path, struct stat *buf, int flag);
553 int fhstat(const struct fhandle *u_fhp, struct stat *sb);
554 ssize_t getdirentries(int fd, char *buf, size_t count, off_t *basep);
555 int statfs(const char *path, struct statfs *buf);
556 int fstatfs(int fd, struct statfs *buf);
557 int getfsstat(struct statfs *buf, long bufsize, int mode);
558 int fhstatfs(const struct fhandle *u_fhp, struct statfs *buf);
559 int mknodat(int fd, const char *path, mode_t mode, dev_t dev);
560 int kevent(int fd, struct kevent *changelist, int nchanges, struct kevent *eventlist, int nevents, const struct timespec *timeout);
561 int cpuset_getdomain(cpulevel_t level, cpuwhich_t which, id_t id, size_t domainsetsize, domainset_t *mask, int *policy);
562 int cpuset_setdomain(cpulevel_t level, cpuwhich_t which, id_t id, size_t domainsetsize, domainset_t *mask, int policy);
563 int getrandom(void *buf, size_t buflen, unsigned int flags);
564 int getfhat(int fd, char *path, struct fhandle *fhp, int flags);
565 int fhlink(struct fhandle *fhp, const char *to);
566 int fhlinkat(struct fhandle *fhp, int tofd, const char *to,);
567 int fhreadlink(struct fhandle *fhp, char *buf, size_t bufsize);
568 int funlinkat(int dfd, const char *path, int fd, int flag);
569 ssize_t copy_file_range(int infd, off_t *inoffp, int outfd, off_t *outoffp, size_t len, unsigned int flags);
570 int __sysctlbyname(const char *name, size_t namelen, void *old, size_t *oldlenp, void *new, size_t newlen);
571 int shm_open2(const char *path, int flags, mode_t mode, int shmflags, const char *name);
572 int shm_rename(const char *path_from, const char *path_to, int flags);
573 int sigfastblock(int cmd, uint32_t *ptr);
574 int __realpathat(int fd, const char *path, char *buf, size_t size, int flags);
575 int close_range(u_int lowfd, u_int highfd, int flags);
576 int rpctls_syscall(int op, const char *path);